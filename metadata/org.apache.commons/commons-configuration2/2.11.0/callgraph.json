{
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()": ["org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper#initBean(Object,BeanDeclaration)": [
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getNestedBeanDeclarations()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getNestedBeanDeclarations()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.initBeanProperties(Object,BeanDeclaration)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNestedBeanDeclarations()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.initProperty(Object,String,Object)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.getDefaultClass(Object,String)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.createPropertyCollection(String,Class<?>)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(File)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,File)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#immutableChildConfigurationsAt(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.toImmutable(List<? extends HierarchicalConfiguration<?>>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#childConfigurationsAt(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#compareChildNodePointers(NodePointer,NodePointer)": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getBaseValue()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getBaseValue()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy(String,boolean)": [
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy.fetchHomeDirectory(String)",
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy.<init>()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser#formatComponent(StringBuilder,Calendar)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#padNum(StringBuilder,int,int)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConstructorArgs()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getChildren(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNode()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#getConfigurationBuilder(ConfigurationDeclaration)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.createWrapperBuilder(ConfigurationBuilder<? extends Configuration>,Configuration)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationBuilder(ConfigurationDeclaration)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#createWrapperConfiguration(ConfigurationBuilder)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#createPath(File)": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper.initProperty(Object,String,Object)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.isPropertyWriteable(Object,String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#setFooter(String)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setFooterComment(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalFooterCooment(boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getFooterComment()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.constructCanonicalComment(String,boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#initListeners(FileBasedConfigurationBuilder<T extends FileBasedConfiguration>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#copyEventListeners(BasicConfigurationBuilder<?>,EventListenerList)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)"
    ],
    "org.apache.commons.configuration2.MapConfiguration#clone()": [
        "org.apache.commons.configuration2.AbstractConfiguration#cloneInterpolator(AbstractConfiguration)",
        "org.apache.commons.configuration2.event.BaseEventSource#clone()",
        "org.apache.commons.configuration2.ConfigurationUtils.clone(Object)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getComment(String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getComment()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser#parseComponent(String,int,Calendar)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#checkLength(String,int,int)"],
    "org.apache.commons.configuration2.io.FileHandler#save(String,FileLocator)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.FileHandler#save(URL,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getURL(String,String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#clear()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#immutableSubset(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.ConfigurationUtils.unmodifiableConfiguration(Configuration)",
        "org.apache.commons.configuration2.AbstractConfiguration#subset(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#subset(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String,String)": [
        "org.apache.commons.configuration2.SubsetConfiguration#initInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.SubsetConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.determineIndex(T,T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getDuration(String,Duration)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#apply(ImmutableNode,Operations)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#fetchReplacementMap()",
        "org.apache.commons.configuration2.tree.ImmutableNode#replaceChildren(Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Collection<E>,Collection<? extends E>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#fetchRemovalSet()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#newNodesAdded(Collection<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getConfiguration(int)": [
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()": [
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration#getChildKey(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.initDefaultLocationStrategy()": [
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy(boolean)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.io.ClasspathLocationStrategy.<init>()",
        "org.apache.commons.configuration2.io.BasePathLocationStrategy.<init>()",
        "org.apache.commons.configuration2.io.CombinedLocationStrategy#CombinedLocationStrategy(Collection<? extends FileLocationStrategy>)",
        "org.apache.commons.configuration2.io.ProvidedURLLocationStrategy.<init>()",
        "org.apache.commons.configuration2.io.FileSystemLocationStrategy.<init>()",
        "org.apache.commons.configuration2.io.AbsoluteNameLocationStrategy.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#addDefinitionBuilderChangeListener(ConfigurationBuilder<? extends HierarchicalConfiguration<?>>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#reset()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#checkIndex(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#PropertiesReader(Reader)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.<init>()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNestedBeanDeclarations()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getChildren()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedChildName(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#nodeName()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNode()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#createBeanDeclaration(NodeData<?>)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildEventListeners(BasicConfigurationBuilder<? extends Configuration>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#copyEventListeners(BasicConfigurationBuilder<?>)"],
    "org.apache.commons.configuration2.CombinedConfiguration#setConversionExpressionEngine(ExpressionEngine)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#createParentMapping(ImmutableNode)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)"],
    "org.apache.commons.configuration2.tree.NodeNameMatchers$NodeNameMatchers$1#matches(T,NodeHandler<T>,String)": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)"],
    "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,String)": [
        "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,Date[],String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()": ["org.apache.commons.configuration2.ConfigurationUtils$EventSource$1.<init>()"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getMatchingChildren(ImmutableNode,NodeMatcher<C>,C)": ["org.apache.commons.configuration2.tree.ImmutableNode#stream()"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setSynchronizer(Synchronizer)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#DefaultExpressionEngine(DefaultExpressionEngineSymbols,NodeMatcher<String>)": [
        "org.apache.commons.configuration2.tree.NodeNameMatchers.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine.<init>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)": ["org.apache.commons.configuration2.AbstractConfiguration#getCollection(Class<T>,String,Collection<T>,Collection<T>)"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.getBasePath(URL)": ["org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()"],
    "org.apache.commons.configuration2.CombinedConfiguration#removeConfigurationAt(int)": [
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getName()",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#unregisterListenerAt(Configuration)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load()": [
        "org.apache.commons.configuration2.io.FileHandler#load(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#isAllowFailOnInit(ConfigurationDeclaration)": [
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isOptional()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isForceCreate()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedChildName(String)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedName(String)"],
    "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#determineConfigurationClass(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.fetchCurrentFileName(Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.extractExtension(String)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationClass()",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#getMatchingConfigurationClass()",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#getExtension()"
    ],
    "org.apache.commons.configuration2.INIConfiguration#setSeparatorUsedInOutput(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)"
    ],
    "org.apache.commons.configuration2.builder.CopyObjectDefaultHandler#CopyObjectDefaultHandler(BuilderParameters)": ["org.apache.commons.configuration2.builder.CopyObjectDefaultHandler.<init>()"],
    "org.apache.commons.configuration2.XMLConfiguration#initProperties(XMLDocumentHelper,boolean)": [
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.XMLDocumentHelper#getSourcePublicID()",
        "org.apache.commons.configuration2.XMLConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.XMLConfiguration#setPublicID(String)",
        "org.apache.commons.configuration2.XMLConfiguration#constructHierarchy(Builder,MutableObject<String>,Element,Map<ImmutableNode, Object>,boolean,int)",
        "org.apache.commons.configuration2.XMLConfiguration#setSystemID(String)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#mergeRoot(ImmutableNode,String,Map<ImmutableNode, ?>,Object,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.XMLDocumentHelper#getSourceSystemID()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchEventSource()",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#splitString(String,boolean)": [
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#getDelimiter()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyToModel(String,Iterable<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#parse(Object)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey()": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey(boolean)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,Boolean)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setListDelimiterHandler(ListDelimiterHandler)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.Operations#propagateChange(ImmutableNode,ImmutableNode,int)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.checkIfNodeDefined(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNodeToReplace(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNodeToRemove(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getParent(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addChildrenOperation(ChildrenUpdateOperation)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getCollection(Class<T>,String,Collection<T>,Collection<T>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getConversionHandler()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#toCollection(Object,Class<T>,ConfigurationInterpolator,Collection<T>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration.handleDefaultCollection(Collection<T>,Collection<T>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.DataConfiguration#getConversionHandler()"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()": [
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#SubsetIterator(Iterator<String>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String,String)",
        "org.apache.commons.configuration2.ImmutableConfiguration#getKeys(String,String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getConfigurationNames()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory#BuilderConfigurationWrapperFactory()": [
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.EventSourceSupport.<staticinit>()",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory#BuilderConfigurationWrapperFactory(EventSourceSupport)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#loadFromStream(InputStream,String,URL)": [
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#lock(LockMode)",
        "org.apache.commons.configuration2.io.FileHandler#loadFromTransformedStream(InputStream,String)",
        "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)",
        "org.apache.commons.configuration2.io.FileHandler#checkContent()",
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#unlock(LockMode)",
        "org.apache.commons.configuration2.io.FileHandler#loadFromStreamDirectly(InputStream)",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()",
        "org.apache.commons.configuration2.io.FileHandler#fetchSynchronizerSupport()",
        "org.apache.commons.configuration2.io.FileHandler#getContent()",
        "org.apache.commons.configuration2.io.FileHandler#injectFileLocator(URL)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String,String)": [
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String,String)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String,String)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(File)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,File)"],
    "org.apache.commons.configuration2.tree.OverrideCombiner#canCombine(ImmutableNode,ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.NodeCombiner#isListNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigDecimalArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DataConfiguration#getBigDecimalArray(String,BigDecimal[]...)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.isCommentLine(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.isCommentLine(String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getKeysInternal(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.MapConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SystemConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()",
        "org.apache.commons.configuration2.web.AppletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#PrefixedKeysIterator(Iterator<String>,String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletConfiguration#getKeysInternal()"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.constructFile(String,String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.toURL(File)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.SubsetConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.EnvironmentConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#parse(Object)",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.JNDIConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.BaseConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.DataConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.MapConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.CompositeConfiguration#addPropertyDirect(String,Object)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getOutputStream(File)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#createPath(File)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintStream)": ["org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintWriter)"],
    "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()": ["org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getName()": ["org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath()"
    ],
    "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#ReadWriteSynchronizer(ReadWriteLock)": [
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer.createDefaultLock()",
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer.<init>()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#Parameters()": ["org.apache.commons.configuration2.builder.fluent.Parameters#Parameters(DefaultParametersManager)"],
    "org.apache.commons.configuration2.XMLDocumentHelper.createElementMapping(Document,Document)": ["org.apache.commons.configuration2.XMLDocumentHelper.createElementMappingForNodes(Node,Node,Map<Node, Node>)"],
    "org.apache.commons.configuration2.DataConfiguration#setPropertyInternal(String,Object)": ["org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getChild(ImmutableNode,int)": ["org.apache.commons.configuration2.tree.ImmutableNode#getChildren()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.trimComment(String,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.<staticinit>()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.stripCommentChar(String,boolean)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.Operations#apply(ImmutableNode,int)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeNameOperation#apply(ImmutableNode,Operations)",
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributeOperation#apply(ImmutableNode,Operations)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#apply(ImmutableNode,Operations)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#handleAddedNodes(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#propagateChange(ImmutableNode,ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeValueOperation#apply(ImmutableNode,Operations)",
        "org.apache.commons.configuration2.tree.ModelTransaction.RemoveAttributeOperation#apply(ImmutableNode,Operations)",
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributesOperation#apply(ImmutableNode,Operations)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#createConstructorArg(NodeData<?>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.isBeanDeclarationArgument(NodeData<?>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getAttribute(NodeData<?>,String)",
        "org.apache.commons.configuration2.beanutils.ConstructorArg.forBeanDeclaration(BeanDeclaration,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.ConstructorArg.forValue(Object,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#createBeanDeclaration(NodeData<?>)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#mergeRoot(ImmutableNode,String,Map<ImmutableNode, ?>,Object,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#addNewReferences(Map<ImmutableNode, ?>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAttributesOperation(ImmutableNode,Map<String, Object>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#addNewReference(ImmutableNode,Object)",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodesOperation(ImmutableNode,Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.determineRootName(ImmutableNode,ImmutableNode,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeValueOperation(ImmutableNode,Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeNameOperation(ImmutableNode,String)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#handleAttributeKeys(String,T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#attributeKey(String,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#attributeKey(String,String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)"],
    "org.apache.commons.configuration2.ConfigurationXMLReader#ConfigurationXMLReader()": [
        "org.apache.commons.configuration2.ConfigurationXMLReader.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationXMLReader.<init>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#SubsetIterator(Iterator<String>)": ["org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator.<init>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#handleLeafNode(ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#interpolateAttributes(ImmutableNode,NodeHandler<ImmutableNode>,Map<String, Object>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#valueChanged(Object,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#storeInterpolatedNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.io.URLConnectionOptions#openConnection(URL)": ["org.apache.commons.configuration2.io.URLConnectionOptions#apply(URLConnection)"],
    "org.apache.commons.configuration2.INIConfiguration#getSeparatorUsedInInput()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addAttributeOperation(ImmutableNode,String,Object)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributeOperation#AddAttributeOperation(String,Object)",
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocaleList(String)": ["org.apache.commons.configuration2.DataConfiguration#getLocaleList(String,List<Locale>)"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getSeparator(String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getSeparator()"
    ],
    "org.apache.commons.configuration2.io.FileHandler.<staticinit>()": ["org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1.<init>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String,boolean)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createConnectedSubConfiguration(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createIndependentSubConfiguration(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#nodeName(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.ConfigurationXMLReader#getRootName()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.RemoveAttributeOperation#apply(ImmutableNode,Operations)": ["org.apache.commons.configuration2.tree.ImmutableNode#removeAttribute(String)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfigurationAt(int)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getName()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getConfiguration()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeNameOperation(ImmutableNode,String)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeNameOperation#ChangeNodeNameOperation(String)",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanFactoryParameter()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)": [
        "org.apache.commons.configuration2.MapConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.JNDIConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.BaseConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.SubsetConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.DataConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.CompositeConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#containsKeyInternal(String)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(File)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,File)"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalHeaderComment(boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.constructCanonicalComment(String,boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getHeaderComment()"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)",
        "org.apache.commons.configuration2.convert.PropertyConverter.<staticinit>()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getStringArray(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getStringArray(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getStringArray(String)"
    ],
    "org.apache.commons.configuration2.builder.JndiBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()"],
    "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getByte(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)",
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"
    ],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)": [
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#splitString(String,boolean)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler#splitString(String,boolean)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#splitString(String,boolean)"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#ConfigurationSetIterator()": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xml(String)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(String)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()": ["org.apache.commons.configuration2.io.FileLocator#FileLocator(FileLocatorBuilder)"],
    "org.apache.commons.configuration2.resolver.CatalogResolver#setBaseDir(String)": ["org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#setBaseDir(String)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getValue()": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toDate(Object,String)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#setSeparator(String,String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setSeparator(String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#ConfigData(Configuration,String,String)": [
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#parseAt(String)",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData.<init>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendar(String,Calendar)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendar(String,Calendar,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setURL(URL,URLConnectionOptions)": [
        "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.BaseConfiguration#addPropertyDirect(String,Object)": ["org.apache.commons.configuration2.BaseConfiguration#getPropertyInternal(String)"],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet#ConfigurationSet(Configuration)": ["org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.<init>()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#initSubnodeConfiguration(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)"
    ],
    "org.apache.commons.configuration2.event.EventListenerList#getEventListenerIterator(EventType<T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#EventListenerIterator(Iterator<EventListenerRegistrationData<?>>,EventType<T extends Event>)"],
    "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.fetchCurrentFileName(Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.io.FileHandler#getFileName()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#Builder()": ["org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder.<init>()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createAndAddConfigurations(CombinedConfiguration,List<ConfigurationDeclaration>,List<ConfigurationBuilder<? extends Configuration>>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#addChildConfiguration(CombinedConfiguration,ConfigurationDeclaration,ConfigurationBuilder<? extends Configuration>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createConfigurationBuilder(ConfigurationDeclaration)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getIntegerList(String)": ["org.apache.commons.configuration2.DataConfiguration#getIntegerList(String,List<Integer>)"],
    "org.apache.commons.configuration2.PrefixedKeysIterator#next()": ["org.apache.commons.configuration2.PrefixedKeysIterator#setNextElement()"],
    "org.apache.commons.configuration2.tree.OverrideCombiner#addAttributes(Builder,ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttribute(String,Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.INIConfiguration#isSectionLine(String)": [
        "org.apache.commons.configuration2.INIConfiguration.isStrictSection(String)",
        "org.apache.commons.configuration2.INIConfiguration.isNonStrictSection(String)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)": ["org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>)"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanProperties()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#interpolate(Object)",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isReservedAttributeName(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getAttributeNames()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedAttributeName(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttribute(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNode()"
    ],
    "org.apache.commons.configuration2.ConfigurationConverter.getConfiguration(Properties)": ["org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Properties)"],
    "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributesOperation#AddAttributesOperation(Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributesOperation.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<init>()": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter.<staticinit>()"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTrackedNodeHandler(NodeSelector)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationConverter#closeElements(DefaultConfigurationKey,DefaultConfigurationKey)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementEnd(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#differenceKey(DefaultConfigurationKey)",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#reverseIterator(DefaultConfigurationKey)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndexInternal(String)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)"],
    "org.apache.commons.configuration2.ConfigurationUtils.copy(Configuration,Configuration)": ["org.apache.commons.configuration2.ConfigurationUtils.copy(ImmutableConfiguration,Configuration)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveAddKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#prepareAdd(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#prepareAdd(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.createDefensiveCopies(HashMap<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getOptions(String)"
    ],
    "org.apache.commons.configuration2.PrefixedKeysIterator#PrefixedKeysIterator(Iterator<String>,String,String)": ["org.apache.commons.configuration2.PrefixedKeysIterator.<init>()"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#printValue(PrintWriter,int,Object)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#printValue(PrintWriter,int,Object)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.transformMap(Map<?, ?>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.formatDate(Date)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#quoteString(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#propertyLoaded(String,String,Deque<URL>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.DataConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.PropertiesConfiguration#loadIncludeFile(String,boolean,Deque<URL>)",
        "org.apache.commons.configuration2.PropertiesConfiguration.getIncludeOptional()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.PropertiesConfiguration.getInclude()",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.PropertiesConfiguration#isIncludesAllowed()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyInternal(String,Object)"
    ],
    "org.apache.commons.configuration2.reloading.ReloadingController#checkForReloading(Object)": [
        "org.apache.commons.configuration2.reloading.ReloadingController#getDetector()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#isReloadingRequired()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#getDetector()",
        "org.apache.commons.configuration2.reloading.ManagedReloadingDetector#isReloadingRequired()",
        "org.apache.commons.configuration2.reloading.ReloadingEvent#ReloadingEvent(ReloadingController,Object)",
        "org.apache.commons.configuration2.reloading.ReloadingController#isInReloadingState()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#isReloadingRequired()",
        "org.apache.commons.configuration2.event.EventListenerList#fire(Event)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#isReloadingRequired()"
    ],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>,Class<?>)": ["org.apache.commons.configuration2.builder.DefaultParametersManager.DefaultHandlerData#DefaultHandlerData(DefaultParametersHandler<?>,Class<?>,Class<?>)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,boolean)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,Boolean)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()": [
        "org.apache.commons.configuration2.DatabaseConfiguration#isAutoCommit()",
        "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#close(Connection,Statement,ResultSet)",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getDataSource()",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)$AbstractJdbcOperation$1#performOperation()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"
    ],
    "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy(boolean)": ["org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy(String,boolean)"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#setBlankLinesBefore(String,int)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setBlankLines(int)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl(FileHandler)"],
    "org.apache.commons.configuration2.SubsetConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerChildDefaultsHandler(Class<D>,DefaultParametersHandler<? super D>,Class<?>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getChildDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>,Class<?>)"
    ],
    "org.apache.commons.configuration2.XMLDocumentHelper#XMLDocumentHelper(Document,Map<Node, Node>,String,String)": ["org.apache.commons.configuration2.XMLDocumentHelper.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findNodesForKey(KeyIterator,T,Collection<QueryResult<T>>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findChildNodesByName(NodeHandler<T>,T,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#processSubNodes(KeyIterator,List<T>,Collection<QueryResult<T>>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttribute()",
        "org.apache.commons.configuration2.tree.QueryResult.createAttributeResult(T,String)",
        "org.apache.commons.configuration2.tree.QueryResult.createNodeResult(T)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey(boolean)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isPropertyKey()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#setProperty(String,NodeSelector,Object,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeUpdateData#getRemovedNodes()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.initializeUpdateTransaction(ModelTransaction,Map<QueryResult<ImmutableNode>, Object>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.initializeClearTransaction(ModelTransaction,Collection<QueryResult<ImmutableNode>>)",
        "org.apache.commons.configuration2.tree.NodeUpdateData#getChangedValues()",
        "org.apache.commons.configuration2.tree.NodeUpdateData#getNewValues()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#initializeAddTransaction(ModelTransaction,String,Iterable<?>,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getQueryRoot()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#configure(BuilderParameters[]...)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#configure(BuilderParameters[]...)"],
    "org.apache.commons.configuration2.io.FileHandler#getLocationStrategy()": [
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getLocationStrategy(FileLocator)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBooleanList(String,List<Boolean>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#PropertyListConfiguration()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#FileHandler()": ["org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased)"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toShort(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.JNDIConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#contains(Iterator<String>,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#locateFromURL(String,String)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#locateFromURL(String,String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getOptions(String)",
        "org.apache.commons.configuration2.io.VFSFileSystem.VFSURLStreamHandler.<init>()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList#getRegistrationsForSuperType(EventType<T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerRegistrationData#getEventType()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#nodeName()": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(URL)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,URL)"],
    "org.apache.commons.configuration2.ConfigurationUtils.clone(Object)": [
        "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.updateDataWithNewTrackedNode(TreeData,ImmutableNode,NodeKeyResolver<ImmutableNode>,MutableObject<NodeSelector>)": [
        "org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(String)",
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#nodeKey(T,Map<T, String>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeTracker#trackNodes(Collection<NodeSelector>,Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(File)": [
        "org.apache.commons.configuration2.io.FileHandler#save(File,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#validate()": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.XMLConfiguration#createDocument()",
        "org.apache.commons.configuration2.XMLConfiguration#createDocumentBuilder()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.XMLDocumentHelper.transform(Transformer,Source,Result)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.XMLConfiguration#createTransformer()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#getConfigurations()": ["org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.defensiveCopy(T[])"],
    "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getPrivateCatalog()": [
        "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog.<init>()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager.<staticinit>()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog#loadSystemCatalogs()"
    ],
    "org.apache.commons.configuration2.io.CombinedLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.FileSystemLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.ProvidedURLLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.CombinedLocationStrategy#getSubStrategies()",
        "org.apache.commons.configuration2.io.CombinedLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.ClasspathLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.BasePathLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.AbsoluteNameLocationStrategy#locate(FileSystem,FileLocator)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#handleEventListenerProviders(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.EventListenerParameters#getListeners()",
        "org.apache.commons.configuration2.event.EventListenerList#addAll(EventListenerList)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(byte[],int,int)": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(byte[],int,int)"],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNewNodes(Collection<? extends ImmutableNode>)": ["org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Collection<E>,Collection<? extends E>)"],
    "org.apache.commons.configuration2.builder.DefaultReloadingDetectorFactory#createReloadingDetector(FileHandler,FileBasedBuilderParametersImpl)": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#refresh()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler,long)",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getReloadingRefreshDelay()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#resolveSingleVariable(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#isSingleVariable(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#createNodeAddData(String,QueryResult<T>)": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.NodeAddData#NodeAddData(T,String,boolean,Collection<String>)",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.invalidPath(String,String)"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler)": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector.<staticinit>()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler,long)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.<init>()": ["org.apache.commons.configuration2.resolver.DefaultEntityResolver.<init>()"],
    "org.apache.commons.configuration2.DataConfiguration#getDoubleArray(String,double[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#nextProperty()": [
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#parseProperty(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#readProperty()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#readProperty()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#parseProperty(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getMatchingChildrenCount(T,NodeMatcher<C>,C)": ["org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"],
    "org.apache.commons.configuration2.io.FileHandler#save(OutputStream,String)": ["org.apache.commons.configuration2.io.FileHandler#saveToStream(OutputStream,String,URL)"],
    "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.web.ServletContextConfiguration#ServletContextConfiguration(Servlet)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#fetchBasePath(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.constructFile(String,String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.convertFileToURL(File)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#detach(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getNode()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#setRootNode(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeData(ImmutableNode,TreeData)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.initialRootNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#positionToIndex(int)": ["org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getStartOffset()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#PropertiesConfigurationLayout(PropertiesConfigurationLayout)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.<init>()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#copyFrom(PropertiesConfigurationLayout)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#setParameters(Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#setParameters(Map<String, Object>)"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,String,Object)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fireBuilderEvent(ConfigurationBuilderEvent)": ["org.apache.commons.configuration2.event.EventListenerList#fire(Event)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()$AbstractJdbcOperation$1.<init>()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeHandler#getParent(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getParentHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(String)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(String)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#escapedNodeName(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#nodeKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#nodeKey(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setBlancLines(int)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setBlankLines(int)"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#setProperty(String,Object,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#setProperty(String,NodeSelector,Object,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#ini(URL)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(URL)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#subset(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#subset(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#subset(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#NodeWrapper(T,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper.<init>()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#PropertiesConfigurationLayout()": ["org.apache.commons.configuration2.PropertiesConfigurationLayout#PropertiesConfigurationLayout(PropertiesConfigurationLayout)"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>)"],
    "org.apache.commons.configuration2.io.FileHandler#isLocationDefined()": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.isLocationDefined(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.io.FileHandler.normalizeFileURL(String)": ["org.apache.commons.configuration2.io.FileHandler.<staticinit>()"],
    "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": ["org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#locationStrategy(FileLocationStrategy)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trimLeft(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#hasLeadingDelimiter(String)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#processDocument(ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#nodeKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String,boolean)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()": [
        "org.apache.commons.configuration2.XMLConfiguration#getRootElementNameInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementNameInternal()"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getFileName(String)": [
        "org.apache.commons.configuration2.io.DefaultFileSystem#getFileName(String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#resolveURI(String)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#toString()": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#toString()"],
    "org.apache.commons.configuration2.io.FileHandler#load(String,FileLocator)": [
        "org.apache.commons.configuration2.io.FileHandler#load(URL,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#createLocatorWithFileName(String,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locateOrThrow(FileLocator)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#getResultBuilder()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#XMLPropertyListHandler()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#mergeRoot(ImmutableNode,String,Map<ImmutableNode, ?>,Object,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#createNode()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.updateAttributes(ImmutableNode,Element)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.clearAttributes(Element)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.put(FileLocator,Map<String, Object>)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator#getLocationStrategy()",
        "org.apache.commons.configuration2.io.FileLocator#getFileSystem()",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.<staticinit>()": [
        "org.apache.commons.configuration2.tree.UnionCombiner.<init>()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileName(String)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#findNextIndices()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#hasLeadingDelimiter(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#length()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKeyPart()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubsetRootNode(Collection<QueryResult<ImmutableNode>>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttribute(String,Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeValue(NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#properties(URL)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(URL)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURLList(String)": ["org.apache.commons.configuration2.DataConfiguration#getURLList(String,List<URL>)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getInt(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#Parameters(DefaultParametersManager)": [
        "org.apache.commons.configuration2.builder.DefaultParametersManager#DefaultParametersManager()",
        "org.apache.commons.configuration2.builder.fluent.Parameters.<init>()"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup.Variable#setValue(Object)": [
        "org.apache.commons.configuration2.interpol.ExprLookup.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#getInMemoryRepresentation()": [
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTreeData()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getBlankLinesBefore(String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getBlankLines()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.fromParameters(Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodes(String,Collection<? extends T>)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodesInternal(String,Collection<? extends T>)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#ReloadingMultiFileConfigurationBuilder(Class<T extends FileBasedConfiguration>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)",
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#resolveEntity(String,String)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.resolver.CatalogResolver#getResolver()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.locate(FileSystem,String,String)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.io.ConfigurationLogger#warn(String,Throwable)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#createNodeBuilders(BufferedReader,Builder,Map<String, Builder>)": [
        "org.apache.commons.configuration2.INIConfiguration#parseValue(String,BufferedReader)",
        "org.apache.commons.configuration2.INIConfiguration#createValueNodes(Builder,String,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.INIConfiguration#isCommentLine(String)",
        "org.apache.commons.configuration2.INIConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.INIConfiguration#findSeparator(String)",
        "org.apache.commons.configuration2.INIConfiguration#isSectionLine(String)"
    ],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#PeriodicReloadingTrigger(ReloadingController,Object,long,TimeUnit,ScheduledExecutorService)": [
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger.<init>()",
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger.createDefaultExecutorService()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#remove()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#remove()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#remove()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#remove()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.initialRootNode(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#unregisterListenerAt(Configuration)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printValue(PrintWriter,int,Object)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#DefaultBeanFactory()": ["org.apache.commons.configuration2.beanutils.DefaultBeanFactory#DefaultBeanFactory(ConversionHandler)"],
    "org.apache.commons.configuration2.builder.CopyObjectDefaultHandler#initializeDefaults(Object)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.copyProperties(Object,Object)",
        "org.apache.commons.configuration2.builder.CopyObjectDefaultHandler#getSource()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.EventListenerParameters#getParameters()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.createDefaultProviders()": ["org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"],
    "org.apache.commons.configuration2.XMLConfiguration#getDocument()": [
        "org.apache.commons.configuration2.XMLConfiguration#getDocumentHelper()",
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#getReferenceHandler()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getReferenceNodeHandler()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createXMLDefinitionBuilder(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#configure(BuilderParameters[]...)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#configure(BuilderParameters[]...)"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider.createParameterObject(String)": ["org.apache.commons.configuration2.ConfigurationUtils.loadClass(String)"],
    "org.apache.commons.configuration2.JSONConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyValue(String)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#unescapePropertyValue(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#unescapePropertyValue(String)"
    ],
    "org.apache.commons.configuration2.io.FileSystemLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.DefaultFileSystem#locateFromURL(String,String)",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.VFSFileSystem#locateFromURL(String,String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getByteList(String,List<Byte>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#handleManagedBuilderEvent(ConfigurationBuilderEvent)": [
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createEventWithChangedSource(ConfigurationBuilderEvent)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetResult()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fireBuilderEvent(ConfigurationBuilderEvent)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#sizeInternal()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#getKeyList()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#visitDefinedKeys()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#containsKeyInternal(String)": ["org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.constructFile(String,String)": ["org.apache.commons.configuration2.io.FileLocatorUtils.appendPath(String,String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearEventListeners()": [
        "org.apache.commons.configuration2.event.BaseEventSource#clearEventListeners()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearEventListeners()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearEventListeners()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#createAttributeDataList(ConfigurationNodePointer<T>,QName)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute.<staticinit>()",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.qualifiedName(QName)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getConfigurationNode()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.prefixName(String,String)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#addAttributeData(ConfigurationNodePointer<T>,List<String>,String)"
    ],
    "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeString(String)": [
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#getDelimiter()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#clearPropertyDirect(String)": ["org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)"],
    "org.apache.commons.configuration2.ConfigurationUtils.enableRuntimeExceptions(Configuration)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent#getCause()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearErrorListeners()": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearErrorListeners()",
        "org.apache.commons.configuration2.event.BaseEventSource#clearErrorListeners()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearErrorListeners()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#removeAutoSaveListener()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.AutoSaveListener#updateFileHandler(FileHandler)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceRoot(ImmutableNode,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeDataForRootAndTracker(ImmutableNode,NodeTracker)",
        "org.apache.commons.configuration2.tree.NodeTracker#update(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#checkContent()": [
        "org.apache.commons.configuration2.io.FileHandler#getContent()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#escapeComments(String)": ["org.apache.commons.configuration2.INIConfiguration#getCommentLeadingCharsUsedInInput()"],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#configure(BuilderParameters[]...)": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#configure(BuilderParameters[]...)"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#fetchFileHandlerFromParameters()": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.initNodeCombinerListNodes(CombinedConfiguration,HierarchicalConfiguration<?>,String)": [
        "org.apache.commons.configuration2.tree.NodeCombiner#addListNode(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#getNodeCombiner()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getNodeCombiner()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.wrapNode(T,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#NodeWrapper(T,NodeHandler<T>)"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Log)",
        "org.apache.commons.configuration2.io.ConfigurationLogger.createLoggerForClass(Class<?>)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#createBean(BeanDeclaration)": ["org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)"],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodePointer()": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#createNodePointer(int)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#setPosition(int)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#positionToIndex(int)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getPosition()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createNodePointer(int)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#attributeIterator(QName)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#ConfigurationNodeIteratorAttribute(ConfigurationNodePointer<T>,QName)"],
    "org.apache.commons.configuration2.io.FileHandler#save(String)": [
        "org.apache.commons.configuration2.io.FileHandler#save(String,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()": ["org.apache.commons.configuration2.AbstractConfiguration#getKeys()"],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.qualifiedName(QName)": ["org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.prefixName(String,String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath()"
    ],
    "org.apache.commons.configuration2.INIConfiguration#writeProperty(PrintWriter,String,Object,String)": [
        "org.apache.commons.configuration2.INIConfiguration#escapeValue(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#beginRead()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer#beginRead()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)": ["org.apache.commons.configuration2.io.FileUtils.toFile(URL)"],
    "org.apache.commons.configuration2.io.FileHandler#load(File)": [
        "org.apache.commons.configuration2.io.FileHandler#load(URL)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.toURL(File)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDoubleList(String)": ["org.apache.commons.configuration2.DataConfiguration#getDoubleList(String,List<Double>)"],
    "org.apache.commons.configuration2.tree.QueryResult.createNodeResult(T)": ["org.apache.commons.configuration2.tree.QueryResult#QueryResult(T,String)"],
    "org.apache.commons.configuration2.XMLConfiguration#getSystemID()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setConfigurationNameColumn(String)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController.<staticinit>()": ["org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#MultiReloadingControllerDetector(CombinedReloadingController)"],
    "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#remove()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#remove()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#remove()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#remove()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#load(PropertiesConfiguration,Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()": [
        "org.apache.commons.configuration2.reloading.ReloadingController#resetReloadingState()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.<init>()": ["org.apache.commons.configuration2.INIConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#DateFieldParser(int,int)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser.<init>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#DateFieldParser(int,int,int)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser#DateSeparatorParser(String)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#xml()": ["org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.XMLDocumentHelper.createElementMappingForNodes(Node,Node,Map<Node, Node>)": ["org.apache.commons.configuration2.XMLDocumentHelper.createElementMappingForNodes(Node,Node,Map<Node, Node>)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearPropertyDirect(String)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String,BigDecimal)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String,BigDecimal)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String,BigDecimal)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String,BigDecimal)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subnodeConfigurationChanged(ConfigurationEvent)": [
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.event.ConfigurationEvent#isBeforeUpdate()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#AbstractHierarchicalConfiguration(NodeModel<T>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#PropertiesConfiguration()": [
        "org.apache.commons.configuration2.PropertiesConfiguration#createLayout()",
        "org.apache.commons.configuration2.PropertiesConfiguration.<init>()",
        "org.apache.commons.configuration2.PropertiesConfiguration#installLayout(PropertiesConfigurationLayout)",
        "org.apache.commons.configuration2.BaseConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerMissingProviders(CombinedBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getProviders()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerMissingProviders(Map<String, ConfigurationBuilderProvider>)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)$AbstractJdbcOperation$1.<init>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog#normalizeURI(String)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getInterpolator()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#getCommentLeadingCharsUsedInInput()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.ImmutableConfiguration#getDuration(String,Duration)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toDuration(Object)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getNumberOfConfigurations()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getList(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String,List<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.CompositeConfiguration#getList(String,List<?>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendar(String,String)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendar(String,Calendar,String)",
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,long)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,long)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,long)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,long)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#trackNode(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeTracker.trackDataForAddedObserver(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,TrackedNodeData)",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#configure(BuilderParameters[]...)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#setParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#setParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#handleEventListenerProviders(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.EventListenerParameters#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String)"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getNestedBeanDeclarations()": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#get(Function<? super BeanDeclaration, ? extends Map<String, Object>>)"],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#stop()": ["org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#isRunning()"],
    "org.apache.commons.configuration2.SubnodeConfiguration#cloneNodeModel()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getRootSelector()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#TrackedNodeModel(InMemoryNodeModelSupport,NodeSelector,boolean)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackNode(NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getParent()"
    ],
    "org.apache.commons.configuration2.beanutils.ConstructorArg.forValue(Object)": ["org.apache.commons.configuration2.beanutils.ConstructorArg.forValue(Object,String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,Double)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,Double)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#updateParentMapping()": [
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#updateParentMappingForAddedNodes()",
        "org.apache.commons.configuration2.tree.ModelTransaction#updateParentMappingForRemovedNodes()",
        "org.apache.commons.configuration2.tree.ModelTransaction#rebuildParentMapping()"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#getDynaClass()": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#ConfigurationDynaClass(Configuration)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#setHeader(String)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setHeaderComment(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#setDateFormat(String)": ["org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()"],
    "org.apache.commons.configuration2.ConfigurationConverter#ConfigurationConverter()": ["org.apache.commons.configuration2.ConfigurationConverter.<init>()"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.createInterpolator(InterpolatorSpecification)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#addDefaultLookups(Collection<? extends Lookup>)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#getPrefixLookups()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setStringConverter(Function<Object, String>)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#registerLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setParentInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#getStringConverter()",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#getParentInterpolator()",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#getDefaultLookups()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearTree(String,NodeKeyResolver<ImmutableNode>)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#clearTree(String,NodeSelector,NodeKeyResolver<ImmutableNode>)"],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.isSectionNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)": ["org.apache.commons.configuration2.ex.ConfigurationException.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,byte)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,byte)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,byte)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,byte)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodesToAdd(String,Iterable<?>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getEventListeners(EventType<T extends Event>)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getEventListeners(EventType<T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()",
        "org.apache.commons.configuration2.event.BaseEventSource#getEventListeners(EventType<T extends Event>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getPath()": [
        "org.apache.commons.configuration2.io.DefaultFileSystem#getPath(File,URL,String,String)",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.VFSFileSystem#getPath(File,URL,String,String)",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler.createFile(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1.<init>()": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()"],
    "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,double)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,Double)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.createWrapDynaBean(Object)": ["org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)": [
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.BaseConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.AppletConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.JNDIConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.MapConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.web.ServletConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DataConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getPropertyInternal(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getCollection(Class<T>,String,Collection<T>)": ["org.apache.commons.configuration2.AbstractConfiguration#getCollection(Class<T>,String,Collection<T>,Collection<T>)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter#apply(Object)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter#extractSimpleValue(Object)"],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#ConfigurationPropertiesFactoryBean()": ["org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.<init>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isReload()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fetchSynchronizerSupport()": [
        "org.apache.commons.configuration2.io.FileHandler.<staticinit>()",
        "org.apache.commons.configuration2.io.FileHandler#getContent()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()": [
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.addLookup(DefaultLookups,Map<String, Lookup>)": [
        "org.apache.commons.configuration2.interpol.DefaultLookups#getLookup()",
        "org.apache.commons.configuration2.interpol.DefaultLookups#getPrefix()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearTree(String,NodeSelector,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addRemoveNodeOperation(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#clear(NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.TreeData#getParent(ImmutableNode)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getQueryRoot()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addRemoveAttributeOperation(ImmutableNode,String)",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getInteger(String,Integer)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener.connect(BasicConfigurationBuilder<?>,ReloadingController)": [
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#installEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener#ReloadingBuilderSupportListener(BasicConfigurationBuilder<?>,ReloadingController)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,short)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,Short)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,Short)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,Short)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.formatDate(Date)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.formatDate(Calendar)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String,List<?>)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String,List<?>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.CompositeConfiguration#getList(String,List<?>)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.findMatchingConstructors(Class<T>,BeanDeclaration)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.matchesConstructor(Constructor<?>,Collection<ConstructorArg>)",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.getConstructorArgs(BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.matchesConstructor(Constructor<?>,Collection<ConstructorArg>)": ["org.apache.commons.configuration2.beanutils.ConstructorArg#matches(Class<?>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getConfiguration(int)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getConfiguration()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#removeNodesFromParentAndReplacementMapping(ImmutableNode)$ConfigurationNodeVisitorAdapter$1#visitBeforeChildren(ImmutableNode,NodeHandler<ImmutableNode>)": ["org.apache.commons.configuration2.tree.ModelTransaction#removeNodeFromReplacementMapping(ImmutableNode)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#untrackNode(NodeSelector)": [
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()",
        "org.apache.commons.configuration2.tree.NodeTracker#untrackNode(NodeSelector)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl#setExpressionEngine(ExpressionEngine)": [
        "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.JNDIConfiguration#getBaseContext()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"
    ],
    "org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener#ReloadingBuilderSupportListener(BasicConfigurationBuilder<?>,ReloadingController)": ["org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener.<init>()"],
    "org.apache.commons.configuration2.SubsetConfiguration#clearPropertyDirect(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)"
    ],
    "org.apache.commons.configuration2.BaseConfiguration#cloneStore(BaseConfiguration)": ["org.apache.commons.configuration2.ConfigurationUtils.clone(Object)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getBaseValue()": ["org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getValue()"],
    "org.apache.commons.configuration2.io.FileHandler#clearLocation()$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.determineRootName(ImmutableNode,ImmutableNode,String)": ["org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"],
    "org.apache.commons.configuration2.tree.ImmutableNode#setAttributes(Map<String, ?>)": ["org.apache.commons.configuration2.tree.ImmutableNode#createWithNewAttributes(Map<String, Object>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#releaseLock()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#decrementLockCountAndCheckRelease()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#invalidate()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocale(String,Locale)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException()": ["org.apache.commons.configuration2.ex.ConfigurationException.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#installDefaultInterpolator()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.getDefaultPrefixLookups()",
        "org.apache.commons.configuration2.AbstractConfiguration#installInterpolator(Map<String, ? extends Lookup>,Collection<? extends Lookup>)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>)": ["org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>,Object)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createConnectedSubConfiguration(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackNode(NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationNodeSelector(String)",
        "org.apache.commons.configuration2.SubnodeConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationNodeSelector(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()": ["org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()"],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>)": ["org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>,Class<?>)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)"
    ],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#start()": [
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#isRunning()",
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#getExecutorService()",
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#createTriggerTaskCommand()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.getDefaultPrefixLookups()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.<staticinit>()",
        "org.apache.commons.configuration2.interpol.DefaultLookups.<staticinit>()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<staticinit>()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder#getDefaultPrefixLookups()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(URL,FileLocator)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.io.FileHandler#loadFromStream(InputStream,String,URL)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.io.FileSystem#getInputStream(URL,URLConnectionOptions)",
        "org.apache.commons.configuration2.io.FileHandler.closeSilent(Closeable)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL,URLConnectionOptions)",
        "org.apache.commons.configuration2.io.FileLocator#getURLConnectionOptions()"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(Context,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#addErrorLogListener()",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.JNDIConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.getIncludeOptional()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()": ["org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)"],
    "org.apache.commons.configuration2.ConfigurationMap#entrySet()": ["org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet#ConfigurationSet(Configuration)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#CombinedConfigurationBuilderProvider()": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#BaseConfigurationBuilderProvider(String,String,String,Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider.<init>()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#constructCombinedNode()": [
        "org.apache.commons.configuration2.tree.MergeCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.UnionCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.TreeUtils.printTree(PrintStream,ImmutableNode)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.CombinedConfiguration#getNumberOfConfigurationsInternal()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.OverrideCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.CombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)": [
        "org.apache.commons.configuration2.event.EventListenerList#getEventListenerIterator(EventType<T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.event.BaseEventSource#createErrorEvent(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNext(Event)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFileSystem(FileSystem)": [
        "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()",
        "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()$AbstractJdbcOperation$1.<init>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#createLayout()": ["org.apache.commons.configuration2.PropertiesConfigurationLayout#PropertiesConfigurationLayout()"],
    "org.apache.commons.configuration2.beanutils.ConstructorArg#ConstructorArg(BeanDeclaration,Object,String)": ["org.apache.commons.configuration2.beanutils.ConstructorArg.<init>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)": [
        "org.apache.commons.configuration2.SubnodeConfiguration#SubnodeConfiguration(BaseHierarchicalConfiguration,TrackedNodeModel)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfigurationForThisParent(SubnodeConfiguration)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#TrackedNodeModel(InMemoryNodeModelSupport,NodeSelector,boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.createManagedBuilderParameters(Map<String, Object>,MultiFileBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getManagedBuilderParameters()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneIfPossible(Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.EventListenerParameters#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#setComment(String,String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setComment(String)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#level(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations.<init>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#getIncludeListener()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.INIConfiguration.findSeparatorBeforeQuote(String,int)": ["org.apache.commons.configuration2.INIConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)": [
        "org.apache.commons.configuration2.event.EventListenerList#getEventListenerIterator(EventType<T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.event.BaseEventSource#checkDetailEvents(int)",
        "org.apache.commons.configuration2.event.BaseEventSource#createEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNext(Event)"
    ],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeBackslashs(Object,boolean)": ["org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.<staticinit>()"],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#visitAfterChildren(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#nodeName(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementEnd(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#interpolatedConfiguration()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<init>()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneConfiguration(Configuration)",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean.createDynaBean(Object)": ["org.apache.commons.configuration2.beanutils.BeanHelper.createWrapDynaBean(Object)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#providerForTag(String)": ["org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#providerForTag(String)"],
    "org.apache.commons.configuration2.io.AbsoluteNameLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.convertFileToURL(File)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.checkIfNodeDefined(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#interpolatedConfiguration()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.CombinedConfiguration#clone()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clone()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#InterpolatedVisitor()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#setRootNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#getInterpolatedRoot()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder.<init>()": ["org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<init>()"],
    "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileLocator)": ["org.apache.commons.configuration2.io.FileHandler.<init>()"],
    "org.apache.commons.configuration2.resolver.CatalogResolver.<init>()": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager.<init>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getBeanFactoryName()": ["org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#childConfigurationsAt(String,boolean)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackChildNodes(String,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createConnectedSubConfigurations(InMemoryNodeModelSupport,Collection<NodeSelector>)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#childConfigurationsAt(String)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal(String)": ["org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)"],
    "org.apache.commons.configuration2.tree.MergeCombiner.<init>()": ["org.apache.commons.configuration2.tree.NodeCombiner#NodeCombiner()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String,boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String,boolean)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String,BigInteger)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String,BigInteger)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String,BigInteger)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String,BigInteger)"
    ],
    "org.apache.commons.configuration2.tree.TreeData#removedReferences()": [
        "org.apache.commons.configuration2.tree.TreeData#getReferenceTracker()",
        "org.apache.commons.configuration2.tree.ReferenceTracker#getRemovedReferences()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getList(String,List<?>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#isScalarValue(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#trackNodes(Collection<NodeSelector>,Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#observerAdded()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.formatDate(Calendar)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#formatComponent(StringBuilder,Calendar)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser#formatComponent(StringBuilder,Calendar)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser#formatComponent(StringBuilder,Calendar)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createSourceData()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#ConfigurationSourceData()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionConfiguration()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#initFromDefinitionConfiguration(HierarchicalConfiguration<?>)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.getClasspathResource(String)": ["org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fireSavedEvent()": ["org.apache.commons.configuration2.io.FileHandlerListenerAdapter#saved(FileHandler)"],
    "org.apache.commons.configuration2.YAMLConfiguration#read(InputStream)": [
        "org.apache.commons.configuration2.YAMLConfiguration.createYamlForReading(LoaderOptions)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#observerRemoved()": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"
    ],
    "org.apache.commons.configuration2.builder.JndiBuilderParametersImpl#setPrefix(String)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)",
        "org.apache.commons.configuration2.builder.JndiBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.asEventSource(Object,boolean)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.createDefensiveCopies(HashMap<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchDefaultLookups(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchPrefixLookups(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#DefaultListDelimiterHandler(char)": [
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.<init>()",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#setParentInterpolator(ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setParentInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initFileSystem(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(String)": ["org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(List<String>)"],
    "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser.<init>()": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration#setCommentLeadingCharsUsedInInput(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.<init>()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#processSubNodes(KeyIterator,List<T>,Collection<QueryResult<T>>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findNodesForKey(KeyIterator,T,Collection<QueryResult<T>>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#clone()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#getIndex()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasIndex()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#JupIOFactory(boolean)": ["org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory.<init>()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#fetchAttributes(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.ConfigurationXMLReader.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor.<staticinit>()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#getDocumentHelper()": [
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.XMLConfiguration#getReferenceHandler()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getFloatArray(String,float[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.io.FileHandler#setFile(File)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#unregisterListenerAtChildren()": [
        "org.apache.commons.configuration2.CombinedConfiguration#unregisterListenerAt(Configuration)",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder.obtainReloadingController(Collection<ReloadingController>,Object)": [
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#getReloadingController()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,long)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,Long)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,Long)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,Long)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper#BeanHelper()": ["org.apache.commons.configuration2.beanutils.BeanHelper#BeanHelper(BeanFactory)"],
    "org.apache.commons.configuration2.ConfigurationConverter.getMap(Configuration)": ["org.apache.commons.configuration2.ConfigurationMap#ConfigurationMap(Configuration)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendIndex(int)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBased(Class<T extends FileBasedConfiguration>,File)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,File)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean,String)"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.getLocationStrategy(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getLocationStrategy()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendar(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#setIOFactory(IOFactory)": [
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#nodeDefined(T)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor.<init>()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#isDefined()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkBFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildBasicParameters(BasicBuilderParameters)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#isInheritSettings()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setParentInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setPrefixLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#fetchPrefixLookups()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.INIBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#inheritFrom(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationConverter#fireValue(String,Object)": [
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementEnd(String)",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementStart(String,Object)",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#fireValue(String,Object)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.getFile(String,String)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.constructFile(String,String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesWriter#JupPropertiesWriter(Writer,ListDelimiterHandler,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesWriter.<init>()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#PropertiesWriter(Writer,ListDelimiterHandler,ValueTransformer)",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesWriter.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURIArray(String,URI[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodesInternal(String,Collection<? extends T>)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()": [
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#addErrorLogListener()": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent#getCause()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#warn(String,Throwable)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toPattern(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getFileSystem()": [
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.ImmutableConfiguration#containsValue(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#containsValue(Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpParentInterpolator(Configuration,Configuration)": [
        "org.apache.commons.configuration2.ConfigurationLookup#ConfigurationLookup(ImmutableConfiguration)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setParentInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#addDefaultLookup(Lookup)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildFileBasedParameters(FileBasedBuilderProperties<?>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getBasePath()",
        "org.apache.commons.configuration2.io.FileHandler#getFileSystem()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.tree.QueryResult.createAttributeResult(T,String)": ["org.apache.commons.configuration2.tree.QueryResult#QueryResult(T,String)"],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,List<Calendar>,String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.dump(Configuration,PrintWriter)": ["org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintWriter)"],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#VFSFileHandlerReloadingDetector()": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector.<init>()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler,long)": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector.<init>()",
        "org.apache.commons.configuration2.io.FileHandler#FileHandler()"
    ],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.parseMap(Map<String, Object>,String)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.constructHierarchy(String,Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fireSavingEvent()": ["org.apache.commons.configuration2.io.FileHandlerListenerAdapter#saving(FileHandler)"],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler#ImmutableConfigurationInvocationHandler(Configuration)": ["org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.<init>()"],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#invoke(Object,Method,Object[])": [
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#handleEventSourceInvocation(Method,Object[]...)",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#handleConfigurationInvocation(Method,Object[])"
    ],
    "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.ex.ConversionException.<init>()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeNameOperation#ChangeNodeNameOperation(String)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeNameOperation.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#setLogger(ConfigurationLogger)": ["org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)"],
    "org.apache.commons.configuration2.CombinedConfiguration#getConversionExpressionEngine()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#loadFromReader(Reader)": [
        "org.apache.commons.configuration2.INIConfiguration#read(Reader)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#read(Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration#read(Reader)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#read(Reader)",
        "org.apache.commons.configuration2.io.FileHandler#fireLoadingEvent()",
        "org.apache.commons.configuration2.io.FileHandler#getContent()",
        "org.apache.commons.configuration2.JSONConfiguration#read(Reader)",
        "org.apache.commons.configuration2.YAMLConfiguration#read(Reader)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#read(Reader)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#read(Reader)",
        "org.apache.commons.configuration2.XMLConfiguration#read(Reader)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.io.FileHandler#fireLoadedEvent()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#formatComponent(StringBuilder,Calendar)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#padNum(StringBuilder,int,int)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.resolver.DefaultEntityResolver#resolveEntity(String,String)": ["org.apache.commons.configuration2.resolver.DefaultEntityResolver#getRegisteredEntities()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getConfigurationNames()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#XMLPropertyListHandler()": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#push(PListNodeBuilder)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler.<init>()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.JNDIConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.DataConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#isEmptyInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.SubsetConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.MapConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#isEmptyInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#isEmptyInternal()"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addDateValue(String)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<staticinit>()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.tree.QueryResult#toString()": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#createPropertiesWriter(Writer,ListDelimiterHandler)": ["org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesWriter#JupPropertiesWriter(Writer,ListDelimiterHandler,boolean)"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#determineIndex(T,T,String,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.DefaultExpressionEngine#findChildNodesByName(NodeHandler<T>,T,String)"],
    "org.apache.commons.configuration2.web.AppletConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,URL)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>,FileBasedBuilderParameters)",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(URL)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getMaxIndexInternal(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndexInternal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getMaxIndexInternal(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURIList(String,List<URI>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setSystemID(String)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey(boolean)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isPropertyKey()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#constructAttributeKey(String)"
    ],
    "org.apache.commons.configuration2.event.Event.<staticinit>()": ["org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementNameInternal()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURIArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getURIArray(String,URI[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#Builder(DefaultExpressionEngineSymbols)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder.<init>()"
    ],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#ImmutableIterator(Iterator<?>)": ["org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator.<init>()"],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#LegacyListDelimiterHandler(char)": [
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.<init>()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.<init>()"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#locateFromURL(String,String)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()",
        "org.apache.commons.configuration2.io.FileSystem#getLogger()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(byte[])": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(byte[])"],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#reloadingPerformed()": [
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#getSubControllers()",
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()$CombinedReloadingController$1#getSubControllers()"
    ],
    "org.apache.commons.configuration2.ImmutableConfiguration#getDuration(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toDuration(Object)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.trackDataForAddedObserver(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,TrackedNodeData)": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#observerAdded()",
        "org.apache.commons.configuration2.tree.NodeSelector#select(ImmutableNode,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileHandler#save(URL,FileLocator)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.isLocationDefined(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#save(String,FileLocator)"
    ],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)": [
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeString(String)",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeString(String)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler#escapeString(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#loadFromStreamDirectly(InputStream)": [
        "org.apache.commons.configuration2.XMLConfiguration#read(InputStream)",
        "org.apache.commons.configuration2.JSONConfiguration#read(InputStream)",
        "org.apache.commons.configuration2.YAMLConfiguration#read(InputStream)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.io.FileHandler#getContent()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#clone()": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#initBeanInstance(Object,BeanCreationContext)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#getBeanDeclaration()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#initBean(Object,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)$AbstractJdbcOperation$1.<init>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory#getOrder()": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.<staticinit>()"],
    "org.apache.commons.configuration2.CompositeConfiguration#clone()": [
        "org.apache.commons.configuration2.CompositeConfiguration#addConfiguration(Configuration)",
        "org.apache.commons.configuration2.CompositeConfiguration#getInMemoryConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#cloneInterpolator(AbstractConfiguration)",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneConfiguration(Configuration)",
        "org.apache.commons.configuration2.event.BaseEventSource#clone()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.ConfigurationConverter.listToString(List<?>)": ["org.apache.commons.configuration2.ConfigurationConverter.<staticinit>()"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.extractVariableName(String)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<staticinit>()"],
    "org.apache.commons.configuration2.interpol.ExprLookup#ExprLookup(Variables)": [
        "org.apache.commons.configuration2.interpol.ExprLookup#setVariables(Variables)",
        "org.apache.commons.configuration2.interpol.ExprLookup.<init>()"
    ],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#DefaultParametersManager()": ["org.apache.commons.configuration2.builder.DefaultParametersManager.<init>()"],
    "org.apache.commons.configuration2.tree.NodeAddData#NodeAddData(T,String,boolean,Collection<String>)": [
        "org.apache.commons.configuration2.tree.NodeAddData.<init>()",
        "org.apache.commons.configuration2.tree.NodeAddData.createPathNodes(Collection<String>)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getConfiguration(int)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#replaceAndDetachTrackedNode(NodeSelector,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#detach(ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#visitBeforeChildren(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)"
    ],
    "org.apache.commons.configuration2.tree.TreeData#updateReferenceTracker(ReferenceTracker)": ["org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)"],
    "org.apache.commons.configuration2.XMLConfiguration#setRootElementName(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.XMLConfiguration#getDocument()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeDataForRootAndTracker(ImmutableNode,NodeTracker)": [
        "org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)",
        "org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#createParentMapping(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.tree.MergeCombiner.matchAttributes(Map<String, Object>,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#clear()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#interpolateAttributes(ImmutableNode,NodeHandler<ImmutableNode>)": ["org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#interpolateAttributes(ImmutableNode,NodeHandler<ImmutableNode>,Map<String, Object>)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trim(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.<init>()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,Date[]...)": [
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,Date[],String)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#AbstractHierarchicalConfiguration(NodeModel<T>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createChangeListener()"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem.<init>()": ["org.apache.commons.configuration2.io.FileSystem.<init>()"],
    "org.apache.commons.configuration2.event.BaseEventSource#isDetailEvents()": ["org.apache.commons.configuration2.event.BaseEventSource#checkDetailEvents(int)"],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor.<init>()": ["org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#endWrite()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer#endWrite()",
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#endWrite()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#setNodeCombiner(NodeCombiner)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#create()": ["org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#DefaultExpressionEngineSymbols(Builder)"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.isBeanDeclarationArgument(NodeData<?>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttributes()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNext(Event)": [
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNextListenerUnchecked(Event)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#validateEvent(Event)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.createUnmodifiableConfiguration(Class<?>[],Configuration)": ["org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler#ImmutableConfigurationInvocationHandler(Configuration)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#DefinedKeysVisitor()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor.<init>()",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"
    ],
    "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Map<String, ?>)": [
        "org.apache.commons.configuration2.MapConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#afterPropertiesSet()": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#Configurations()",
        "org.apache.commons.configuration2.CompositeConfiguration#addConfiguration(Configuration)",
        "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.builder.fluent.Configurations#properties(File)",
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanProperties()": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#get(Function<? super BeanDeclaration, ? extends Map<String, Object>>)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,List<?>)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,Object)"],
    "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#invalidate()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#invalidate()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidate()"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#warn(String,Throwable)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearPropertyDirect(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLongList(String,List<Long>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#setNodeCombiner(NodeCombiner)": ["org.apache.commons.configuration2.DynamicCombinedConfiguration#invalidateAll()"],
    "org.apache.commons.configuration2.DataConfiguration#getShortArray(String,short[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.<staticinit>()": [
        "org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker()",
        "org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#clone()": [
        "org.apache.commons.configuration2.PropertiesConfiguration#setLayout(PropertiesConfigurationLayout)",
        "org.apache.commons.configuration2.BaseConfiguration#clone()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#PropertiesConfigurationLayout(PropertiesConfigurationLayout)"
    ],
    "org.apache.commons.configuration2.beanutils.ConstructorArg#isNestedBeanDeclaration()": ["org.apache.commons.configuration2.beanutils.ConstructorArg#getBeanDeclaration()"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.initializeDefaultEncodings()": [
        "org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.interpol.ConstantLookup#lookup(String)": [
        "org.apache.commons.configuration2.interpol.ConstantLookup#resolveField(String,String)",
        "org.apache.commons.configuration2.interpol.ConstantLookup.<staticinit>()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.unmodifiableConfiguration(Configuration)": [
        "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationUtils.createUnmodifiableConfiguration(Class<?>[],Configuration)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(URL,FileLocator)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getOutputStream(URL)",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileHandler#saveToStream(OutputStream,String,URL)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#verify()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getOutputStream(URL)",
        "org.apache.commons.configuration2.io.FileHandler.closeSilent(Closeable)"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.constructorMatchingException(Class<?>,BeanDeclaration,String)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.getConstructorArgs(BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setURL(URL)": [
        "org.apache.commons.configuration2.io.FileHandler#setURL(URL)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#prepareNullLocatorBuilder()": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"
    ],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory#BuilderConfigurationWrapperFactory(EventSourceSupport)": ["org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.<init>()"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChild(T,int)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChild(T,int)"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#CombinedBeanDeclaration(BeanDeclaration[]...)": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration.<init>()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#clear(NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#setRootNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getRootNode()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.ImmutableConfiguration#getEnum(String,Class<T extends Enum>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(Throwable)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#next()": ["org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#initNextElement()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#configure(BuilderParameters[]...)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#configure(BuilderParameters[]...)"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getInt(String,int)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInteger(String,Integer)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInteger(String,Integer)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInteger(String,Integer)"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#fetchConstructorArgs(Constructor<?>,BeanCreationContext)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#getBeanDeclaration()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#getConversionHandler()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#createBean(BeanDeclaration)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#to(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#isNestedBeanDeclaration()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.nullSafeConstructorArgs(BeanDeclaration)",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#getValue()",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#getBeanDeclaration()"
    ],
    "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()": [
        "org.apache.commons.configuration2.event.Event.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.BaseConfiguration#clone()": [
        "org.apache.commons.configuration2.BaseConfiguration#cloneStore(BaseConfiguration)",
        "org.apache.commons.configuration2.AbstractConfiguration#cloneInterpolator(AbstractConfiguration)",
        "org.apache.commons.configuration2.event.BaseEventSource#clone()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.event.Event#Event(Object,EventType<? extends Event>)": ["org.apache.commons.configuration2.event.Event.<init>()"],
    "org.apache.commons.configuration2.DataConfiguration#getShortList(String)": ["org.apache.commons.configuration2.DataConfiguration#getShortList(String,List<Short>)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeData(ImmutableNode,TreeData)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeDataForRootAndTracker(ImmutableNode,NodeTracker)",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker()",
        "org.apache.commons.configuration2.tree.NodeTracker#detachAllTrackedNodes()",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.JSONConfiguration#JSONConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.JSONConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.unmodifiableConfiguration(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationUtils.createUnmodifiableConfiguration(Class<?>[],Configuration)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,String)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>,FileBasedBuilderParameters)",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getByteList(String)": ["org.apache.commons.configuration2.DataConfiguration#getByteList(String,List<Byte>)"],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setEncoding(String)": [
        "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsKeyInternal(String)$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfigurationForThisParent(SubnodeConfiguration)": [
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfiguration(BaseHierarchicalConfiguration)",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getFloatList(String)": ["org.apache.commons.configuration2.DataConfiguration#getFloatList(String,List<Float>)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#peekNE()": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#peek()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURLArray(String,URL[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingController()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#connectToReloadingController(ReloadingController)",
        "org.apache.commons.configuration2.reloading.ReloadingController#ReloadingController(ReloadingDetector)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#newInstance()": ["org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#ConfigurationDynaBean(Configuration)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator.<init>()"],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#getParsedConfiguration()": ["org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#getConfiguration()"],
    "org.apache.commons.configuration2.beanutils.BeanHelper#createBeanCreationContext(BeanDeclaration,Class<?>,Object,BeanFactory)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.fetchBeanClass(BeanDeclaration,Class<?>,BeanFactory)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#BeanCreationContextImpl(BeanHelper,Class<?>,BeanDeclaration,Object)"
    ],
    "org.apache.commons.configuration2.builder.AutoSaveListener#autoSaveRequired(ConfigurationEvent)": [
        "org.apache.commons.configuration2.builder.AutoSaveListener#inLoadOperation()",
        "org.apache.commons.configuration2.event.ConfigurationEvent#isBeforeUpdate()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String,boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#selectAndTrackNodes(String,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createConnectedSubConfigurations(InMemoryNodeModelSupport,Collection<NodeSelector>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#initSubstitutor()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<init>()"
    ],
    "org.apache.commons.configuration2.ImmutableConfiguration#getEnum(String,Class<T extends Enum>,T extends Enum)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(Throwable)",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration()": ["org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)": ["org.apache.commons.configuration2.DataConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.resolver.CatalogResolver#setDebug(boolean)": ["org.apache.commons.configuration2.resolver.CatalogResolver.<staticinit>()"],
    "org.apache.commons.configuration2.io.FileHandler#setFile(File)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setFile(File)$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilder()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.detachedTrackedNodeData(NodeSelector,Map.Entry<NodeSelector, TrackedNodeData>)": [
        "org.apache.commons.configuration2.tree.NodeTracker.createEmptyTrackedNode(TrackedNodeData)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#processKeys()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor.<init>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#getConfiguration()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getStringArray(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog#parseCatalog(String,String)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.<staticinit>()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.locate(FileSystem,String,String)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.nullSafeLookup(Lookup)": ["org.apache.commons.configuration2.interpol.DummyLookup.<staticinit>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#write(Writer)": [
        "org.apache.commons.configuration2.JSONConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#write(Writer)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#write(Writer)",
        "org.apache.commons.configuration2.XMLConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#fetchFileBased()",
        "org.apache.commons.configuration2.YAMLConfiguration#write(Writer)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PropertiesConfiguration#write(Writer)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#write(Writer)",
        "org.apache.commons.configuration2.INIConfiguration#write(Writer)"
    ],
    "org.apache.commons.configuration2.beanutils.ConstructorArg#matches(Class<?>)": ["org.apache.commons.configuration2.beanutils.ConstructorArg#getTypeName()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#sizeInternal()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#size()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#prepareAdd(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()",
        "org.apache.commons.configuration2.tree.NodeAddData#NodeAddData(T,String,boolean,Collection<String>)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isPropertyKey()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findLastPathNode(KeyIterator,T,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.createDefaultLookups()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.addLookup(DefaultLookups,Map<String, Lookup>)",
        "org.apache.commons.configuration2.interpol.DefaultLookups.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#removeNodesFromParentAndReplacementMapping(ImmutableNode)$ConfigurationNodeVisitorAdapter$1.<init>()": ["org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration#isCommentLine(String)": ["org.apache.commons.configuration2.INIConfiguration#getCommentLeadingCharsUsedInInput()"],
    "org.apache.commons.configuration2.AbstractConfiguration#interpolate(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#isAttributeKey(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#finalize()": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#isReleaseTrackedNodeOnFinalize()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#close()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addNewReference(ImmutableNode,Object)": ["org.apache.commons.configuration2.tree.ModelTransaction#fetchReferenceMap()"],
    "org.apache.commons.configuration2.event.EventType.fetchSuperEventTypes(EventType<?>)": ["org.apache.commons.configuration2.event.EventType#getSuperType()"],
    "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()": ["org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()"],
    "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()": ["org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1.<init>()"],
    "org.apache.commons.configuration2.tree.NodeUpdateData#NodeUpdateData(Map<QueryResult<T>, Object>,Collection<Object>,Collection<QueryResult<T>>,String)": [
        "org.apache.commons.configuration2.tree.NodeUpdateData.copyCollection(Collection<? extends T>)",
        "org.apache.commons.configuration2.tree.NodeUpdateData.<init>()",
        "org.apache.commons.configuration2.tree.NodeUpdateData.copyMap(Map<? extends K, ? extends V>)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#isDetached()": ["org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#setDefaultLookups(Collection<? extends Lookup>)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#addDefaultLookups(Collection<? extends Lookup>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.ConfigurationLookup#ConfigurationLookup(ImmutableConfiguration)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#removeDefaultLookup(Lookup)",
        "org.apache.commons.configuration2.AbstractConfiguration#findConfigurationLookup(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#addDefaultLookup(Lookup)"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#initializeParameterObjects(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#inheritParentBuilderProperties(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#MultiWrapDynaBean(Collection<?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initBean(Object,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetector(FileHandler,FileBasedBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.fetchDetectorFactory(FileBasedBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.DefaultReloadingDetectorFactory#createReloadingDetector(FileHandler,FileBasedBuilderParametersImpl)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#installAutoSaveListener()": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#getFileHandler()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.AutoSaveListener#updateFileHandler(FileHandler)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.AutoSaveListener#AutoSaveListener(FileBasedConfigurationBuilder<?>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getCatalog()": ["org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getPrivateCatalog()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String)"
    ],
    "org.apache.commons.configuration2.EnvironmentConfiguration#EnvironmentConfiguration()": [
        "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Map<String, ?>)",
        "org.apache.commons.configuration2.EnvironmentConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#indexOfChild(ImmutableNode,ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getChildren()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildBuilderParameters(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildBasicParameters(BasicBuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initDefaultChildParameters(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildFileBasedParameters(FileBasedBuilderProperties<?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildXMLParameters(XMLBuilderProperties<?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildCombinedParameters(CombinedBuilderParametersImpl)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,short)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,short)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,short)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,short)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.getDefaultClass(Object,String)": ["org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()"],
    "org.apache.commons.configuration2.DataConfiguration#getIntegerList(String,List<Integer>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#readProperty()": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#getCommentLines()",
        "org.apache.commons.configuration2.PropertiesConfiguration.isCommentLine(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.checkCombineLines(String)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#initQueryRoot(TreeData,NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNode(NodeSelector)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#isDefined(T)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#isDefined(T)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#level(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TreeData#getParent(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.stripCommentChar(String,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.<staticinit>()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.isCommentLine(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#isLeafNode(ImmutableNode,NodeHandler<ImmutableNode>)": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initBean(Object,BeanDeclaration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.beanutils.BeanHelper#initBean(Object,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.StrictConfigurationComparator#compare(Configuration,Configuration)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addList(ArrayNodeBuilder)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#getNodeValue()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#ConfigurationDynaBean(Configuration)": [
        "org.apache.commons.configuration2.ConfigurationMap#ConfigurationMap(Configuration)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean.<init>()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean.<staticinit>()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttribute(String)": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)"],
    "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)": ["org.apache.commons.configuration2.ex.ConfigurationException.<init>()"],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()": ["org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()$CombinedReloadingController$1.<init>()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#execute()": [
        "org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)",
        "org.apache.commons.configuration2.tree.ModelTransaction#executeOperations()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.ModelTransaction#updateReferenceTracker()",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()",
        "org.apache.commons.configuration2.tree.ModelTransaction#updateParentMapping()",
        "org.apache.commons.configuration2.tree.NodeTracker#update(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getResolver()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#updateReferenceTracker()": [
        "org.apache.commons.configuration2.tree.ReferenceTracker#addReferences(Map<ImmutableNode, ?>)",
        "org.apache.commons.configuration2.tree.TreeData#getReferenceTracker()",
        "org.apache.commons.configuration2.tree.ReferenceTracker#updateReferences(Map<ImmutableNode, ImmutableNode>,Collection<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#fetchFileName(MultiFileBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#constructFileName(MultiFileBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getFilePattern()"
    ],
    "org.apache.commons.configuration2.tree.NodeSelector#getFilteredResults(ImmutableNode,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,String,List<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createManagedBuilder(String,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#isAllowFailOnInit()"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(Context)": ["org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(Context,String)"],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#initChildrenCollection(int)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>)": ["org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#clearProperty(String,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearProperty(String,NodeSelector,NodeKeyResolver<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttribute()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttributeEmulatingMode()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setStringConverter(Function<Object, String>)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter.<staticinit>()"],
    "org.apache.commons.configuration2.tree.NodeSelector#subSelector(String)": ["org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(List<String>)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#clearErrorListeners()": [
        "org.apache.commons.configuration2.event.EventListenerList#getRegistrationsForSuperType(EventType<T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combined(String)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDate(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#setInterpolator(ConfigurationInterpolator)": ["org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#setInterpolator(ConfigurationInterpolator)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper.initBeanProperties(Object,BeanDeclaration)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.initProperty(Object,String,Object)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanProperties()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanProperties()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getBeanProperties()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>,Class<?>)": [
        "org.apache.commons.configuration2.builder.fluent.Parameters#getDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>,Class<?>)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#createWithNewAttributes(Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(List<ImmutableNode>,Map<String, Object>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.beanutils.ConstructorArg.forValue(Object,String)": ["org.apache.commons.configuration2.beanutils.ConstructorArg#ConstructorArg(BeanDeclaration,Object,String)"],
    "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationNodeSelector(String)": [
        "org.apache.commons.configuration2.tree.NodeSelector#subSelector(String)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getRootSelector()"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#clearEventListeners()": ["org.apache.commons.configuration2.event.EventListenerList#clear()"],
    "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy()": ["org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#HomeDirectoryLocationStrategy(boolean)"],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader#BaseConfigurationXMLReader(Configuration)": [
        "org.apache.commons.configuration2.BaseConfigurationXMLReader#setConfiguration(Configuration)",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader#BaseConfigurationXMLReader()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getChildrenCount(ImmutableNode,String)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#setSeparatorUsedInInput(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()$CombinedReloadingController$1#getSubControllers()": [
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilders()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#getReloadingController()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<staticinit>()": ["org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,File)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>,FileBasedBuilderParameters)",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(File)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getValue()": [
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeValue(NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#observerAdded()": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,Calendar[],String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.INIConfiguration#writeProperty(PrintWriter,String,Object,String)",
        "org.apache.commons.configuration2.INIConfiguration.isSectionNode(ImmutableNode)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.INIConfiguration#getSeparatorUsedInOutput()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder(Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>,boolean)"
    ],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#AbstractConfigurationNodeIterator(ConfigurationNodePointer<T>,boolean)": ["org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.<init>()"],
    "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#FileLocatorBuilder(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#initBuilder(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.ConfigurationXMLReader#parseConfiguration()": [
        "org.apache.commons.configuration2.BaseConfigurationXMLReader#processKeys()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#processKeys()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getException()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getContentHandler()",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader#getParsedConfiguration()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#getParsedConfiguration()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getFloatList(String,List<Float>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodeHandler()": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getParent()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#initLogger(ConfigurationLogger)": ["org.apache.commons.configuration2.io.ConfigurationLogger.newDummyLogger()"],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#VFSFileHandlerReloadingDetector(FileHandler)": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector.<init>()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler)"
    ],
    "org.apache.commons.configuration2.XMLDocumentHelper.copyDocument(Document)": [
        "org.apache.commons.configuration2.XMLDocumentHelper.createTransformer()",
        "org.apache.commons.configuration2.XMLDocumentHelper.transform(Transformer,Source,Result)"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setValidating(boolean)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#recursiveGetKeys(Set<String>,Context,String,Set<Context>)": ["org.apache.commons.configuration2.JNDIConfiguration#recursiveGetKeys(Set<String>,Context,String,Set<Context>)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.Operations#newNodesAdded(Collection<ImmutableNode>)": ["org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Collection<E>,Collection<? extends E>)"],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#splitString(String,boolean)": [
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#getDelimiter()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#addProperty(String,Iterable<?>,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#addProperty(String,NodeSelector,Iterable<?>,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.initializeUpdateTransaction(ModelTransaction,Map<QueryResult<ImmutableNode>, Object>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#addAttributeOperation(ImmutableNode,String,Object)",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeValueOperation(ImmutableNode,Object)",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.prefixName(String,String)": ["org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.<staticinit>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.DataConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyInternal(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetParameters()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#setParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#setParameters(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#valueFromResult(QueryResult<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocaleArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getLocaleArray(String,Locale[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.addNodeProperty(ModelTransaction,NodeAddData<ImmutableNode>,Iterable<?>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodesToAdd(String,Iterable<?>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.addNodesByAddData(ModelTransaction,NodeAddData<ImmutableNode>,Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeAddData#getNewNodeName()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#storeInterpolatedNode(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#peek()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.doParseProperty(String,boolean)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.<staticinit>()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getBlancLinesBefore(String)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout#getBlankLinesBefore(String)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#hasAttributes(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()"],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getLastModificationDate()": ["org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getFileObject()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>)": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)"],
    "org.apache.commons.configuration2.CompositeConfiguration#clearInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.BaseConfiguration.<init>()",
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#convert(Object,Class<T>,ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#isComplexObject(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#convertValue(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractConversionValue(Object,Class<?>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNodeToRemove(ImmutableNode)": ["org.apache.commons.configuration2.tree.ModelTransaction.append(Set<E>,E)"],
    "org.apache.commons.configuration2.INIConfiguration#INIConfiguration(boolean)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.INIConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Object[]...)": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException.<init>()"],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#MultiReloadingControllerDetector(CombinedReloadingController)": ["org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector.<init>()"],
    "org.apache.commons.configuration2.ConfigurationUtils.append(Configuration,Configuration)": ["org.apache.commons.configuration2.ConfigurationUtils.append(ImmutableConfiguration,Configuration)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#immutableConfigurationAt(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String)",
        "org.apache.commons.configuration2.ConfigurationUtils.unmodifiableConfiguration(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#convertToCollection(Object,Class<T>,ConfigurationInterpolator,Collection<T>)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#convert(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#CombinedBuilderParametersImpl()": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.<init>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#createChildNodeWithValue(Builder,Builder,Element,String,boolean,Map<String, String>,Map<ImmutableNode, Object>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.XMLConfiguration.isSingleElementList(Element)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.XMLListReference.assignListReference(Map<ImmutableNode, Object>,ImmutableNode,Element)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#getRootElementNameInternal()": [
        "org.apache.commons.configuration2.XMLConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.XMLConfiguration#getDocument()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(PropertiesBuilderParameters)": ["org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getAttribute(NodeData<?>,String)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#interpolate(Object)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttribute(String)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.isLocationDefined(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#read(InputStream)": ["org.apache.commons.configuration2.XMLConfiguration#load(InputSource)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#setPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#setPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setPropertyInternal(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setDataSource(DataSource)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#toString()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#cloneInterpolator(AbstractConfiguration)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getDefaultLookups()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#installInterpolator(Map<String, ? extends Lookup>,Collection<? extends Lookup>)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getLookups()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration.findConfigurationLookup(ConfigurationInterpolator,ImmutableConfiguration)"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationConverter#process(Configuration)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#openElements(DefaultConfigurationKey,DefaultConfigurationKey,Configuration,Set<String>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#closeElements(DefaultConfigurationKey,DefaultConfigurationKey)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine.<staticinit>()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#fireValue(String,Object)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,int,Object)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#checkIndexedProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getConstructorArgs()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getConstructorArgs()"
    ],
    "org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(String,String)": [
        "org.apache.commons.configuration2.PropertiesConfiguration#PropertiesConfiguration()",
        "org.apache.commons.configuration2.io.FileHandler#setFileName(String)",
        "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)",
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased)",
        "org.apache.commons.configuration2.io.FileHandler#load()",
        "org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(Configuration)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#XMLPropertiesConfiguration()"
    ],
    "org.apache.commons.configuration2.event.ConfigurationEvent#ConfigurationEvent(Object,EventType<? extends ConfigurationEvent>,String,Object,boolean)": [
        "org.apache.commons.configuration2.event.ConfigurationEvent.<init>()",
        "org.apache.commons.configuration2.event.Event#Event(Object,EventType<? extends Event>)"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setKeyColumn(String)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getColor(String,Color)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionBuilder()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#addDefinitionBuilderChangeListener(ConfigurationBuilder<? extends HierarchicalConfiguration<?>>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setupDefinitionBuilder(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object,int)": ["org.apache.commons.configuration2.convert.ListDelimiterHandler#flatten(Object,int)"],
    "org.apache.commons.configuration2.DataConfiguration#getBigDecimalArray(String,BigDecimal[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#Configurations()": ["org.apache.commons.configuration2.builder.fluent.Configurations#Configurations(Parameters)"],
    "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeTreeWalker.checkParameters(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.dfs(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(FileLocator)": [
        "org.apache.commons.configuration2.io.FileHandler#load(URL,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locateOrThrow(FileLocator)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createNodePointer(int)": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getParent()",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getChild(ImmutableNode,int)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createInterpolator()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.fromSpecification(InterpolatorSpecification)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchInterpolatorSpecification(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#replaceChildren(Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String,String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#subset(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#subset(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getRootNodeOfConfiguration()": [
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#lock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)",
        "org.apache.commons.configuration2.ConfigurationUtils.convertToHierarchical(Configuration,ExpressionEngine)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getInMemoryRepresentation()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getInMemoryRepresentation()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#unlock(LockMode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addDataValue(String)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#interpolateAttributes(ImmutableNode,NodeHandler<ImmutableNode>,Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#valueChanged(Object,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.<staticinit>()": ["org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.createDefaultSmybols()"],
    "org.apache.commons.configuration2.DataConfiguration#getColorArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getColorArray(String,Color[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.fetchDetectorFactory(FileBasedBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getReloadingDetectorFactory()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.web.ServletConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)"],
    "org.apache.commons.configuration2.tree.ImmutableNode#setValue(Object)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(List<ImmutableNode>,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#setLayout(PropertiesConfigurationLayout)": ["org.apache.commons.configuration2.PropertiesConfiguration#installLayout(PropertiesConfigurationLayout)"],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()": [
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#Entry(Object)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#save(PropertiesConfiguration,Writer)"
    ],
    "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#fetchBasePath(FileLocator)": [
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#isEvaluateBasePath()",
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#getHomeDirectory()",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.appendPath(String,String)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#installEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchEventSource()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,Object)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setBasePath(String)": [
        "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toCharacter(Object)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearTreeInternal(String)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearTree(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#fetchLookupForPrefix(String)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.nullSafeLookup(Lookup)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#immutableConfigurationsAt(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.toImmutable(List<? extends HierarchicalConfiguration<?>>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#ReloadingCombinedConfigurationBuilder(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanFactoryParameter()": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#findFirst(Function<? super BeanDeclaration, ? extends T>)"],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#VFSFileHandlerReloadingDetector(FileHandler,long)": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector.<init>()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler,long)"
    ],
    "org.apache.commons.configuration2.builder.EventListenerParameters#addEventListener(EventListenerRegistrationData<T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventListenerRegistrationData<T extends Event>)"],
    "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)": ["org.apache.commons.configuration2.io.ConfigurationLogger.newDummyLogger()"],
    "org.apache.commons.configuration2.io.FileHandler.fromMap(Map<String, ?>)": [
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fromMap(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toPath(Object)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.io.FileHandler#loadFromTransformedStream(InputStream,String)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.FileHandler#loadFromReader(Reader)"
    ],
    "org.apache.commons.configuration2.ConfigurationConverter.getProperties(ImmutableConfiguration)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.ConfigurationConverter.listToString(List<?>)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(Document,Node,String,List<?>)": ["org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(Document,Node,String,Object)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getLineSeparator()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.XMLDocumentHelper.transform(Transformer,Source,Result)": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.unescapeJava(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.unescapeJava(String,boolean)"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#TrackedNodeModel(InMemoryNodeModelSupport,NodeSelector,boolean)": ["org.apache.commons.configuration2.tree.TrackedNodeModel.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,Double)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeListForName(T,QName)": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.qualifiedName(QName)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#hierarchical()": ["org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.SubsetConfiguration#addPropertyDirect(String,Object)": [
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.TreeUtils.printTree(PrintStream,String,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.TreeUtils.printTree(PrintStream,String,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)": ["org.apache.commons.configuration2.tree.ImmutableNode.Builder#ensureAttributesExist()"],
    "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributeOperation#AddAttributeOperation(String,Object)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributeOperation.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#findSourceConfigurations(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.FindNodeVisitor#reset()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getRootNode()",
        "org.apache.commons.configuration2.FindNodeVisitor#isFound()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.FindNodeVisitor#FindNodeVisitor(T)",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkBFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#flush()": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#flush()"],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#XMLBuilderVisitor(XMLDocumentHelper,ListDelimiterHandler)": [
        "org.apache.commons.configuration2.XMLDocumentHelper#getElementMapping()",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.<init>()",
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1.<init>()": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator.<init>()"],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#update(ImmutableNode,Object,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#updateElement(ImmutableNode,ReferenceNodeHandler,Object)",
        "org.apache.commons.configuration2.XMLListReference.isFirstListItem(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)",
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.XMLListReference.listValue(ImmutableNode,ReferenceNodeHandler,ListDelimiterHandler)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.XMLListReference.isListNode(ImmutableNode,ReferenceNodeHandler)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#wrapInNodeData(List<T>)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#NodeData(T,NodeHandler<T>)"],
    "org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener#onEvent(Event)": [
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<staticinit>()",
        "org.apache.commons.configuration2.reloading.ReloadingController#resetReloadingState()",
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetResult()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#commonKey(DefaultConfigurationKey)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#getIndex()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttribute()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.partsEqual(KeyIterator,KeyIterator)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendAttribute(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendIndex(int)"
    ],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.handleResult(Object)": ["org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#ImmutableIterator(Iterator<?>)"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#canonicalKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#determineIndex(T,T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendIndex(int)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()": ["org.apache.commons.configuration2.tree.ImmutableNode#ImmutableNode(Builder)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeToAddWithPath(NodeAddData<ImmutableNode>,Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeAddData#getPathNodes()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeOnPath(Iterator<String>,Collection<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#ConfigurationDynaBean(Configuration)",
        "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()",
        "org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String,String)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#initBean(Object,BeanDeclaration)": ["org.apache.commons.configuration2.beanutils.BeanHelper#initBean(Object,BeanDeclaration)"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#getDynaProperty(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.FileSystem#getInputStream(URL,URLConnectionOptions)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(File,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getOutputStream(File)",
        "org.apache.commons.configuration2.io.FileHandler#saveToStream(OutputStream,String,URL)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.io.FileHandler.closeSilent(Closeable)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.isEventTypeForManagedBuilders(EventType<?>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilders()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#DataConfiguration(Configuration)": [
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.DataConfiguration.DataConversionHandler.<init>()",
        "org.apache.commons.configuration2.DataConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(String)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFileName(String)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator()": ["org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeListForWildcardName(T,QName)": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator.prefixName(String,String)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.INIConfiguration.createNewRootNode(Builder,Map<String, Builder>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodes(String,Collection<? extends T>)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.INIConfiguration#createNodeBuilders(BufferedReader,Builder,Map<String, Builder>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBooleanList(String)": ["org.apache.commons.configuration2.DataConfiguration#getBooleanList(String,List<Boolean>)"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#interpolate(Object)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)": ["org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#substitute(String)"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#error(String,Throwable)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.web.ServletContextConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)"],
    "org.apache.commons.configuration2.DataConfiguration#getDateArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,Date[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#addConfiguration(Configuration)": ["org.apache.commons.configuration2.CompositeConfiguration#addConfiguration(Configuration,boolean)"],
    "org.apache.commons.configuration2.JNDIConfiguration#getContext(List<String>,Context)": ["org.apache.commons.configuration2.JNDIConfiguration#getContext(List<String>,Context)"],
    "org.apache.commons.configuration2.XMLConfiguration.shouldTrim(Element,boolean)": ["org.apache.commons.configuration2.XMLConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#toObjectArray(Object,Class<T>,ConfigurationInterpolator)": ["org.apache.commons.configuration2.convert.DefaultConversionHandler#convertToCollection(Object,Class<T>,ConfigurationInterpolator,Collection<T>)"],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#ReloadingMultiFileConfigurationBuilder(Class<T extends FileBasedConfiguration>,Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setInterpolator(ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.YAMLConfiguration#read(InputStream,LoaderOptions)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.YAMLConfiguration.createYamlForReading(LoaderOptions)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#createTriggerTaskCommand()": ["org.apache.commons.configuration2.reloading.ReloadingController#checkForReloading(Object)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.createWrapperBuilder(ConfigurationBuilder<? extends Configuration>,Configuration)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#ReloadableWrapperBuilder(Configuration,ConfigurationBuilder<? extends Configuration>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#WrapperBuilder(Configuration,ConfigurationBuilder<? extends Configuration>)"
    ],
    "org.apache.commons.configuration2.ConfigurationXMLReader#parse(String)": ["org.apache.commons.configuration2.ConfigurationXMLReader#parseConfiguration()"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine.<staticinit>()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#DefaultExpressionEngine(DefaultExpressionEngineSymbols)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#createReloadingController()": [
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#CombinedReloadingController(Collection<? extends ReloadingController>)",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#resetInitialReloadingState()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionBuilder()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder.obtainReloadingController(Collection<ReloadingController>,Object)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getChildBuilders()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.isFullyInitialized(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()"
    ],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList#fire(Event)": [
        "org.apache.commons.configuration2.event.EventListenerList#getEventListenerIterator(EventType<T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNextListenerUnchecked(Event)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getConfiguration(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(InputStream,String)": ["org.apache.commons.configuration2.io.FileHandler#loadFromStream(InputStream,String,URL)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.addAttributeProperty(ModelTransaction,NodeAddData<ImmutableNode>,Iterable<?>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#addAttributeOperation(ImmutableNode,String,Object)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeOnPath(Iterator<String>,Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeAddData#getParent()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttribute(String,Object)",
        "org.apache.commons.configuration2.tree.NodeAddData#getNewNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode#iterator()",
        "org.apache.commons.configuration2.tree.NodeAddData#getPathNodes()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodeOperation(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.io.FileUtils.decodeUrl(String)": ["org.apache.commons.configuration2.io.FileUtils.<staticinit>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#initChildConfiguration(CombinedConfiguration)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.CombinedConfiguration#getConversionExpressionEngine()",
        "org.apache.commons.configuration2.AbstractConfiguration#setLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getAt()",
        "org.apache.commons.configuration2.CombinedConfiguration#setConversionExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.event.BaseEventSource#copyEventListeners(BaseEventSource)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getName()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#setSynchronizer(Synchronizer)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(String)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeOnPath(Iterator<String>,Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeOnPath(Iterator<String>,Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,short)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,short)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,short)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,short)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()": ["org.apache.commons.configuration2.AbstractConfiguration#getKeys()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeysInternal(String,String)"
    ],
    "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<init>()": ["org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getChildren(ImmutableNode,String)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.copy(ImmutableConfiguration,Configuration)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toLong(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()": ["org.apache.commons.configuration2.tree.NodeTreeWalker.<init>()"],
    "org.apache.commons.configuration2.io.FileHandler#clearLocation()": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#clearLocation()$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader#getParsedConfiguration()": ["org.apache.commons.configuration2.BaseConfigurationXMLReader#getConfiguration()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(File)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(File)"
    ],
    "org.apache.commons.configuration2.tree.QueryResult#getAttributeValue(NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#addConfigurationFirst(Configuration)": ["org.apache.commons.configuration2.CompositeConfiguration#addConfigurationFirst(Configuration,boolean)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#parseProperty(String)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.doParseProperty(String,boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyValue(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertySeparator(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyName(String)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()": [
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getExistingFile()": ["org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getFile()"],
    "org.apache.commons.configuration2.PropertiesConfiguration#installLayout(PropertiesConfigurationLayout)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PropertiesConfiguration#createLayout()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.io.FileLocator#FileLocator(FileLocatorBuilder)": ["org.apache.commons.configuration2.io.FileLocator.<init>()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#checkHeaderComment(List<String>)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setHeaderComment(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#extractComment(List<String>,int,int)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getHeaderComment()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#substitute(String)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearPropertyDirect(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#addProperty(String,NodeSelector,Iterable<?>,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#initializeAddTransaction(ModelTransaction,String,Iterable<?>,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.valuesNotEmpty(Iterable<?>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.web.AppletConfiguration#AppletConfiguration(Applet)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.AppletConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(String)": ["org.apache.commons.configuration2.JNDIConfiguration#JNDIConfiguration(Context,String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getArray(Class<?>,String,Object)": ["org.apache.commons.configuration2.AbstractConfiguration#convertToArray(Class<?>,String,Object)"],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementEnd(String)": ["org.apache.commons.configuration2.ConfigurationXMLReader#fireElementEnd(String)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#InterpolatedVisitor()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor.<init>()",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#ImmutableNode(Builder)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.<init>()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#createAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#createChildren()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#registerListenerAt(Configuration)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#read(Reader)": [
        "org.apache.commons.configuration2.JSONConfiguration#read(Reader)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#fetchFileBased()",
        "org.apache.commons.configuration2.INIConfiguration#read(Reader)",
        "org.apache.commons.configuration2.YAMLConfiguration#read(Reader)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#read(Reader)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#read(Reader)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#read(Reader)",
        "org.apache.commons.configuration2.XMLConfiguration#read(Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration#read(Reader)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#read(Reader)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeValueOperation#ChangeNodeValueOperation(Object)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeValueOperation.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"
    ],
    "org.apache.commons.configuration2.tree.NodeTreeWalker#walkBFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeTreeWalker.checkParameters(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.bfs(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBased(Class<T extends FileBasedConfiguration>,String)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,String)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.JSONConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#constructMap(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.XMLListReference.assignListReference(Map<ImmutableNode, Object>,ImmutableNode,Element)": ["org.apache.commons.configuration2.XMLListReference#XMLListReference(Element)"],
    "org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker()": ["org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker(Map<ImmutableNode, Object>,List<Object>)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode)",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation.<init>()": ["org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"],
    "org.apache.commons.configuration2.CompositeConfiguration#getInMemoryConfiguration()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException()": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException.<init>()"],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getAt()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#contains(Iterator<String>,Object)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#ReloadingFileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#ReloadingCombinedConfigurationBuilder(Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder(Map<String, Object>,boolean)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()": ["org.apache.commons.configuration2.builder.BasicBuilderParameters.<init>()"],
    "org.apache.commons.configuration2.PropertiesConfiguration.getInclude()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2.<init>()": ["org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#parseProperty(String)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyValue(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.doParseProperty(String,boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertySeparator(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyName(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDateList(String,List<Date>)": [
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DataConfiguration#getDateList(String,List<Date>,String)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#contains(String,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#subset(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#subset(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#subset(String)",
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#subset(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toColor(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.convert.PropertyConverter.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.isEventTypeForManagedBuilders(EventType<?>)",
        "org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilders()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#equals(Object)": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#fetchFilteredNodeResults(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(String)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Log)",
        "org.apache.commons.configuration2.io.ConfigurationLogger.createLoggerForName(String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#removeConfiguration(String)": [
        "org.apache.commons.configuration2.CombinedConfiguration#getConfiguration(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfiguration(Configuration)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getConfiguration(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#removeConfiguration(Configuration)"
    ],
    "org.apache.commons.configuration2.tree.OverrideCombiner.<init>()": ["org.apache.commons.configuration2.tree.NodeCombiner#NodeCombiner()"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#XMLPropertyListConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<init>()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#isCommentChar(char)": ["org.apache.commons.configuration2.INIConfiguration#getCommentLeadingCharsUsedInInput()"],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#ConfigurationPropertiesFactoryBean(Configuration)": [
        "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.<init>()",
        "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Configuration)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode)": ["org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#properties()": ["org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.XMLConfiguration.isSingleElementList(Element)": ["org.apache.commons.configuration2.XMLConfiguration.countChildElements(Node,String)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#properties(File)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(File)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#toArray(Object,Class<?>,ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#toObjectArray(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#isEmptyElement(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#toPrimitiveArray(Object,Class<?>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.fetchInterpolator(ConfigurationInterpolator)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#copyEventListeners(BasicConfigurationBuilder<?>,EventListenerList)": ["org.apache.commons.configuration2.event.EventListenerList#addAll(EventListenerList)"],
    "org.apache.commons.configuration2.JNDIConfiguration#getBaseContext()": ["org.apache.commons.configuration2.JNDIConfiguration#getContext()"],
    "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributesOperation#apply(ImmutableNode,Operations)": ["org.apache.commons.configuration2.tree.ImmutableNode#setAttributes(Map<String, ?>)"],
    "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementStart(String,Attributes)": [
        "org.apache.commons.configuration2.ConfigurationXMLReader.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getException()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getContentHandler()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#escapeDelimiters(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.ex.ConversionException#ConversionException()": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException()",
        "org.apache.commons.configuration2.ex.ConversionException.<init>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalComment(String,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.constructCanonicalComment(String,boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getComment(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#detachAllTrackedNodes()": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.<staticinit>()": ["org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController#CombinedReloadingController(Collection<? extends ReloadingController>)": [
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.checkManagedControllers(Collection<? extends ReloadingController>)",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.<init>()",
        "org.apache.commons.configuration2.reloading.ReloadingController#ReloadingController(ReloadingDetector)",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.<staticinit>()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#MultiReloadingControllerDetector(CombinedReloadingController)"
    ],
    "org.apache.commons.configuration2.reloading.ReloadingController#ReloadingController(ReloadingDetector)": [
        "org.apache.commons.configuration2.reloading.ReloadingController.<init>()",
        "org.apache.commons.configuration2.event.EventListenerList#EventListenerList()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#setAttribute(String,Object)": ["org.apache.commons.configuration2.tree.ImmutableNode#createWithNewAttributes(Map<String, Object>)"],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,Calendar[]...)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,Calendar[],String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration.DataConversionHandler.<init>()": ["org.apache.commons.configuration2.convert.DefaultConversionHandler.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#escapedPosition(String,int)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#escapeOffset()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.ImmutableConfiguration#containsValue(Object)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#isEmptyInternal()": [
        "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#initFromDefinitionConfiguration(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createDeclarations(Collection<? extends HierarchicalConfiguration<?>>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#fetchTopLevelOverrideConfigs(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#childConfigurationsAt(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileName(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearTreeInternal(String)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String,BigInteger)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearErrorListeners()": ["org.apache.commons.configuration2.event.BaseEventSource#clearErrorListeners()"],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#reloadingPerformed()": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.ManagedReloadingDetector#reloadingPerformed()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#XPathExpressionEngine(XPathContextFactory)": ["org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<init>()"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#close()": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#untrackNode(NodeSelector)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackNode(NodeSelector,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.tree.NodeTracker#trackNode(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.reloading.ReloadingEvent.<staticinit>()": [
        "org.apache.commons.configuration2.event.Event.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFile(File)": [
        "org.apache.commons.configuration2.io.FileHandler#setFile(File)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#unescapePropertyValue(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.unescapeJava(String,boolean)"],
    "org.apache.commons.configuration2.tree.MergeCombiner#addAttributes(Builder,ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getNodeHandler()": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#getParentPointer()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)": ["org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#FileLocatorBuilder(FileLocator)"],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#MultiWrapDynaClass(Collection<? extends DynaClass>)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#initProperties(Collection<? extends DynaClass>)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#addChildConfiguration(CombinedConfiguration,ConfigurationDeclaration,ConfigurationBuilder<? extends Configuration>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getAt()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isOptional()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getName()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#connectToReloadingController(ReloadingController)": ["org.apache.commons.configuration2.builder.ReloadingBuilderSupportListener.connect(BasicConfigurationBuilder<?>,ReloadingController)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)$AbstractJdbcOperation$1.<init>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setPath(String)": [
        "org.apache.commons.configuration2.io.FileHandler#setPath(String)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#ConfigurationSourceData()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createBuilderChangeListener()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#copy(Configuration)": [
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#lock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)",
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#encodeForCopy(Object)",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.QueryResult#QueryResult(T,String)": ["org.apache.commons.configuration2.tree.QueryResult.<init>()"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setBeanHelper(BeanHelper)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#updateElement(ImmutableNode,ReferenceNodeHandler,Object)": [
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#getElement(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#updateElement(Element,Object)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.updateAttributes(ImmutableNode,Element)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#addPropertyInternal(String,Object)": ["org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"],
    "org.apache.commons.configuration2.tree.ModelTransaction#addNewReferences(Map<ImmutableNode, ?>)": ["org.apache.commons.configuration2.tree.ModelTransaction#fetchReferenceMap()"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)": [
        "org.apache.commons.configuration2.io.FileSystemLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.io.ProvidedURLLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getLocationStrategy(FileLocator)",
        "org.apache.commons.configuration2.io.HomeDirectoryLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.CombinedLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)",
        "org.apache.commons.configuration2.io.ClasspathLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.BasePathLocationStrategy#locate(FileSystem,FileLocator)",
        "org.apache.commons.configuration2.io.AbsoluteNameLocationStrategy#locate(FileSystem,FileLocator)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toDouble(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getDuration(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanFactoryName()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#copyFrom(PropertiesConfigurationLayout)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setHeaderComment(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setFooterComment(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getKeys()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getFooterComment()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getHeaderComment()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURI(String,URI)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean)"],
    "org.apache.commons.configuration2.interpol.ExprLookup#ExprLookup(Variables,String,String)": [
        "org.apache.commons.configuration2.interpol.ExprLookup#setVariablePrefixMatcher(String)",
        "org.apache.commons.configuration2.interpol.ExprLookup#ExprLookup(Variables)",
        "org.apache.commons.configuration2.interpol.ExprLookup#setVariableSuffixMatcher(String)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getConfiguration(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#HttpOutputStream(OutputStream,HttpURLConnection)": [
        "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream.<init>()",
        "org.apache.commons.configuration2.io.VerifiableOutputStream.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.fullyInitializedLocator(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.isFullyInitialized(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.createFullyInitializedLocatorFromURL(FileLocator,URL)"
    ],
    "org.apache.commons.configuration2.tree.NodeNameMatchers$NodeNameMatchers$1.<init>()": ["org.apache.commons.configuration2.tree.NodeNameMatchers.<init>()"],
    "org.apache.commons.configuration2.XMLListReference.hasListReference(ImmutableNode,ReferenceNodeHandler)": ["org.apache.commons.configuration2.tree.TreeData#getReference(ImmutableNode)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#createBuilder(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#ReloadingCombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isReload()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildEventListeners(BasicConfigurationBuilder<? extends Configuration>)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createInitializedManagedBuilder(String,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#getFileHandler()",
        "org.apache.commons.configuration2.io.FileHandler#setFileName(String)",
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createManagedBuilder(String,Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createManagedBuilder(String,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createConnectedSubConfigurations(InMemoryNodeModelSupport,Collection<NodeSelector>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.SubnodeConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#size()": [
        "org.apache.commons.configuration2.AbstractConfiguration#sizeInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#sizeInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#sizeInternal()",
        "org.apache.commons.configuration2.MapConfiguration#sizeInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.BaseConfiguration#sizeInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDefaultDateFormat()": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#toPrimitiveArray(Object,Class<?>,ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#convertValue(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextDelimiterPos(String,int,int)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#escapedPosition(String,int)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException.<init>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor#insertNewChildNodes(ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.tree.TreeData#getReference(ImmutableNode)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#insert(ImmutableNode,ImmutableNode,ImmutableNode,ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initResultInstance(CombinedConfiguration)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initSystemProperties(HierarchicalConfiguration<?>,String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentParameters()",
        "org.apache.commons.configuration2.CombinedConfiguration#setNodeCombiner(NodeCombiner)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentXMLParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFileSystem(FileSystem)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#configureEntityResolver(HierarchicalConfiguration<?>,XMLBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getOverrideSources()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getBasePath()",
        "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#setNodeCombiner(NodeCombiner)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createAndAddConfigurations(CombinedConfiguration,List<ConfigurationDeclaration>,List<ConfigurationBuilder<? extends Configuration>>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createAdditionalsConfiguration(CombinedConfiguration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpParentInterpolator(Configuration,Configuration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getSourceData()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.initNodeCombinerListNodes(CombinedConfiguration,HierarchicalConfiguration<?>,String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initFileSystem(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getChildBuilders()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getUnionSources()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#initResultInstance(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionConfiguration()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#registerConfiguredLookups(HierarchicalConfiguration<?>,Configuration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#registerConfiguredProviders(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.tree.OverrideCombiner.<init>()",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#containsKeyInternal(String)": ["org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#executeTransactionOnDetachedTrackedNode(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getDetachedNodeModel(NodeSelector)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#endRead()": [
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer#endRead()"
    ],
    "org.apache.commons.configuration2.io.FileHandler.createFile(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFile(String,String)",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.ImmutableConfiguration#containsValue(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#containsValue(Object)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor.<init>()": ["org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getChildBuilders()": ["org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getChildBuilders()"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getChildren(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getChildren()"],
    "org.apache.commons.configuration2.CompositeConfiguration#appendListProperty(List<Object>,Configuration,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#getEventListenerRegistrations()": ["org.apache.commons.configuration2.event.EventListenerList#getRegistrations()"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#createParametersProxy(Object,Class<T>,Class<?>[]...)": [
        "org.apache.commons.configuration2.builder.fluent.Parameters#getDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.fluent.Parameters.ParametersIfcInvocationHandler#ParametersIfcInvocationHandler(Object)",
        "org.apache.commons.configuration2.builder.DefaultParametersManager#initializeParameters(BuilderParameters)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.toString(Configuration)": ["org.apache.commons.configuration2.ConfigurationUtils.toString(ImmutableConfiguration)"],
    "org.apache.commons.configuration2.io.VFSFileSystem#VFSFileSystem()": [
        "org.apache.commons.configuration2.io.DefaultFileSystem.<init>()",
        "org.apache.commons.configuration2.io.VFSFileSystem.<init>()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#padNum(StringBuilder,int,int)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.getDefaultEncoding(Class<?>)": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<staticinit>()"],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.XMLDocumentHelper.createTransformer(TransformerFactory)": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.obtainRootNode(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#ReloadingCombinedConfigurationBuilder()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#DynamicCombinedConfiguration()": [
        "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)": ["org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)"],
    "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)$AbstractUpdater$1.<init>()",
        "org.apache.commons.configuration2.io.FileHandler.normalizeFileURL(String)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addClearNodeValueOperation(ImmutableNode)": ["org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeValueOperation(ImmutableNode,Object)"],
    "org.apache.commons.configuration2.tree.ImmutableNode#addChild(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.checkChildNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)",
        "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#isEmptyInternal()": ["org.apache.commons.configuration2.AbstractConfiguration#isEmpty()"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.setDefaultEncoding(Class<?>,String)": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<staticinit>()"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResult()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent#ConfigurationBuilderResultCreatedEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderResultCreatedEvent>,ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fireBuilderEvent(ConfigurationBuilderEvent)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent#ConfigurationBuilderEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderEvent>)"
    ],
    "org.apache.commons.configuration2.tree.QueryResult#hashCode()": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#beginWrite()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer#beginWrite()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURL(String,URL)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printValue(PrintWriter,int,Object)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.transformMap(Map<?, ?>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Map<String, ?>)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#printValue(PrintWriter,int,Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<staticinit>()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInteger(String,Integer)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInteger(String,Integer)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInteger(String,Integer)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInteger(String,Integer)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocaleArray(String,Locale[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toBigDecimal(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#executeTransactionOnCurrentStructure(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#ModelTransaction(TreeData,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#execute()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Collection<? extends Configuration>)": [
        "org.apache.commons.configuration2.BaseConfiguration.<init>()",
        "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Configuration,Collection<? extends Configuration>)"
    ],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController#resetInitialReloadingState()": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#getDetector()",
        "org.apache.commons.configuration2.reloading.ManagedReloadingDetector#reloadingPerformed()"
    ],
    "org.apache.commons.configuration2.builder.EventListenerParameters#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#resolveFileURI()": [
        "org.apache.commons.configuration2.io.FileHandler#getURL()",
        "org.apache.commons.configuration2.io.FileHandler#getFileName()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getPath(File,URL,String,String)",
        "org.apache.commons.configuration2.io.FileHandler#getFileSystem()",
        "org.apache.commons.configuration2.io.VFSFileSystem#getPath(File,URL,String,String)",
        "org.apache.commons.configuration2.io.FileHandler#getBasePath()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getFileHandler()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getColorList(String,List<Color>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(String)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,String)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#findConfigurationLookup(ConfigurationInterpolator)": ["org.apache.commons.configuration2.AbstractConfiguration.findConfigurationLookup(ConfigurationInterpolator,ImmutableConfiguration)"],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,List<Calendar>)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,List<Calendar>,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfiguration(Configuration)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getNumberOfConfigurations()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfigurationAt(int)"
    ],
    "org.apache.commons.configuration2.BaseConfiguration.<init>()": ["org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#getRootNode()": [
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTreeData()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#interpolatedConfiguration()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#interpolatedConfiguration()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#interpolatedConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#interpolatedConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#parse(Object)": ["org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#flatten(Object)"],
    "org.apache.commons.configuration2.builder.AutoSaveListener#AutoSaveListener(FileBasedConfigurationBuilder<?>)": [
        "org.apache.commons.configuration2.io.FileHandlerListenerAdapter.<init>()",
        "org.apache.commons.configuration2.builder.AutoSaveListener.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()": ["org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()"],
    "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<staticinit>()": ["org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<init>()"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#save(PropertiesConfiguration,Writer)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#isSingleLine(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalComment(String,boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#isForceSingleLine()",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#createPropertiesWriter(Writer,ListDelimiterHandler)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalHeaderComment(boolean)",
        "org.apache.commons.configuration2.BaseConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getBlankLinesBefore(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getIOFactory()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#setLineSeparator(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,Object,boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getGlobalSeparator()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.BaseConfiguration#containsKeyInternal(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.writeComment(PropertiesWriter,String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getSeparator(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getLineSeparator()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#setCurrentSeparator(String)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getKeys()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getCanonicalFooterCooment(boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeln(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory#createPropertiesWriter(Writer,ListDelimiterHandler)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#setGlobalSeparator(String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.setInclude(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#indexOfChild(T,T)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#indexOfChild(T,T)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.unescapeJava(String,boolean)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)",
        "org.apache.commons.configuration2.PropertiesConfiguration.needsUnescape(char)",
        "org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#ensureCurrentConfiguration()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#CurrentConfigHolder(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#setCurrentConfiguration(CombinedConfiguration)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>,FileBasedBuilderParameters)": ["org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>)"],
    "org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(String)": ["org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(String,String)"],
    "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent#ConfigurationBuilderResultCreatedEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderResultCreatedEvent>,ImmutableConfiguration)": [
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent#ConfigurationBuilderEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderEvent>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<init>()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#HierarchicalConfigurationXMLReader(HierarchicalConfiguration<T>)": [
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#setConfiguration(HierarchicalConfiguration<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#HierarchicalConfigurationXMLReader()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#rebuildParentMapping()": ["org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getMaxIndexInternal(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,byte)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,byte)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,byte)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,byte)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeValueOperation#apply(ImmutableNode,Operations)": ["org.apache.commons.configuration2.tree.ImmutableNode#setValue(Object)"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toInternetAddress(Object,String)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.convert.PropertyConverter.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup#getVariables()": ["org.apache.commons.configuration2.interpol.ExprLookup.Variables#Variables(Variables)"],
    "org.apache.commons.configuration2.PropertiesConfiguration#locateIncludeFile(String,String)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"
    ],
    "org.apache.commons.configuration2.event.EventListenerRegistrationData#hashCode()": ["org.apache.commons.configuration2.event.EventListenerRegistrationData.<staticinit>()"],
    "org.apache.commons.configuration2.tree.NodeTracker.determineUpdatedTrackedNodeData(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,Map.Entry<NodeSelector, TrackedNodeData>)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.tree.NodeTracker.detachedTrackedNodeData(NodeSelector,Map.Entry<NodeSelector, TrackedNodeData>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)": ["org.apache.commons.configuration2.ex.ConfigurationException.<init>()"],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#initResultInstance(CombinedConfiguration)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initResultInstance(CombinedConfiguration)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#createReloadingController()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDate(String,String)": [
        "org.apache.commons.configuration2.DataConfiguration#getDate(String,Date,String)",
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#refresh()": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getLastModificationDate()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#updateLastModified(long)",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getLastModificationDate()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fireLoadedEvent()": [
        "org.apache.commons.configuration2.io.FileHandlerListenerAdapter#loaded(FileHandler)",
        "org.apache.commons.configuration2.builder.AutoSaveListener#loaded(FileHandler)"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#resolveSingleVariable(String)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.extractVariableName(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#resolve(String)"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver.locate(FileSystem,String,String)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileSystem(FileSystem)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#setFileSystem(FileSystem)": ["org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#setFileSystem(FileSystem)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#XMLPropertyListConfiguration(ImmutableNode)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<init>()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#getParent(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TreeData#getParent(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNewNode(ImmutableNode)": ["org.apache.commons.configuration2.tree.ModelTransaction.append(Collection<E>,E)"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>,boolean)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String)": ["org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String,String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getEncodedString(String,ConfigurationDecoder)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.SubnodeConfiguration#close()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getTrackedModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#close()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttributeEmulatingMode()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toDuration(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#determineBuilderClass(ConfigurationDeclaration)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getBuilderClass()",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getReloadingBuilderClass()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isReload()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#DefaultExpressionEngine(DefaultExpressionEngineSymbols)": ["org.apache.commons.configuration2.tree.DefaultExpressionEngine#DefaultExpressionEngine(DefaultExpressionEngineSymbols,NodeMatcher<String>)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#setPropertyDirect(String,Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.event.BaseEventSource#setDetailEvents(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.TreeUtils#TreeUtils()": ["org.apache.commons.configuration2.tree.TreeUtils.<init>()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor#updateNode(ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#update(ImmutableNode,Object,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.tree.TreeData#getReference(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory#createBuilderConfigurationWrapper(Class<T extends ImmutableConfiguration>,ConfigurationBuilder<? extends T extends ImmutableConfiguration>)": [
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.createBuilderConfigurationWrapper(Class<T extends ImmutableConfiguration>,ConfigurationBuilder<? extends T extends ImmutableConfiguration>,EventSourceSupport)",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory#getEventSourceSupport()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.createNodeDataFromConfiguration(HierarchicalConfiguration<T>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#NodeData(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()": ["org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()$ConfigurationInterpolator$1.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#setPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.event.BaseEventSource#setDetailEvents(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createBuilderChangeListener()": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetResult()"],
    "org.apache.commons.configuration2.event.EventType.isInstanceOf(EventType<?>,EventType<?>)": ["org.apache.commons.configuration2.event.EventType#getSuperType()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createResultDeclaration(Map<String, Object>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean,String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionConfiguration()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)$AbstractJdbcOperation$1.<init>()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,Float)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.DataConfiguration#getDate(String,Date)": [
        "org.apache.commons.configuration2.DataConfiguration#getDate(String,Date,String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.ex.ConversionException#ConversionException(Throwable)": [
        "org.apache.commons.configuration2.ex.ConversionException.<init>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object)": ["org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object,int)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,long)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,long)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,long)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,long)"
    ],
    "org.apache.commons.configuration2.builder.DefaultParametersManager.DefaultHandlerData#DefaultHandlerData(DefaultParametersHandler<?>,Class<?>,Class<?>)": ["org.apache.commons.configuration2.builder.DefaultParametersManager.DefaultHandlerData.<init>()"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getPropertyInternal(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getPropertyInternal(String)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toEnum(Object,Class<E extends Enum>)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#visitBeforeChildren(ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#isLeafNode(ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#handleLeafNode(ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#interpolateAttributes(ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#push(Builder)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#setIncludeListener(ConfigurationConsumer<ConfigurationException>)": [
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#setBlancLinesBefore(String,int)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout#setBlankLinesBefore(String,int)"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#ConfigurationDynaClass(Configuration)": [
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass.<init>()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save()": [
        "org.apache.commons.configuration2.io.FileHandler#save(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.setIncludeOptional(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodeOperation(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNewNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addChildrenOperation(ChildrenUpdateOperation)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation.<init>()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#ModelTransaction(TreeData,NodeSelector,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TreeData#copyReplacementMapping()",
        "org.apache.commons.configuration2.tree.ModelTransaction.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.ModelTransaction#initQueryRoot(TreeData,NodeSelector)",
        "org.apache.commons.configuration2.tree.TreeData#copyParentMapping()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(String)": [
        "org.apache.commons.configuration2.io.FileHandler#load(String,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,Short)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,Short)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,Short)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,Short)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#createWrapperConfiguration(ConfigurationBuilder)": [
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.EventSourceSupport.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationClass()",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.createBuilderConfigurationWrapper(Class<T extends ImmutableConfiguration>,ConfigurationBuilder<? extends T extends ImmutableConfiguration>,EventSourceSupport)",
        "org.apache.commons.configuration2.ConfigurationUtils.loadClassNoEx(String)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addFalseValue()": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#createDocumentBuilder()": [
        "org.apache.commons.configuration2.XMLConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.XMLConfiguration#createDocumentBuilder()$DefaultHandler$1.<init>()",
        "org.apache.commons.configuration2.XMLConfiguration#isSchemaValidation()",
        "org.apache.commons.configuration2.XMLConfiguration#isValidating()",
        "org.apache.commons.configuration2.XMLConfiguration#getDocumentBuilder()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#initChildrenCollection(int)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocale(String)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)"],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,Object)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,Object)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,Object)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#setConfigurations(Configuration[]...)": ["org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.defensiveCopy(T[])"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentXMLParameters()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initDefaultBasePath()",
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<init>()"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getURL(String,String)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)",
        "org.apache.commons.configuration2.io.VFSFileSystem.VFSURLStreamHandler.<init>()",
        "org.apache.commons.configuration2.io.VFSFileSystem#resolveURI(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLocaleList(String,List<Locale>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#addNodesInternal(String,Collection<? extends ImmutableNode>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodes(String,Collection<? extends T>)"
    ],
    "org.apache.commons.configuration2.tree.OverrideCombiner#combine(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.OverrideCombiner#addAttributes(Builder,ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.OverrideCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#stream()",
        "org.apache.commons.configuration2.tree.OverrideCombiner#canCombine(ImmutableNode,ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#isEmptyInternal()$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.DataConfiguration#getColorArray(String,Color[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.spring.ConfigurationPropertySource#ConfigurationPropertySource(String,Configuration)": ["org.apache.commons.configuration2.spring.ConfigurationPropertySource.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getProperties(String)": ["org.apache.commons.configuration2.AbstractConfiguration#getProperties(String,Properties)"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#nodeName(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#handleEventSourceInvocation(Method,Object[]...)": [
        "org.apache.commons.configuration2.ConfigurationUtils.asEventSource(Object,boolean)",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.EventSourceSupport.<staticinit>()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.loadClass(String)": ["org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()"],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#unregisterDefaultsHandler(DefaultParametersHandler<?>,Class<?>)": ["org.apache.commons.configuration2.builder.DefaultParametersManager.DefaultHandlerData#isOccurrence(DefaultParametersHandler<?>,Class<?>)"],
    "org.apache.commons.configuration2.tree.TreeUtils.printTree(PrintStream,ImmutableNode)": ["org.apache.commons.configuration2.tree.TreeUtils.printTree(PrintStream,String,ImmutableNode)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#close(Connection,Statement,ResultSet)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#error(String,Throwable)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#canonicalKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.determineIndex(T,T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#clone()": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getDefinitionBuilderParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#setDefinitionBuilderParameters(BuilderParameters)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#clone()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneIfPossible(Object)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#DateFieldParser(int,int)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#DateFieldParser(int,int,int)"],
    "org.apache.commons.configuration2.CombinedConfiguration#getConfigurationNameList()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKeyPart()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextDelimiterPos(String,int,int)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#unescapeDelimiters(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#length()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#createPropertiesReader(Reader)": ["org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#JupPropertiesReader(Reader)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#resolve(String)": [
        "org.apache.commons.configuration2.interpol.ConstantLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.EnvironmentLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.DummyLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.SystemPropertiesLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.StringLookupAdapter#lookup(String)",
        "org.apache.commons.configuration2.ConfigurationLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.ExprLookup#lookup(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<staticinit>()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#fetchLookupForPrefix(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()$ConfigurationInterpolator$1#fetchLookupForPrefix(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getParentInterpolator()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#resolve(String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader#JupPropertiesReader(Reader)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#PropertiesReader(Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupPropertiesReader.<init>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findChildNodesByName(NodeHandler<T>,T,String)": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#getMatchingChildren(T,NodeMatcher<C>,C)"],
    "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder()": ["org.apache.commons.configuration2.builder.fluent.Configurations#createFileBasedBuilder(Class<T extends FileBasedConfiguration>)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getExpressionEngine()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>,boolean)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationNodeSelector(String)": ["org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(String)"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#ini()": ["org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#createBean(BeanCreationContext)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#createBeanInstance(BeanCreationContext)",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#initBeanInstance(Object,BeanCreationContext)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()": [
        "org.apache.commons.configuration2.io.DefaultFileSystem.<init>()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.initDefaultLocationStrategy()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getNodeCombiner()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setParentInterpolator(ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearEventListeners()": ["org.apache.commons.configuration2.event.BaseEventSource#clearEventListeners()"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addTrueValue()": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfiguration(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfiguration(Configuration)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getConfiguration(String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory#createPropertiesReader(Reader)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#PropertiesReader(Reader)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)"
    ],
    "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#FileExtensionConfigurationBuilderProvider(String,String,String,String,String,Collection<String>)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#BaseConfigurationBuilderProvider(String,String,String,Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.<init>()"
    ],
    "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getFileObject()": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)",
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#resolveFileURI()",
        "org.apache.commons.configuration2.io.FileHandler#getURL()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getFileHandler()",
        "org.apache.commons.configuration2.io.FileHandler#isLocationDefined()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getSource(String)": ["org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)"],
    "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getTransformedRoot()": [
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getRootNodeOfConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#prependAtPath(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURIList(String)": ["org.apache.commons.configuration2.DataConfiguration#getURIList(String,List<URI>)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyToModel(String,Iterable<?>)"],
    "org.apache.commons.configuration2.io.FileHandler#save(OutputStream)": [
        "org.apache.commons.configuration2.io.FileHandler#save(OutputStream,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration()": [
        "org.apache.commons.configuration2.AbstractConfiguration#clear()",
        "org.apache.commons.configuration2.CompositeConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#XMLPropertyListConfiguration()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trim(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trimLeft(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trimRight(String)"
    ],
    "org.apache.commons.configuration2.ConfigurationXMLReader#parse(InputSource)": ["org.apache.commons.configuration2.ConfigurationXMLReader#parseConfiguration()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#getReferenceNodeHandler()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,float)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,float)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,float)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,float)"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup#initializeContext(JexlContext)": [
        "org.apache.commons.configuration2.interpol.ExprLookup.Variable#getValue()",
        "org.apache.commons.configuration2.interpol.ExprLookup.Variable#getName()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getLongArray(String,long[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter.<staticinit>()": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#hasLeadingDelimiter(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setLocationStrategy(FileLocationStrategy)": [
        "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Properties)": [
        "org.apache.commons.configuration2.MapConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.MapConfiguration.toMap(Properties)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#isInheritSettings()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#setChildDefaultParametersManager(DefaultParametersManager)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getChildDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#setInheritSettings(boolean)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#initInterpolator()": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setParentInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParent()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()"],
    "org.apache.commons.configuration2.web.ServletRequestConfiguration#ServletRequestConfiguration(ServletRequest)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#initializeAddTransaction(ModelTransaction,String,Iterable<?>,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.addNodeProperty(ModelTransaction,NodeAddData<ImmutableNode>,Iterable<?>)",
        "org.apache.commons.configuration2.tree.NodeAddData#isAttribute()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveAddKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getQueryRoot()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.addAttributeProperty(ModelTransaction,NodeAddData<ImmutableNode>,Iterable<?>)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#initResultInstance(T extends ImmutableConfiguration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#registerEventListeners(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#handleInitializable(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultDeclaration()",
        "org.apache.commons.configuration2.beanutils.BeanHelper#initBean(Object,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#initBuilder(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator#getLocationStrategy()",
        "org.apache.commons.configuration2.io.FileLocator#getFileSystem()",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocator#getURLConnectionOptions()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.createNodeModel(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.obtainRootNode(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addChildrenOperation(ChildrenUpdateOperation)": ["org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#combine(ChildrenUpdateOperation)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#childConfigurationsAt(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#fetchFilteredNodeResults(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,Object)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,Object,boolean)"],
    "org.apache.commons.configuration2.DataConfiguration#getURLList(String,List<URL>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initSystemProperties(HierarchicalConfiguration<?>,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigIntegerList(String)": ["org.apache.commons.configuration2.DataConfiguration#getBigIntegerList(String,List<BigInteger>)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor.<init>()": ["org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerChildDefaultsHandler(Class<D>,DefaultParametersHandler<? super D>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getChildDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchEventSource()": ["org.apache.commons.configuration2.ConfigurationUtils.asEventSource(Object,boolean)"],
    "org.apache.commons.configuration2.AbstractConfiguration#encodeForCopy(Object)": [
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#encodeListForCopy(Collection<?>)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)"
    ],
    "org.apache.commons.configuration2.tree.NodeCombiner#isListNode(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toInteger(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.DataConfiguration#getCalendar(String,Calendar,String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"
    ],
    "org.apache.commons.configuration2.INIConfiguration.Builder#build()": ["org.apache.commons.configuration2.INIConfiguration#INIConfiguration(boolean)"],
    "org.apache.commons.configuration2.JSONConfiguration#JSONConfiguration()": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration()",
        "org.apache.commons.configuration2.JSONConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#PropertyLayoutData()"],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters.ParametersIfcInvocationHandler#invoke(Object,Method,Object[])": ["org.apache.commons.configuration2.builder.fluent.Parameters.ParametersIfcInvocationHandler.isFluentResult(Method)"],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder.<init>()": ["org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()"],
    "org.apache.commons.configuration2.event.EventListenerList#EventListenerList()": ["org.apache.commons.configuration2.event.EventListenerList.<init>()"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#reset()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetResult()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#resetParameters()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#resetParameters()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel()": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)"],
    "org.apache.commons.configuration2.interpol.ExprLookup.Variables#Variables()": ["org.apache.commons.configuration2.interpol.ExprLookup.Variables.<init>()"],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#XMLPropertiesConfiguration(Element)": [
        "org.apache.commons.configuration2.BaseConfiguration.<init>()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#load(Element)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getBasePath(String)": [
        "org.apache.commons.configuration2.io.DefaultFileSystem#getBasePath(String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#resolveURI(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#isTrackedNodeDetached(NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#isDetached()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.checkCombineLines(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.countTrailingBS(String)"],
    "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,Double)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,Double)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,Double)"
    ],
    "org.apache.commons.configuration2.StrictConfigurationComparator#StrictConfigurationComparator()": ["org.apache.commons.configuration2.StrictConfigurationComparator.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String,int)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String,int)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInt(String,int)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String,int)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#getFileHandler()": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#fetchFileHandlerFromParameters()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceTrackedNode(NodeSelector,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceActiveTrackedNode(TreeData,NodeSelector,ImmutableNode)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceDetachedTrackedNode(TreeData,NodeSelector,ImmutableNode)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#replaceChild(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.checkChildNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.writeComment(PropertiesWriter,String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.<staticinit>()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeln(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getLineSeparator()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#getHeader()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getHeaderComment()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory#createPropertiesWriter(Writer,ListDelimiterHandler)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#PropertiesWriter(Writer,ListDelimiterHandler)"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#installEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)"],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#nodeKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#fetchSeparator(String,Object)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getGlobalSeparator()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getCurrentSeparator()"
    ],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#setPosition(int)": ["org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getMaxPosition()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentParameters()": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerMissingProviders(Map<String, ConfigurationBuilderProvider>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams()": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#getParameters()",
        "org.apache.commons.configuration2.builder.fluent.Parameters#fileBased()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#clearTree(String,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearTree(String,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#readProperty()": [
        "org.apache.commons.configuration2.PropertiesConfiguration.isCommentLine(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.checkCombineLines(String)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler.<init>()": ["org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<staticinit>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getMaxIndexInternal(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)"
    ],
    "org.apache.commons.configuration2.interpol.StringLookupAdapter#StringLookupAdapter(StringLookup)": ["org.apache.commons.configuration2.interpol.StringLookupAdapter.<init>()"],
    "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#withDefaultLookup(Lookup)": ["org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder.checkLookup(Lookup)"],
    "org.apache.commons.configuration2.sync.ReadWriteSynchronizer#ReadWriteSynchronizer()": ["org.apache.commons.configuration2.sync.ReadWriteSynchronizer#ReadWriteSynchronizer(ReadWriteLock)"],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.flattenIterator(ListDelimiterHandler,Collection<Object>,Iterator<?>,int,Set<Object>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.flatten(ListDelimiterHandler,Object,int,Set<Object>)"
    ],
    "org.apache.commons.configuration2.web.BaseWebConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#contains(Iterator<String>,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()": ["org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.XMLConfiguration#load(InputSource)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.XMLConfiguration#createDocumentBuilder()",
        "org.apache.commons.configuration2.XMLConfiguration#initProperties(XMLDocumentHelper,boolean)",
        "org.apache.commons.configuration2.XMLDocumentHelper.forSourceDocument(Document)",
        "org.apache.commons.configuration2.XMLConfiguration#getDocument()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#ConfigData(Configuration,String,String)": ["org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData.<init>()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider.setUpBasicParameters(CombinedConfiguration,BasicBuilderParameters)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getConfigurationDecoder()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setConfigurationDecoder(ConfigurationDecoder)",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURL(String)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.isCommentLine(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(URL)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,URL)"],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#inheritParentBuilderProperties(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildBuilderParameters(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getConfigurationBuilder()"
    ],
    "org.apache.commons.configuration2.builder.INIBuilderParametersImpl#setSeparatorUsedInOutput(String)": [
        "org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()$AbstractJdbcOperation$1#performOperation()": ["org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.convert.PropertyConverter.convertToEnum(Class<?>,Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toEnum(Object,Class<E extends Enum>)"],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#flatten(Object)": ["org.apache.commons.configuration2.convert.ListDelimiterHandler#flatten(Object,int)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getSourceData()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setUpCurrentXMLParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createSourceData()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createIndependentSubConfigurationForNode(ImmutableNode)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfiguration(BaseHierarchicalConfiguration)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#prependAtPath(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#prependAtPathComponent(Builder,String,Iterator<String>,ImmutableNode)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#determineConfigurationClass(ConfigurationDeclaration,Collection<BuilderParameters>)": ["org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationClass()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()$ConfigurationInterpolator$1#fetchLookupForPrefix(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.nullSafeLookup(Lookup)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getLookups()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setConfigurationName(String)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setValueColumn(String)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()": ["org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1.<init>()"],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,int,Object)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,int,Object)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,int,Object)"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#GlobalSectionNodeModel(InMemoryNodeModelSupport,NodeSelector)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#TrackedNodeModel(InMemoryNodeModelSupport,NodeSelector,boolean)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel.<init>()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationConverter#openElements(DefaultConfigurationKey,DefaultConfigurationKey,Configuration,Set<String>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementStart(String,Object)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#commonKey(DefaultConfigurationKey)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#differenceKey(DefaultConfigurationKey)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeComment(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeln(String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,Long)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,Long)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,Long)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,Long)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#unescapeDelimiters(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#info(String)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#createNode()": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#getNodeValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#getNodeValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#createNode()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trimRight(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#hasTrailingDelimiter(String)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetResult()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListeners(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent#ConfigurationBuilderEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderEvent>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fireBuilderEvent(ConfigurationBuilderEvent)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#basic()": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()"],
    "org.apache.commons.configuration2.INIConfiguration#lineContinues(String,int)": [
        "org.apache.commons.configuration2.INIConfiguration#isCommentChar(char)",
        "org.apache.commons.configuration2.INIConfiguration.lineContinues(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getMaxPosition()": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#size()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#size()",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getStartOffset()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerMissingProviders(Map<String, ConfigurationBuilderProvider>)": ["org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerProvider(String,ConfigurationBuilderProvider)"],
    "org.apache.commons.configuration2.DataConfiguration#getByteArray(String,byte[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#isReloadingRequired()": [
        "org.apache.commons.configuration2.reloading.ReloadingController#checkForReloading(Object)",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#getSubControllers()",
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()$CombinedReloadingController$1#getSubControllers()"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#getEventListeners(EventType<T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#getEventListeners(EventType<T extends Event>)"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toURI(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#PropertiesWriter(Writer,ListDelimiterHandler,ValueTransformer)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,Short)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getShort(String,Short)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getShort(String,Short)",
        "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,Short)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.JNDIConfiguration#getBaseContext()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#setAutoSave(boolean)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#installAutoSaveListener()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#removeAutoSaveListener()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#castListener(EventListenerRegistrationData<?>)": ["org.apache.commons.configuration2.event.EventListenerRegistrationData#getListener()"],
    "org.apache.commons.configuration2.io.FileHandler#save(Writer)": [
        "org.apache.commons.configuration2.io.FileHandler#saveToWriter(Writer)",
        "org.apache.commons.configuration2.io.FileHandler#checkContent()",
        "org.apache.commons.configuration2.io.FileHandler#injectNullFileLocator()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>,boolean)"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"],
    "org.apache.commons.configuration2.YAMLConfiguration#YAMLConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.YAMLConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration(HierarchicalConfiguration<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getMatchingChildrenCount(ImmutableNode,NodeMatcher<C>,C)": ["org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getMatchingChildren(ImmutableNode,NodeMatcher<C>,C)"],
    "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.<init>()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#createTreeData(ImmutableNode,TreeData)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.initialRootNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addNodesInternal(String,Collection<? extends ImmutableNode>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addNodes(String,Collection<? extends T>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getConfig()"
    ],
    "org.apache.commons.configuration2.builder.INIBuilderParametersImpl#setSeparatorUsedInInput(String)": [
        "org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#query(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findNodesForKey(KeyIterator,T,Collection<QueryResult<T>>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createReloadingController()$CombinedReloadingController$1.<init>()": ["org.apache.commons.configuration2.reloading.CombinedReloadingController#CombinedReloadingController(Collection<? extends ReloadingController>)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionConfiguration()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionBuilder()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String,boolean)": ["org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#PropertyLayoutData()": [
        "org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData.<init>()"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(PrintWriter,String,Object)": ["org.apache.commons.configuration2.XMLPropertiesConfiguration#escapeValue(Object)"],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)": ["org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData.<init>()"],
    "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased)": [
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler.emptyFileLocator()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#PropertyListConfiguration(ImmutableNode)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<init>()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#convertValue(Object,Class<T>,ConfigurationInterpolator)": ["org.apache.commons.configuration2.convert.PropertyConverter.to(Class<?>,Object,DefaultConversionHandler)"],
    "org.apache.commons.configuration2.event.BaseEventSource#createEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)": ["org.apache.commons.configuration2.event.ConfigurationEvent#ConfigurationEvent(Object,EventType<? extends ConfigurationEvent>,String,Object,boolean)"],
    "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)$AbstractUpdater$1.<init>()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getSource(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.CombinedConfiguration#getSources(String)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getSource(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.CombinedConfiguration#getSource(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getSource(String)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toBoolean(Object)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#cloneNodeModel()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#getInMemoryRepresentation()": [
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>)": [
        "org.apache.commons.configuration2.builder.fluent.Parameters#getDefaultParametersManager()",
        "org.apache.commons.configuration2.builder.DefaultParametersManager#registerDefaultsHandler(Class<T>,DefaultParametersHandler<? super T>)"
    ],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader#BaseConfigurationXMLReader()": [
        "org.apache.commons.configuration2.ConfigurationXMLReader#ConfigurationXMLReader()",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getChildren(ImmutableNode)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)"
    ],
    "org.apache.commons.configuration2.web.BaseWebConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.MapConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SystemConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()",
        "org.apache.commons.configuration2.web.AppletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getMatchingChildren(T,NodeMatcher<C>,C)": ["org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.parseDate(String)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser#parseComponent(String,int,Calendar)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#parseComponent(String,int,Calendar)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser#parseComponent(String,int,Calendar)"
    ],
    "org.apache.commons.configuration2.SystemConfiguration.setSystemProperties(Configuration)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.SystemConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.BasePathLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.constructFile(String,String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.convertFileToURL(File)"
    ],
    "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()"],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,String)": ["org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,List<Calendar>,String)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#checkAttribute(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#removeAttributeMarkers(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#isAttributeKey(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#fetchTopLevelOverrideConfigs(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#remove()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#remove()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#remove()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#remove()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()"
    ],
    "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeList(List<?>,ValueTransformer)": [
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#getDelimiter()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintWriter)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#to(Object,Class<T>,ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#convert(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.fetchInterpolator(ConfigurationInterpolator)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getString(String)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.interpol.ExprLookup#ExprLookup()": ["org.apache.commons.configuration2.interpol.ExprLookup.<init>()"],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#initializeParameters(BuilderParameters)": ["org.apache.commons.configuration2.builder.DefaultParametersManager.DefaultHandlerData#applyHandlerIfMatching(BuilderParameters)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper#fetchBeanFactory(BeanDeclaration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getBeanFactoryName()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getBeanFactoryName()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanFactoryName()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#getDefaultBeanFactory()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanFactoryName()"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanFactoryName()": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#findFirst(Function<? super BeanDeclaration, ? extends T>)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.fromSpecification(InterpolatorSpecification)": [
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#getInterpolator()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.createInterpolator(InterpolatorSpecification)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#merge(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.EventListenerParameters#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#containsValue(Object)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.DataConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.MapConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#containsValueInternal(Object)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.BaseConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DatabaseConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.JNDIConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.SubsetConfiguration#containsValueInternal(Object)",
        "org.apache.commons.configuration2.CompositeConfiguration#containsValueInternal(Object)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal(String)": [
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#SubsetIterator(Iterator<String>)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.ImmutableConfiguration#containsValue(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#containsValue(Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildCombinedParameters(CombinedBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerMissingProviders(CombinedBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getBasePath()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#setBasePath(String)"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter#nextOrNull(Iterator<T>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()": ["org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)"],
    "org.apache.commons.configuration2.XMLListReference.isFirstListItem(ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.XMLListReference.nameEquals(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChild(T,int)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanClassName()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getDefaultBeanClassName()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)": [
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(String)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearTreeInternal(String)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearTree(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#getDateFormat()": ["org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()"],
    "org.apache.commons.configuration2.XMLDocumentHelper.forNewDocument(String)": [
        "org.apache.commons.configuration2.XMLDocumentHelper#XMLDocumentHelper(Document,Map<Node, Node>,String,String)",
        "org.apache.commons.configuration2.XMLDocumentHelper.emptyElementMapping()",
        "org.apache.commons.configuration2.XMLDocumentHelper.createDocumentBuilderFactory()",
        "org.apache.commons.configuration2.XMLDocumentHelper.createDocumentBuilder(DocumentBuilderFactory)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory#createNodePointer(NodePointer,QName,Object)": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#getNodeHandler()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#getNode()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getLong(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)",
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#getKeyList()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#visitDefinedKeys()"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#unescapePropertyValue(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.unescapeJava(String)"],
    "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.flatten(ListDelimiterHandler,Object,int,Set<Object>)": [
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.flattenIterator(ListDelimiterHandler,Collection<Object>,Iterator<?>,int,Set<Object>)",
        "org.apache.commons.configuration2.convert.ListDelimiterHandler#flatten(Object,int)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)",
        "org.apache.commons.configuration2.tree.ImmutableNode#iterator()"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#copyEventListeners(BaseEventSource)": ["org.apache.commons.configuration2.event.EventListenerList#addAll(EventListenerList)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initDefaultChildParameters(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.DefaultParametersManager#initializeParameters(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getChildDefaultParametersManager()"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#createBuilder(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationUtils.loadClass(String)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#determineConfigurationClass(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#determineBuilderClass(ConfigurationDeclaration)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#isAllowFailOnInit(ConfigurationDeclaration)",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#determineConfigurationClass(ConfigurationDeclaration,Collection<BuilderParameters>)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendAttribute(String)": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey#constructAttributeKey(String)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearTree(String)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearTreeInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearTreeInternal(String)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearTreeInternal(String)"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()": ["org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1.<init>()"],
    "org.apache.commons.configuration2.PropertiesConfiguration#loadIncludeFile(String,boolean,Deque<URL>)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.FileHandler#setFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#load(URL)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.PropertiesConfiguration#getIncludeListener()",
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased)",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.PropertiesConfiguration#locateIncludeFile(String,String)"
    ],
    "org.apache.commons.configuration2.builder.EventListenerParameters#EventListenerParameters()": [
        "org.apache.commons.configuration2.event.EventListenerList#EventListenerList()",
        "org.apache.commons.configuration2.builder.EventListenerParameters.<init>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.convertResults(List<?>)": ["org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.createResult(Object)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#releaseLock()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#insert(ImmutableNode,ImmutableNode,ImmutableNode,ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.updateAttributes(ImmutableNode,Element)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#getElement(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.XMLListReference.isListNode(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet#iterator()": ["org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#ConfigurationSetIterator()"],
    "org.apache.commons.configuration2.io.FileHandler#getFile()": [
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()",
        "org.apache.commons.configuration2.io.FileHandler.createFile(FileLocator)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#differenceKey(DefaultConfigurationKey)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#length()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#commonKey(DefaultConfigurationKey)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL,URLConnectionOptions)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.URLConnectionOptions#openConnection(URL)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#save(Document,Node)": [
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#getHeader()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(Document,Node,String,List<?>)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(Document,Node,String,Object)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#injectNullFileLocator()": [
        "org.apache.commons.configuration2.PropertiesConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.XMLConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#prepareNullLocatorBuilder()",
        "org.apache.commons.configuration2.io.FileHandler#getContent()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveUpdateKey(T,String,Object,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#parse(Object)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#iterator()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.NodeUpdateData#NodeUpdateData(Map<QueryResult<T>, Object>,Collection<Object>,Collection<QueryResult<T>>,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#initStatement(String,boolean,Object[]...)": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#createStatement(String,boolean)"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#Builder()": ["org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder.<init>()"],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()": [
        "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()$AbstractJdbcOperation$1.<init>()",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeln(String)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getLineSeparator()",
        "org.apache.commons.configuration2.PropertiesConfiguration#write(Writer)"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#setParameters(Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#updateParameters(Map<String, Object>)"],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#createManagedBuilder(String,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#ReloadingFileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#isAllowFailOnInit()"
    ],
    "org.apache.commons.configuration2.XMLDocumentHelper.createDocumentBuilder(DocumentBuilderFactory)": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.nullSafeConstructorArgs(BeanDeclaration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getConstructorArgs()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getChildren(String)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#wrapInNodeData(List<T>)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#addProperty(String,Iterable<?>,NodeKeyResolver<ImmutableNode>)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#addProperty(String,NodeSelector,Iterable<?>,NodeKeyResolver<ImmutableNode>)"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findLastPathNode(KeyIterator,T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findChildNodesByName(NodeHandler<T>,T,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#getIndex()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasIndex()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey(boolean)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isPropertyKey()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getMatchingChildrenCount(T,NodeMatcher<C>,C)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#findLastPathNode(KeyIterator,T,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackChildNodes(String,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveNodeKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createSelectorsForTrackedNodes(Mutable<Collection<NodeSelector>>,List<ImmutableNode>,TreeData,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(Document,Node,String,Object)": ["org.apache.commons.configuration2.XMLPropertiesConfiguration#escapeValue(Object)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initDefaultBasePath()": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#getFileHandler()",
        "org.apache.commons.configuration2.io.FileHandler#getBasePath()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getDefinitionBuilder()",
        "org.apache.commons.configuration2.io.FileHandler#getURL()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setBasePath(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getBasePath()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String,String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBooleanArray(String,boolean[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.constructHierarchy(String,Object)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.parseCollection(Collection<Object>,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.parseMap(Map<String, Object>,String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getAndConvertProperty(Class<T>,String,T)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getConversionHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#to(Object,Class<T>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)",
        "org.apache.commons.configuration2.DataConfiguration#getConversionHandler()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setLogger(ConfigurationLogger)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultInstance()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#checkResultInstance(Object)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultDeclaration()",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#parseAt(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()",
        "org.apache.commons.configuration2.CombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()"
    ],
    "org.apache.commons.configuration2.ConfigurationLookup#lookup(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.ConfigurationLookup#getConfiguration()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,boolean)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.XMLConfiguration#write(Writer,Transformer)",
        "org.apache.commons.configuration2.XMLConfiguration#createTransformer()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(URL)": [
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()",
        "org.apache.commons.configuration2.io.FileHandler#save(URL,FileLocator)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.loadClassNoEx(String)": [
        "org.apache.commons.configuration2.ConfigurationUtils.loadClass(String)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#removeConfiguration(Configuration)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String,BigDecimal)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.io.FileHandler#load(InputStream,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileHandler#load(InputStream,String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)": ["org.apache.commons.configuration2.tree.NodeTracker.<init>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,Byte)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,Byte)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,Byte)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,Byte)"
    ],
    "org.apache.commons.configuration2.web.ServletFilterConfiguration#ServletFilterConfiguration(FilterConfig)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clone()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#cloneNodeModel()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneSynchronizer(Synchronizer)",
        "org.apache.commons.configuration2.AbstractConfiguration#cloneInterpolator(AbstractConfiguration)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#cloneNodeModel()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer.<staticinit>()",
        "org.apache.commons.configuration2.event.BaseEventSource#clone()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#setSynchronizer(Synchronizer)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.RemoveAttributeOperation#RemoveAttributeOperation(String)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.RemoveAttributeOperation.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operation.<init>()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getChildren()": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#wrapInNodeData(List<T>)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.cloneSynchronizer(Synchronizer)": [
        "org.apache.commons.configuration2.ConfigurationUtils.<staticinit>()",
        "org.apache.commons.configuration2.sync.NoOpSynchronizer.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.ConfigurationUtils.clone(Object)"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#setLocations(Resource[]...)": ["org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.defensiveCopy(T[])"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String,int)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#checkIndexedProperty(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getBasePath()": [
        "org.apache.commons.configuration2.io.FileHandler#getBasePath()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#getReferenceNodeHandler()": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#getTreeData()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getInterpolator()": ["org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createInterpolator()"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListeners(T extends ImmutableConfiguration)": [
        "org.apache.commons.configuration2.ConfigurationUtils.asEventSource(Object,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder.removeListener(EventSource,EventListenerRegistrationData<E extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList#getRegistrations()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getProperties(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getProperties(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getProperties(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperties(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileLocator(FileLocator)": ["org.apache.commons.configuration2.io.FileHandler#fireLocationChangedEvent()"],
    "org.apache.commons.configuration2.convert.ListDelimiterHandler#flatten(Object,int)": ["org.apache.commons.configuration2.convert.AbstractListDelimiterHandler.flatten(ListDelimiterHandler,Object,int,Set<Object>)"],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setTable(String)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getURL()": [
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#handleAttributeKeys(String,T,NodeHandler<T>)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#getKeyList()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#DefinedKeysVisitor(String)",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)": [
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResult()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#initResultInstance(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultInstance()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#isAllowFailOnInit()"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup#setInterpolator(ConfigurationInterpolator)": ["org.apache.commons.configuration2.interpol.ExprLookup#installSubstitutor(ConfigurationInterpolator)"],
    "org.apache.commons.configuration2.tree.NodeTracker#update(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()",
        "org.apache.commons.configuration2.tree.NodeTracker.determineUpdatedTrackedNodeData(ImmutableNode,NodeSelector,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,Map.Entry<NodeSelector, TrackedNodeData>)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#extractPropertyValue(ResultSet)": ["org.apache.commons.configuration2.DatabaseConfiguration.convertClob(Clob)"],
    "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)": [
        "org.apache.commons.configuration2.CompositeConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.SubsetConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.DataConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.EnvironmentConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.MapConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.BaseConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.JNDIConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#clearPropertyDirect(String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)"
    ],
    "org.apache.commons.configuration2.io.FileSystem#getLogger()": ["org.apache.commons.configuration2.io.FileSystem.<staticinit>()"],
    "org.apache.commons.configuration2.MapConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.MapConfiguration#isTrimmingDisabled()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.createFullyInitializedLocatorFromURL(FileLocator,URL)": [
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getBasePath(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileName(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#fetchFileBased()": ["org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setConfigurationDecoder(ConfigurationDecoder)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration.DataConversionHandler#getDateFormat()": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.DataConfiguration#getDefaultDateFormat()",
        "org.apache.commons.configuration2.DataConfiguration.DataConversionHandler#getDateFormat()",
        "org.apache.commons.configuration2.DataConfiguration#getOriginalConversionHandler()",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#getDateFormat()"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setDocumentBuilder(DocumentBuilder)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(URL)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,URL)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#createChildConfiguration()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getNodeCombiner()",
        "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration(NodeCombiner)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#registerConfiguredLookups(HierarchicalConfiguration<?>,Configuration)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#registerLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathContextFactory#createContext(T,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.wrapNode(T,NodeHandler<T>)"],
    "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributeOperation#apply(ImmutableNode,Operations)": ["org.apache.commons.configuration2.tree.ImmutableNode#setAttribute(String,Object)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()": [
        "org.apache.commons.configuration2.beanutils.BeanHelper#BeanHelper()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.initBeanUtilsBean()"
    ],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#PeriodicReloadingTrigger(ReloadingController,Object,long,TimeUnit)": ["org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#PeriodicReloadingTrigger(ReloadingController,Object,long,TimeUnit,ScheduledExecutorService)"],
    "org.apache.commons.configuration2.INIConfiguration#INIConfiguration()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.INIConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.lineContinues(String)": ["org.apache.commons.configuration2.INIConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getParameters()": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveNodeKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.PrefixedKeysIterator#PrefixedKeysIterator(Iterator<String>,String)": ["org.apache.commons.configuration2.PrefixedKeysIterator#PrefixedKeysIterator(Iterator<String>,String,String)"],
    "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()": [
        "org.apache.commons.configuration2.io.FileHandler#setFile(File)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#clearLocation()$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#fireLocationChangedEvent()",
        "org.apache.commons.configuration2.io.FileHandler#setFileName(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#setLocationStrategy(FileLocationStrategy)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)": ["org.apache.commons.configuration2.AbstractConfiguration.throwMissingPropertyException(String)"],
    "org.apache.commons.configuration2.CompositeConfiguration#getList(String,List<?>)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.CompositeConfiguration#appendListProperty(List<Object>,Configuration,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(Object)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(PrintWriter,String,List<?>)": ["org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(PrintWriter,String,Object)"],
    "org.apache.commons.configuration2.CombinedConfiguration#getConfigurations()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.beanutils.ConstructorArg.forBeanDeclaration(BeanDeclaration,String)": ["org.apache.commons.configuration2.beanutils.ConstructorArg#ConstructorArg(BeanDeclaration,Object,String)"],
    "org.apache.commons.configuration2.event.ConfigurationErrorEvent#ConfigurationErrorEvent(Object,EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<init>()",
        "org.apache.commons.configuration2.event.Event#Event(Object,EventType<? extends Event>)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#clearInternal()": [
        "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#initChildCollections()",
        "org.apache.commons.configuration2.CombinedConfiguration#unregisterListenerAtChildren()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setConversionHandler(ConversionHandler)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#isSingleVariable(String)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<staticinit>()"],
    "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementEnd(String)": [
        "org.apache.commons.configuration2.ConfigurationXMLReader.<staticinit>()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getException()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getContentHandler()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer#ConfigurationAttributePointer(ConfigurationNodePointer<T>,String)": [
        "org.apache.commons.configuration2.tree.QueryResult.createAttributeResult(T,String)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationAttributePointer.<init>()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getConfigurationNode()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#multiFile()": ["org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.io.URLConnectionOptions#URLConnectionOptions()": ["org.apache.commons.configuration2.io.URLConnectionOptions.<init>()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackChildNodeWithCreation(String,String,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveNodeKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createDataWithTrackedChildNode(TreeData,ImmutableNode,String,NodeKeyResolver<ImmutableNode>,MutableObject<NodeSelector>)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setReloadingRefreshDelay(Long)",
        "org.apache.commons.configuration2.io.FileHandler#getFileSystem()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getReloadingRefreshDelay()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setLocationStrategy(FileLocationStrategy)",
        "org.apache.commons.configuration2.io.FileHandler#getEncoding()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFileSystem(FileSystem)",
        "org.apache.commons.configuration2.io.FileHandler#getLocationStrategy()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setReloadingDetectorFactory(ReloadingDetectorFactory)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getReloadingDetectorFactory()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setEncoding(String)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedAttributeName(String)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedName(String)"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#Configurations(Parameters)": [
        "org.apache.commons.configuration2.builder.fluent.Parameters#Parameters()",
        "org.apache.commons.configuration2.builder.fluent.Configurations.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.createNewRootNode(Builder,Map<String, Builder>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.SystemConfiguration#SystemConfiguration()": [
        "org.apache.commons.configuration2.SystemConfiguration.<init>()",
        "org.apache.commons.configuration2.MapConfiguration#MapConfiguration(Map<String, ?>)"
    ],
    "org.apache.commons.configuration2.SubnodeConfiguration#SubnodeConfiguration(BaseHierarchicalConfiguration,TrackedNodeModel)": [
        "org.apache.commons.configuration2.SubnodeConfiguration.<init>()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getOutputStream(URL)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getOptions(String)"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setPrefixLookups(Map<String, ? extends Lookup>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#registerEventListeners(T extends ImmutableConfiguration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder.registerListener(EventSource,EventListenerRegistrationData<E extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils.asEventSource(Object,boolean)",
        "org.apache.commons.configuration2.event.EventListenerList#getRegistrations()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#clone()": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#setManagedBuilderParameters(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getManagedBuilderParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#clone()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneIfPossible(Object)"
    ],
    "org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(List<String>)": ["org.apache.commons.configuration2.tree.NodeSelector.<init>()"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#jndi()": ["org.apache.commons.configuration2.builder.JndiBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toByte(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.DataConfiguration#getColor(String)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#installDefaultInterpolator()",
        "org.apache.commons.configuration2.event.BaseEventSource#BaseEventSource()",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper#BeanHelper(BeanFactory)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getArray(Class<?>,String)": ["org.apache.commons.configuration2.AbstractConfiguration#getArray(Class<?>,String,Object)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter#extractSimpleValue(Object)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#iterator()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultStringConverter#nextOrNull(Iterator<T>)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#visitDefinedKeys()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkDFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#DefinedKeysVisitor()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.cloneConfiguration(Configuration)": [
        "org.apache.commons.configuration2.ConfigurationUtils.clone(Object)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor#visitBeforeChildren(ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor#insertNewChildNodes(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.BuilderVisitor#updateNode(ImmutableNode,ReferenceNodeHandler)"
    ],
    "org.apache.commons.configuration2.io.ClasspathLocationStrategy#locate(FileSystem,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getClasspathResource(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration.findConfigurationLookup(ConfigurationInterpolator,ImmutableConfiguration)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getDefaultLookups()",
        "org.apache.commons.configuration2.ConfigurationLookup#getConfiguration()"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger.newDummyLogger()": ["org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)"],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter.<init>()": ["org.apache.commons.configuration2.HierarchicalConfigurationConverter.<init>()"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder#DefaultPrefixLookupsHolder(Properties)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.parseLookups(String)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.createDefaultLookups()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.<init>()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#fetchPrefixLookups()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getConfigurationUnderConstruction()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#getLookups()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#initProperties(Collection<? extends DynaClass>)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#getDynaProperties()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#getDynaProperties()"
    ],
    "org.apache.commons.configuration2.MapConfiguration#addPropertyDirect(String,Object)": ["org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)"],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#extractComment(List<String>,int,int)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.<staticinit>()"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Log)": ["org.apache.commons.configuration2.io.ConfigurationLogger.<init>()"],
    "org.apache.commons.configuration2.SubnodeConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getParent()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#query(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#query(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toCalendar(Object,String)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.web.ServletConfiguration#ServletConfiguration(Servlet)": ["org.apache.commons.configuration2.web.ServletConfiguration#ServletConfiguration(Servlet)"],
    "org.apache.commons.configuration2.AbstractConfiguration#clear()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#clearInternal()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#clearInternal()",
        "org.apache.commons.configuration2.EnvironmentConfiguration#clearInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#clearInternal()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#clearInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#clearInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DatabaseConfiguration#clearInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#clearInternal()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#NodeData(T,NodeHandler<T>)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData.<init>()"],
    "org.apache.commons.configuration2.XMLConfiguration#createDocument()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#handleRemovedNodes(ReferenceNodeHandler)",
        "org.apache.commons.configuration2.XMLDocumentHelper.forNewDocument(String)",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#processDocument(ReferenceNodeHandler)",
        "org.apache.commons.configuration2.XMLDocumentHelper#createCopy()",
        "org.apache.commons.configuration2.XMLConfiguration#getReferenceHandler()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.XMLConfiguration#initRootElementText(Document,Object)",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#XMLBuilderVisitor(XMLDocumentHelper,ListDelimiterHandler)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementName()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,String)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,Calendar[],String)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigIntegerArray(String,BigInteger[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.tree.ImmutableNode#removeChild(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#createWithBasicProperties(Builder)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDoubleList(String,List<Double>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#interpolatedConfiguration()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#interpolatedConfiguration()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#interpolatedConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#interpolatedConfiguration()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#MultiWrapDynaBean(Collection<?>)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#getDynaProperties()",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean.<init>()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#getDynaProperties()",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean.createDynaBean(Object)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#getDynaClass()",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#getDynaClass()",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#MultiWrapDynaClass(Collection<? extends DynaClass>)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toFile(Object)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1.<init>()",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.<init>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(Reader)": [
        "org.apache.commons.configuration2.io.FileHandler#checkContent()",
        "org.apache.commons.configuration2.io.FileHandler#loadFromReader(Reader)",
        "org.apache.commons.configuration2.io.FileHandler#injectNullFileLocator()"
    ],
    "org.apache.commons.configuration2.builder.INIBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,float)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,float)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,float)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,float)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#setSynchronizer(Synchronizer)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.AbstractConfiguration#isEmpty()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubsetRootNode(Collection<QueryResult<ImmutableNode>>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#JupIOFactory()": ["org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#JupIOFactory(boolean)"],
    "org.apache.commons.configuration2.beanutils.ConstructorArg.forBeanDeclaration(BeanDeclaration)": ["org.apache.commons.configuration2.beanutils.ConstructorArg.forBeanDeclaration(BeanDeclaration,String)"],
    "org.apache.commons.configuration2.tree.MergeCombiner#combine(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.MergeCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.MergeCombiner#addAttributes(Builder,ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.MergeCombiner#canCombine(ImmutableNode,ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#ReloadingFileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.parseCollection(Collection<Object>,String)": ["org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.constructHierarchy(String,Object)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,Boolean)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,Boolean)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getSources(String)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.CombinedConfiguration#findSourceConfigurations(ImmutableNode)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#locate()": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.isFullyInitialized(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fullyInitializedLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.copyProperties(Object,Object)": ["org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(File)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFile(File)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getValue(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getValue()"],
    "org.apache.commons.configuration2.DataConfiguration#getBigIntegerList(String,List<BigInteger>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.DataConfiguration#getLongList(String)": ["org.apache.commons.configuration2.DataConfiguration#getLongList(String,List<Long>)"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger()": ["org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Log)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#escapeKey(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.io.FileHandler#load(InputStream)": [
        "org.apache.commons.configuration2.io.FileHandler#load(InputStream,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileName(String)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler.normalizeFileURL(String)",
        "org.apache.commons.configuration2.io.FileHandler#setFileName(String)$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#createStatement(String,boolean)": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#getConnection()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean,String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#initSubnodeConfiguration(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<init>()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.createNodeDataFromConfiguration(HierarchicalConfiguration<T>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#constructAttributeKey(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#isAttributeKey(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initEncoding(FileHandler)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()",
        "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.getDefaultEncoding(Class<?>)",
        "org.apache.commons.configuration2.io.FileHandler#getEncoding()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#removeAttributeMarkers(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.YAMLConfiguration#dump(Writer,DumperOptions)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#constructMap(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys(String)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)$ConfigurationNodeVisitorAdapter$1.<init>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkBFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.<staticinit>()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,Boolean)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,Boolean)"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#initNextElement()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getEventType()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#castListener(EventListenerRegistrationData<?>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#load(URL)": [
        "org.apache.commons.configuration2.io.FileHandler#load(URL,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()"
    ],
    "org.apache.commons.configuration2.tree.TreeData#TreeData(ImmutableNode,Map<ImmutableNode, ImmutableNode>,Map<ImmutableNode, ImmutableNode>,NodeTracker,ReferenceTracker)": [
        "org.apache.commons.configuration2.tree.TreeData#createInverseMapping(Map<ImmutableNode, ImmutableNode>)",
        "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler.<init>()",
        "org.apache.commons.configuration2.tree.TreeData.<init>()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet#size()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<staticinit>()": [
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.JSONConfiguration#read(InputStream)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initFileHandler(FileHandler)": [
        "org.apache.commons.configuration2.io.FileHandler#load()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initEncoding(FileHandler)",
        "org.apache.commons.configuration2.io.FileHandler#isLocationDefined()",
        "org.apache.commons.configuration2.io.FileHandler#locate()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#XMLConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementName()",
        "org.apache.commons.configuration2.XMLConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getOutputStream(URL)": [
        "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#HttpOutputStream(OutputStream,HttpURLConnection)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getOutputStream(File)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTrackedNodeHandler(NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getDetachedNodeModel(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNode(NodeSelector)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#TrackedNodeHandler(ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#removeAttribute(String)": ["org.apache.commons.configuration2.tree.ImmutableNode#createWithNewAttributes(Map<String, Object>)"],
    "org.apache.commons.configuration2.interpol.ExprLookup.<init>()": ["org.apache.commons.configuration2.interpol.ExprLookup.<staticinit>()"],
    "org.apache.commons.configuration2.tree.UnionCombiner#combine(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.UnionCombiner#findCombineNode(ImmutableNode,ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.UnionCombiner#combine(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.XMLDocumentHelper.createTransformer()": [
        "org.apache.commons.configuration2.XMLDocumentHelper.createTransformerFactory()",
        "org.apache.commons.configuration2.XMLDocumentHelper.createTransformer(TransformerFactory)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toURL(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#getFooter()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getLayout()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#getFooterComment()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractConversionValue(Object,Class<?>,ConfigurationInterpolator)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#extractValues(Object,int)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#installInterpolator(Map<String, ? extends Lookup>,Collection<? extends Lookup>)": [
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#Builder()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.fromSpecification(InterpolatorSpecification)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#create()",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#withDefaultLookups(Collection<? extends Lookup>)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#withPrefixLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.ConfigurationLookup#ConfigurationLookup(ImmutableConfiguration)",
        "org.apache.commons.configuration2.AbstractConfiguration#setInterpolator(ConfigurationInterpolator)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#withDefaultLookup(Lookup)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)": [
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.locateOrThrow(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.locate(FileLocator)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.tree.ModelTransaction#addRemoveNodeOperation(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNodeToRemove(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addChildrenOperation(ChildrenUpdateOperation)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation.<init>()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.initializeClearTransaction(ModelTransaction,Collection<QueryResult<ImmutableNode>>)": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addRemoveAttributeOperation(ImmutableNode,String)",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addClearNodeValueOperation(ImmutableNode)",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#query(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.createResult(Object)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#createContext(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.convertResults(List<?>)"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#isInfoEnabled()": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.DataConfiguration#getDateList(String,String)": ["org.apache.commons.configuration2.DataConfiguration#getDateList(String,List<Date>,String)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#addAttributeData(ConfigurationNodePointer<T>,List<String>,String)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getConfigurationNode()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isOptional()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,Boolean)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.isPropertyWriteable(Object,String)": ["org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()"],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#Entry(Object)": ["org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#attributeName(String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#removeAttributeMarkers(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#isAttributeKey(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#createXMLDefinitionBuilder(BuilderParameters)": [
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#ReloadingFileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#configure(BuilderParameters[]...)"
    ],
    "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)": ["org.apache.commons.configuration2.event.EventType.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#setPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#getPublicID()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,Object,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#fetchSeparator(String,Object)",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeProperty(String,List<?>)",
        "org.apache.commons.configuration2.PropertiesConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#getDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#writeln(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#escapeKey(String)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeList(List<?>,ValueTransformer)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,boolean)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,boolean)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#hasTrailingDelimiter(String)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#executeOperations()": ["org.apache.commons.configuration2.tree.ModelTransaction.Operations#apply(ImmutableNode,int)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#releaseLock()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttributes()": ["org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#saveToStream(OutputStream,String,URL)": [
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#lock(LockMode)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)",
        "org.apache.commons.configuration2.io.FileHandler#saveToWriter(Writer)",
        "org.apache.commons.configuration2.io.FileHandler#checkContent()",
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#unlock(LockMode)",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()",
        "org.apache.commons.configuration2.io.FileHandler#fetchSynchronizerSupport()",
        "org.apache.commons.configuration2.io.FileHandler#injectFileLocator(URL)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#DatabaseConfiguration()": [
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.AbstractConfiguration#addErrorLogListener()",
        "org.apache.commons.configuration2.DatabaseConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#load(Element)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#setHeader(String)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.io.FileHandler#checkContentAndGetLocator()": [
        "org.apache.commons.configuration2.io.FileHandler#checkContent()",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.web.ServletFilterConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#remove(String,String)": [
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean.<staticinit>()",
        "org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#ReloadingMultiFileConfigurationBuilder(Class<T extends FileBasedConfiguration>,Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#MultiFileConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#ConfigurationNodePointer(ConfigurationNodePointer<T>,T,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer.<init>()"],
    "org.apache.commons.configuration2.tree.NodeCombiner#NodeCombiner()": ["org.apache.commons.configuration2.tree.NodeCombiner.<init>()"],
    "org.apache.commons.configuration2.ConfigurationMap#put(Object,Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributes(T)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl(FileHandler)": [
        "org.apache.commons.configuration2.io.FileHandler#FileHandler()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#BasicBuilderParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.<init>()"
    ],
    "org.apache.commons.configuration2.ConfigurationLookup#ConfigurationLookup(ImmutableConfiguration)": ["org.apache.commons.configuration2.ConfigurationLookup.<init>()"],
    "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(String)": ["org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,String)"],
    "org.apache.commons.configuration2.XMLConfiguration#write(Writer,Transformer)": [
        "org.apache.commons.configuration2.XMLDocumentHelper.transform(Transformer,Source,Result)",
        "org.apache.commons.configuration2.XMLConfiguration#createDocument()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#prependAtPathComponent(Builder,String,Iterator<String>,ImmutableNode)": [
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#prependAtPathComponent(Builder,String,Iterator<String>,ImmutableNode)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#nodeKey(T,Map<T, String>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#canonicalKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#canonicalKey(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#getReloadingController()": [
        "org.apache.commons.configuration2.builder.combined.ReloadingMultiFileConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#getReloadingController()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.dump(Configuration,PrintStream)": ["org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintStream)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,Byte)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,Byte)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,Byte)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,Byte)"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#XPathExpressionEngine()": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#XPathExpressionEngine(XPathContextFactory)",
        "org.apache.commons.configuration2.tree.xpath.XPathContextFactory.<init>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFile(File)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#updateParentMappingForAddedNodes()": ["org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)"],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#BaseConfigurationBuilderProvider(String,String,String,Collection<String>)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider.initParameterClasses(Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider.<init>()"
    ],
    "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getTrackedModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.addNodesByAddData(ModelTransaction,NodeAddData<ImmutableNode>,Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodesOperation(ImmutableNode,Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeAddData#getPathNodes()",
        "org.apache.commons.configuration2.tree.NodeAddData#getParent()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodeOperation(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createNodeToAddWithPath(NodeAddData<ImmutableNode>,Collection<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": ["org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileSystem(FileSystem)"],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#terminate()": ["org.apache.commons.configuration2.ConfigurationXMLReader#getException()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String,boolean)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#escapeDelimiters(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#isAttributeKey(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#trim(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#clearInternal()": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#remove()",
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#remove()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#remove()",
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()",
        "org.apache.commons.configuration2.event.BaseEventSource#setDetailEvents(boolean)"
    ],
    "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#create()": [
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification#InterpolatorSpecification(Builder)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#reset()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDateArray(String,Date[],String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#resolveURI(String)": ["org.apache.commons.configuration2.io.VFSFileSystem#getManager()"],
    "org.apache.commons.configuration2.convert.PropertyConverter.toFloat(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.convert.PropertyConverter#PropertyConverter()": ["org.apache.commons.configuration2.convert.PropertyConverter.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration#findSeparator(String)": [
        "org.apache.commons.configuration2.INIConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.INIConfiguration.findSeparatorBeforeQuote(String,int)",
        "org.apache.commons.configuration2.INIConfiguration#getSeparatorUsedInInput()",
        "org.apache.commons.configuration2.INIConfiguration.findFirstOccurrence(String,String)"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#hashCode()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getBlancLines()": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getBlankLines()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#MultiFileConfigurationBuilderProvider(String,String)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#BaseConfigurationBuilderProvider(String,String,String,Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.<init>()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchInterpolatorSpecification(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchParameter(Map<String, Object>,String,Class<T>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchAndCheckPrefixLookups(Map<String, Object>)",
        "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#Builder()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.checkParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchAndCheckDefaultLookups(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder.removeListener(EventSource,EventListenerRegistrationData<E extends Event>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getListener()",
        "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getEventType()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttribute(String,Object)": ["org.apache.commons.configuration2.tree.ImmutableNode.Builder#ensureAttributesExist()"],
    "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#configure(BuilderParameters[]...)": ["org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#configure(BuilderParameters[]...)"],
    "org.apache.commons.configuration2.XMLDocumentHelper#createCopy()": [
        "org.apache.commons.configuration2.XMLDocumentHelper#XMLDocumentHelper(Document,Map<Node, Node>,String,String)",
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()",
        "org.apache.commons.configuration2.XMLDocumentHelper.copyDocument(Document)",
        "org.apache.commons.configuration2.XMLDocumentHelper#getSourceSystemID()",
        "org.apache.commons.configuration2.XMLDocumentHelper.createElementMapping(Document,Document)",
        "org.apache.commons.configuration2.XMLDocumentHelper#getSourcePublicID()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#urlConnectionOptions(URLConnectionOptions)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)"
    ],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.event.BaseEventSource#createErrorEvent(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)": ["org.apache.commons.configuration2.event.ConfigurationErrorEvent#ConfigurationErrorEvent(Object,EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser#DateSeparatorParser(String)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser.<init>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateSeparatorParser.<init>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngine#attributeKey(String,String)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#appendAttribute(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#toString()"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toInetAddress(Object)": [
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)": ["org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL,URLConnectionOptions)"],
    "org.apache.commons.configuration2.reloading.ReloadingEvent#ReloadingEvent(ReloadingController,Object)": [
        "org.apache.commons.configuration2.reloading.ReloadingEvent.<init>()",
        "org.apache.commons.configuration2.event.Event#Event(Object,EventType<? extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingEvent.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils#FileLocatorUtils()": ["org.apache.commons.configuration2.io.FileLocatorUtils.<init>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,double)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,double)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,double)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,double)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.transformMap(Map<?, ?>)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#resetParameters()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#cleanUp()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetParameters()"
    ],
    "org.apache.commons.configuration2.XMLListReference.nameEquals(ImmutableNode,ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#createContext(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#getContextFactory()",
        "org.apache.commons.configuration2.tree.xpath.XPathContextFactory#createContext(T,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceDetachedTrackedNode(TreeData,NodeSelector,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#setRootNode(ImmutableNode)",
        "org.apache.commons.configuration2.tree.NodeTracker#getDetachedNodeModel(NodeSelector)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDateList(String)": ["org.apache.commons.configuration2.DataConfiguration#getDateList(String,List<Date>)"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#DefaultBeanFactory(ConversionHandler)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isReservedAttributeName(String)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getAttributeNames()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedAttributeName(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<?>,NodeData<?>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#initSubnodeConfiguration(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<init>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#save(OutputStream,FileLocator)": [
        "org.apache.commons.configuration2.io.FileHandler#save(OutputStream,String)",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.toString(ImmutableConfiguration)": ["org.apache.commons.configuration2.ConfigurationUtils.dump(ImmutableConfiguration,PrintWriter)"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#error(String)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException.<init>()"],
    "org.apache.commons.configuration2.web.ServletRequestConfiguration#getPropertyInternal(String)": ["org.apache.commons.configuration2.web.BaseWebConfiguration#handleDelimiters(Object)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getShort(String,Short)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.getConstructorArgs(BeanDeclaration)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConstructorArgs()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getConstructorArgs()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURLArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getURLArray(String,URL[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()$ConfigurationInterpolator$1.<init>()": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()"],
    "org.apache.commons.configuration2.DataConfiguration#getColorList(String)": ["org.apache.commons.configuration2.DataConfiguration#getColorList(String,List<Color>)"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey(boolean)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#checkIndex(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#checkAttribute(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#currentKey(boolean)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#findNextIndices()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#prepareAdd(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.findKeySeparator(String)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#generateKeyForAdd(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#createNodeAddData(String,QueryResult<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#query(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.invalidPath(String,String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getKeysInternal(String,String)": [
        "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.MapConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SystemConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()",
        "org.apache.commons.configuration2.web.AppletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#PrefixedKeysIterator(Iterator<String>,String,String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletConfiguration#getKeysInternal()"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Configuration,Collection<? extends Configuration>)": ["org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Configuration)"],
    "org.apache.commons.configuration2.io.ProvidedURLLocationStrategy#locate(FileSystem,FileLocator)": ["org.apache.commons.configuration2.io.FileLocator#getSourceURL()"],
    "org.apache.commons.configuration2.DataConfiguration#clearPropertyDirect(String)": ["org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)"],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.<staticinit>()": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder#DefaultPrefixLookupsHolder(Properties)"],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getBasePath(String)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.getBasePath(URL)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getURL(String,String)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)"
    ],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)": ["org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeValue(Object,boolean,ValueTransformer)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#createConfigurationBuilder(ConfigurationDeclaration)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationBuilder(ConfigurationDeclaration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#providerForTag(String)",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getName()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#getConfigurationBuilder(ConfigurationDeclaration)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementName()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setEncoding(String)$AbstractUpdater$1#updateBuilder(FileLocatorBuilder)": ["org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#encoding(String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,Float)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,Float)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,Float)",
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,Float)"
    ],
    "org.apache.commons.configuration2.tree.ReferenceTracker#addReferences(Map<ImmutableNode, ?>)": ["org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker(Map<ImmutableNode, Object>,List<Object>)"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.createNodeModel(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getFileName()": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileName(URL)",
        "org.apache.commons.configuration2.io.FileLocator#getFileName()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#clone()": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#clone()",
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileHandler)",
        "org.apache.commons.configuration2.io.FileHandler#getContent()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createDeclarations(Collection<? extends HierarchicalConfiguration<?>>)": ["org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#ConfigurationDeclaration(CombinedConfigurationBuilder,HierarchicalConfiguration<?>)"],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.getSupportedInterfaces(Class<?>,EventSourceSupport)": ["org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.EventSourceSupport.<staticinit>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,byte)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getByte(String,Byte)",
        "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,Byte)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getByte(String,Byte)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.interpol.ConstantLookup.clear()": ["org.apache.commons.configuration2.interpol.ConstantLookup.<staticinit>()"],
    "org.apache.commons.configuration2.event.BaseEventSource#clone()": ["org.apache.commons.configuration2.event.BaseEventSource#initListeners()"],
    "org.apache.commons.configuration2.XMLConfiguration#constructHierarchy(Builder,MutableObject<String>,Element,Map<ImmutableNode, Object>,boolean,int)": [
        "org.apache.commons.configuration2.XMLConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.XMLConfiguration.processAttributes(Element)",
        "org.apache.commons.configuration2.XMLConfiguration#constructHierarchy(Builder,MutableObject<String>,Element,Map<ImmutableNode, Object>,boolean,int)",
        "org.apache.commons.configuration2.XMLConfiguration#createChildNodeWithValue(Builder,Builder,Element,String,boolean,Map<String, String>,Map<ImmutableNode, Object>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addAttributes(Map<String, ?>)",
        "org.apache.commons.configuration2.XMLConfiguration.shouldTrim(Element,boolean)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.XMLConfiguration.determineValue(String,boolean,boolean)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#contains(Iterator<String>,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()"
    ],
    "org.apache.commons.configuration2.builder.AutoSaveListener#onEvent(ConfigurationEvent)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#save()",
        "org.apache.commons.configuration2.builder.AutoSaveListener#autoSaveRequired(ConfigurationEvent)"
    ],
    "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String,Throwable)": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)",
        "org.apache.commons.configuration2.ex.ConversionException.<init>()"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.interpol.ExprLookup#createContext()": ["org.apache.commons.configuration2.interpol.ExprLookup#initializeContext(JexlContext)"],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromMap(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl(FileHandler)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setReloadingRefreshDelay(Long)",
        "org.apache.commons.configuration2.io.FileHandler.fromMap(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setReloadingDetectorFactory(ReloadingDetectorFactory)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration#INIConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.INIConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchAndCheckPrefixLookups(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchParameter(Map<String, Object>,String,Class<T>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchPrefixLookups(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#visitAfterChildren(ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#storeInterpolatedNode(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#pop()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration.InterpolatedVisitor#isLeafNode(ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultDeclaration()": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createResultDeclaration(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getFilteredParameters()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#XMLPropertiesConfiguration()": [
        "org.apache.commons.configuration2.BaseConfiguration.<init>()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler.fetchInterpolator(ConfigurationInterpolator)": ["org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()"],
    "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)": [
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.CombinedConfiguration#isUpToDate()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()": ["org.apache.commons.configuration2.sync.NoOpSynchronizer.<staticinit>()"],
    "org.apache.commons.configuration2.tree.UnionCombiner#findCombineNode(ImmutableNode,ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.NodeCombiner#isListNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#copyEventListeners(BasicConfigurationBuilder<?>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#copyEventListeners(BasicConfigurationBuilder<?>,EventListenerList)"],
    "org.apache.commons.configuration2.INIConfiguration#getGlobalSection()": [
        "org.apache.commons.configuration2.SubnodeConfiguration#SubnodeConfiguration(BaseHierarchicalConfiguration,TrackedNodeModel)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#GlobalSectionNodeModel(InMemoryNodeModelSupport,NodeSelector)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackNode(NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(List<String>)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfigurationForThisParent(SubnodeConfiguration)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInteger(String,Integer)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInteger(String,Integer)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInteger(String,Integer)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInteger(String,Integer)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clearInternal()": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.event.EventListenerRegistrationData#EventListenerRegistrationData(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerRegistrationData.<init>()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#resetParameters()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#removeEventListener(EventType<E extends Event>,EventListener<? super E extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilders()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#resetParameters()"
    ],
    "org.apache.commons.configuration2.INIConfiguration.isSectionNode(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getValue()"],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.<staticinit>()": ["org.apache.commons.configuration2.builder.DefaultReloadingDetectorFactory.<init>()"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#addParameters(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#updateParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#injectFileLocator(URL)": [
        "org.apache.commons.configuration2.PropertiesConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#injectNullFileLocator()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.XMLConfiguration#initFileLocator(FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler#prepareNullLocatorBuilder()",
        "org.apache.commons.configuration2.io.FileHandler#getContent()"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationConverter#reverseIterator(DefaultConfigurationKey)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#iterator()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#DefinedKeysVisitor(String)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#DefinedKeysVisitor()"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#combined()": ["org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#CombinedBuilderParametersImpl()"],
    "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration(NodeCombiner)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration.<init>()",
        "org.apache.commons.configuration2.CombinedConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.CombinedConfiguration#initChildCollections()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getProperties(String,Properties)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getStringArray(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getStringArray(String)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath()": ["org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#substitute(String)"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#setRootNode(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceTrackedNode(NodeSelector,ImmutableNode)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNode(NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getNode()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.io.ConfigurationLogger#warn(String)": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getFileName(String)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.getFileName(URL)",
        "org.apache.commons.configuration2.io.VFSFileSystem#getURL(String,String)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#load(PropertiesConfiguration,Reader)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#getPropertyName()",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#getCommentLines()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setComment(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration#getIOFactory()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setBlankLines(int)",
        "org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory#createPropertiesReader(Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration.JupIOFactory#createPropertiesReader(Reader)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#getPropertyValue()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setSingleLine(boolean)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setSeparator(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#getPropertySeparator()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#extractComment(List<String>,int,int)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#checkHeaderComment(List<String>)",
        "org.apache.commons.configuration2.PropertiesConfiguration#propertyLoaded(String,String,Deque<URL>)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#addComment(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setFooterComment(String)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#nextProperty()"
    ],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#setLayout(PropertiesConfigurationLayout)": [
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.ConfigurationConverter.getProperties(Configuration)": ["org.apache.commons.configuration2.ConfigurationConverter.getProperties(ImmutableConfiguration)"],
    "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration()": ["org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration(NodeCombiner)"],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)$AbstractJdbcOperation$1.<init>()": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)"],
    "org.apache.commons.configuration2.YAMLConfiguration#write(Writer)": ["org.apache.commons.configuration2.YAMLConfiguration#dump(Writer,DumperOptions)"],
    "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()": [
        "org.apache.commons.configuration2.event.Event.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getParentKey(String)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#getElement(ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.tree.TreeData#getReference(ImmutableNode)",
        "org.apache.commons.configuration2.XMLDocumentHelper#getDocument()",
        "org.apache.commons.configuration2.XMLListReference#getElement()"
    ],
    "org.apache.commons.configuration2.io.VFSFileSystem#getPath(File,URL,String,String)": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getPath(File,URL,String,String)",
        "org.apache.commons.configuration2.io.VFSFileSystem#resolveURI(String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,Long)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,Long)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String,Long)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String,Long)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#onEvent(ConfigurationEvent)": [
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.event.ConfigurationEvent#getPropertyName()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.ConfigurationEvent#isBeforeUpdate()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#clear()",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setSingleLine(boolean)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#combine(ChildrenUpdateOperation)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Map<K, V>,Map<? extends K, ? extends V>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Set<E>,Set<? extends E>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.concatenate(Collection<E>,Collection<? extends E>)"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#visitBeforeChildren(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireCharacters(String)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#fetchAttributes(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#nodeName(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementStart(String,Attributes)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeHandler#TrackedNodeHandler(ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler.<init>()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler.<init>()"
    ],
    "org.apache.commons.configuration2.INIConfiguration#escapeValue(String)": [
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.INIConfiguration#escapeComments(String)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog#loadSystemCatalogs()": [
        "org.apache.commons.configuration2.io.VFSFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.<staticinit>()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getBaseDir()",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getInputStream(URL)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#getFileSystem()",
        "org.apache.commons.configuration2.resolver.CatalogResolver.locate(FileSystem,String,String)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.Catalog#parseCatalog(String,String)"
    ],
    "org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker(Map<ImmutableNode, Object>,List<Object>)": ["org.apache.commons.configuration2.tree.ReferenceTracker.<init>()"],
    "org.apache.commons.configuration2.PrefixedKeysIterator#setNextElement()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#addPropertyDirect(String,Object)": [
        "org.apache.commons.configuration2.SubsetConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.EnvironmentConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.DataConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.web.BaseWebConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.MapConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.CompositeConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)",
        "org.apache.commons.configuration2.DatabaseConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.JNDIConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.BaseConfiguration#addPropertyDirect(String,Object)"
    ],
    "org.apache.commons.configuration2.CompositeConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)"
    ],
    "org.apache.commons.configuration2.web.ServletContextConfiguration#ServletContextConfiguration(ServletContext)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#PropertyListConfiguration(HierarchicalConfiguration<ImmutableNode>)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(HierarchicalConfiguration<ImmutableNode>)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.event.Event#toString()": [
        "org.apache.commons.configuration2.event.Event.<staticinit>()",
        "org.apache.commons.configuration2.event.Event#appendPropertyRepresentation(StringBuilder,String,Object)",
        "org.apache.commons.configuration2.event.Event#getEventType()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getBasePath()": [
        "org.apache.commons.configuration2.io.FileLocator#getBasePath()",
        "org.apache.commons.configuration2.io.FileLocator#getSourceURL()",
        "org.apache.commons.configuration2.io.FileLocatorUtils.getBasePath(URL)",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getBeanClassName()": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#addRemoveAttributeOperation(ImmutableNode,String)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.RemoveAttributeOperation#RemoveAttributeOperation(String)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getCalendarArray(String,Calendar[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.YAMLConfiguration#read(Reader,LoaderOptions)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.YAMLConfiguration.createYamlForReading(LoaderOptions)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderProperties#setURL(URL,URLConnectionOptions)": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setURL(URL)"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchBeanHelper(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.convertToHierarchical(Configuration,ExpressionEngine)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.AbstractConfiguration#copy(Configuration)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#append(Configuration)": [
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#lock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#lock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)",
        "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#unlock(LockMode)",
        "org.apache.commons.configuration2.AbstractConfiguration#encodeForCopy(Object)",
        "org.apache.commons.configuration2.sync.LockMode.<staticinit>()"
    ],
    "org.apache.commons.configuration2.io.FileHandler.emptyFileLocator()": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#equals(Object)": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexEnd()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getIndexStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeStart()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getAttributeEnd()"
    ],
    "org.apache.commons.configuration2.builder.JndiBuilderParametersImpl#setContext(Context)": [
        "org.apache.commons.configuration2.builder.JndiBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getLong(String,Long)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#cleanUp()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getChildBuilders()",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.extractExtension(String)": ["org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider.<staticinit>()"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addRealValue(String)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.io.FileLocatorUtils.getFileSystem(FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.io.FileLocator#getFileSystem()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearProperty(String,NodeKeyResolver<ImmutableNode>)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#clearProperty(String,NodeSelector,NodeKeyResolver<ImmutableNode>)"],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#updateNode(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#TrackedNodeData(ImmutableNode,int,InMemoryNodeModel)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList#addAll(EventListenerList)": ["org.apache.commons.configuration2.event.EventListenerList#getRegistrations()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String)": ["org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)"],
    "org.apache.commons.configuration2.DataConfiguration#getBooleanArray(String)": ["org.apache.commons.configuration2.AbstractConfiguration#getArray(Class<?>,String)"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.checkSingleMatchingConstructor(Class<T>,BeanDeclaration,List<Constructor<T>>)": ["org.apache.commons.configuration2.beanutils.DefaultBeanFactory.constructorMatchingException(Class<?>,BeanDeclaration,String)"],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#escapeValue(Object)": [
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#escape(Object,ValueTransformer)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escape(Object,ValueTransformer)"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup.Variable#Variable()": ["org.apache.commons.configuration2.interpol.ExprLookup.Variable.<init>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String)": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey#append(String,boolean)"],
    "org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": [
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#EventListenerRegistrationData(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerList#removeEventListener(EventListenerRegistrationData<T extends Event>)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#ini(File)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(File)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.interpol.DefaultLookups#DefaultLookups(String,Lookup)": ["org.apache.commons.configuration2.interpol.DefaultLookups.<init>()"],
    "org.apache.commons.configuration2.beanutils.ConstructorArg#toString()": [
        "org.apache.commons.configuration2.beanutils.ConstructorArg#getTypeName()",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#isNestedBeanDeclaration()",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#getValue()",
        "org.apache.commons.configuration2.beanutils.ConstructorArg#getBeanDeclaration()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#CurrentConfigHolder(String)": ["org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder.<init>()"],
    "org.apache.commons.configuration2.FindNodeVisitor#FindNodeVisitor(T)": [
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()",
        "org.apache.commons.configuration2.FindNodeVisitor.<init>()"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setPublicID(String)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils#ConfigurationUtils()": ["org.apache.commons.configuration2.ConfigurationUtils.<init>()"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateTimeZoneParser#parseComponent(String,int,Calendar)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#checkLength(String,int,int)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.<staticinit>()": ["org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey(boolean)"],
    "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#AbstractJdbcOperation(EventType<? extends ConfigurationErrorEvent>,EventType<?>,String,Object)": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation.<init>()"],
    "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()": ["org.apache.commons.configuration2.PrefixedKeysIterator#setNextElement()"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.fromMap(Map<String, ?>)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.<staticinit>()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#encoding(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#locationStrategy(FileLocationStrategy)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#basePath(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileSystem(FileSystem)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector.fileFromURL(URL)": [
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileFromURL(URL)",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()": ["org.apache.commons.configuration2.tree.DefaultExpressionEngine.<staticinit>()"],
    "org.apache.commons.configuration2.beanutils.BeanHelper.setProperty(Object,String,Object)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.initProperty(Object,String,Object)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.isPropertyWriteable(Object,String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String)"
    ],
    "org.apache.commons.configuration2.tree.NodeTreeWalker.dfs(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.NodeTreeWalker.dfs(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.FindNodeVisitor#terminate()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#visitAfterChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#visitAfterChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#terminate()",
        "org.apache.commons.configuration2.FindNodeVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter#terminate()",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter#visitAfterChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#terminate()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#isSingleLine(String)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#isSingleLine()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getByte(String,Byte)": ["org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"],
    "org.apache.commons.configuration2.INIConfiguration#getSection(String)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#trackChildNodeWithCreation(String,String,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.INIConfiguration#getGlobalSection()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.SubnodeConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createSubConfigurationForTrackedNode(NodeSelector,InMemoryNodeModelSupport)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String,boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getStringArray(String)": ["org.apache.commons.configuration2.AbstractConfiguration#getArray(Class<?>,String)"],
    "org.apache.commons.configuration2.interpol.ConstantLookup#resolveField(String,String)": ["org.apache.commons.configuration2.interpol.ConstantLookup#fetchClass(String)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeList(T,NodeTest)": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeListForName(T,QName)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeListForWildcardName(T,QName)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidateInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#registerListenerAt(Configuration)",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#ConfigData(Configuration,String,String)",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#escapeOffset()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getPropertyDelimiter()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey#getSymbols()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#getEscapedDelimiter()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String,int)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getInt(String,int)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInt(String,int)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getInt(String,int)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.fromParameters(Map<String, Object>)": ["org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.fromParameters(Map<String, Object>,boolean)"],
    "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl#setIncludesAllowed(boolean)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)",
        "org.apache.commons.configuration2.builder.PropertiesBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.TreeData#getReference(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TreeData#getReferenceTracker()",
        "org.apache.commons.configuration2.tree.ReferenceTracker#getReference(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fireLocationChangedEvent()": ["org.apache.commons.configuration2.io.FileHandlerListenerAdapter#locationChanged(FileHandler)"],
    "org.apache.commons.configuration2.interpol.ExprLookup.Variables#Variables(Variables)": ["org.apache.commons.configuration2.interpol.ExprLookup.Variables.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#indexOfChild(ImmutableNode,ImmutableNode)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#filterChildrenOfGlobalSection(ImmutableNode,List<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileBased(Class<T extends FileBasedConfiguration>,URL)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileBasedBuilder(Class<T extends FileBasedConfiguration>,URL)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#removeConfiguration(Configuration)": [
        "org.apache.commons.configuration2.CombinedConfiguration#getNumberOfConfigurations()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getNumberOfConfigurations()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#removeConfigurationAt(int)",
        "org.apache.commons.configuration2.CombinedConfiguration#removeConfigurationAt(int)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#configure(BuilderParameters[]...)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#configure(BuilderParameters[]...)"],
    "org.apache.commons.configuration2.DataConfiguration#getOriginalConversionHandler()": ["org.apache.commons.configuration2.AbstractConfiguration#getConversionHandler()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#selectAndTrackNodes(String,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.createSelectorsForTrackedNodes(Mutable<Collection<NodeSelector>>,List<ImmutableNode>,TreeData,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#isReloadingRequired()": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getLastModificationDate()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#updateLastModified(long)",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getRefreshDelay()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getLastModificationDate()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodesOperation(ImmutableNode,Collection<? extends ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNewNodes(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addChildrenOperation(ChildrenUpdateOperation)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation.<init>()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#executeTransactionOnDetachedTrackedNode(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTreeData()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#executeTransactionOnCurrentStructure(TransactionInitializer,NodeSelector,TreeData,NodeKeyResolver<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#checkIndexedProperty(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.ConfigurationMap#getConfiguration()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#fireLoadingEvent()": [
        "org.apache.commons.configuration2.io.FileHandlerListenerAdapter#loading(FileHandler)",
        "org.apache.commons.configuration2.builder.AutoSaveListener#loading(FileHandler)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1.<init>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#containsValueInternal(Object)": [
        "org.apache.commons.configuration2.ImmutableConfiguration#containsValue(Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#containsValue(Object)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#setName(String)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(List<ImmutableNode>,Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanClassName()": ["org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#findFirst(Function<? super BeanDeclaration, ? extends T>)"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#setProperty(String,Object,NodeKeyResolver<ImmutableNode>)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#setProperty(String,NodeSelector,Object,NodeKeyResolver<ImmutableNode>)"],
    "org.apache.commons.configuration2.XMLConfiguration#setSystemID(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#isDefined(ImmutableNode)": ["org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler.checkIfNodeDefined(ImmutableNode)"],
    "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent#ConfigurationBuilderEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderEvent>)": [
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<init>()",
        "org.apache.commons.configuration2.event.Event#Event(Object,EventType<? extends Event>)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getAttributeNames()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#getAttributes()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getNode()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#immutableConfigurationAt(String,boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.ConfigurationUtils.unmodifiableConfiguration(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String,boolean)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,Float)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,Float)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,Float)",
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,Float)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration#getIOFactory()": ["org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory.<staticinit>()"],
    "org.apache.commons.configuration2.CompositeConfiguration#addConfigurationFirst(Configuration,boolean)": [
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CompositeConfiguration#replaceInMemoryConfiguration(Configuration)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(URL)": [
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#CombinedConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(URL)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String,BigInteger)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigInteger(String,BigInteger)",
        "org.apache.commons.configuration2.AbstractConfiguration#getBigInteger(String,BigInteger)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigInteger(String,BigInteger)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setPath(String)": ["org.apache.commons.configuration2.io.FileHandler#setFile(File)"],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#addComment(String)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.<staticinit>()"],
    "org.apache.commons.configuration2.convert.PropertyConverter.to(Class<?>,Object,DefaultConversionHandler)": [
        "org.apache.commons.configuration2.convert.PropertyConverter.toDate(Object,String)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#getDateFormat()",
        "org.apache.commons.configuration2.convert.PropertyConverter.toByte(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toFile(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toInteger(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toPath(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toBoolean(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toDuration(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toFloat(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.<staticinit>()",
        "org.apache.commons.configuration2.convert.PropertyConverter.toBigDecimal(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toURI(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toPattern(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toURL(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.convertToEnum(Class<?>,Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toLong(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toDouble(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toInternetAddress(Object,String)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toBigInteger(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toLocale(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toInetAddress(Object)",
        "org.apache.commons.configuration2.DataConfiguration.DataConversionHandler#getDateFormat()",
        "org.apache.commons.configuration2.convert.PropertyConverter.toColor(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toShort(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toCharacter(Object)",
        "org.apache.commons.configuration2.convert.PropertyConverter.toCalendar(Object,String)",
        "org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#initChildXMLParameters(XMLBuilderProperties<?>)": ["org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#getEntityResolver()"],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#CombinedBuilderParametersImpl()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.web.ServletConfiguration#ServletConfiguration(ServletConfig)": [
        "org.apache.commons.configuration2.web.BaseWebConfiguration.<init>()",
        "org.apache.commons.configuration2.web.ServletConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap#ConfigurationMap(Configuration)": ["org.apache.commons.configuration2.ConfigurationMap.<init>()"],
    "org.apache.commons.configuration2.YAMLConfiguration#YAMLConfiguration()": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#AbstractYAMLBasedConfiguration()",
        "org.apache.commons.configuration2.YAMLConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.event.EventType#toString()": [
        "org.apache.commons.configuration2.event.EventType#getName()",
        "org.apache.commons.configuration2.event.EventType.<staticinit>()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#contains(Iterator<String>,Object)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#setValue(Object)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#startElement(String,String,String,Attributes)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder.<init>()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#peek()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#push(PListNodeBuilder)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getName()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols#DefaultExpressionEngineSymbols(Builder)": ["org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.<init>()"],
    "org.apache.commons.configuration2.builder.fluent.Parameters.ParametersIfcInvocationHandler#ParametersIfcInvocationHandler(Object)": ["org.apache.commons.configuration2.builder.fluent.Parameters.ParametersIfcInvocationHandler.<init>()"],
    "org.apache.commons.configuration2.CombinedConfiguration#onEvent(ConfigurationEvent)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#invalidate()",
        "org.apache.commons.configuration2.CombinedConfiguration#invalidate()",
        "org.apache.commons.configuration2.event.ConfigurationEvent#isBeforeUpdate()"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#initFileHandler(FileHandler)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initFileHandler(FileHandler)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetector(FileHandler,FileBasedBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()"
    ],
    "org.apache.commons.configuration2.interpol.InterpolatorSpecification#InterpolatorSpecification(Builder)": ["org.apache.commons.configuration2.interpol.InterpolatorSpecification.<init>()"],
    "org.apache.commons.configuration2.YAMLConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.YAMLConfiguration.createYamlForReading(LoaderOptions)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.rethrowException(Exception)",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#createLocatorWithFileName(String,FileLocator)": [
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#sourceURL(URL)",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#create()",
        "org.apache.commons.configuration2.io.FileLocator.FileLocatorBuilder#fileName(String)",
        "org.apache.commons.configuration2.io.FileLocatorUtils.fileLocator(FileLocator)"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)"
    ],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.createBuilderConfigurationWrapper(Class<T extends ImmutableConfiguration>,ConfigurationBuilder<? extends T extends ImmutableConfiguration>,EventSourceSupport)": [
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.getSupportedInterfaces(Class<?>,EventSourceSupport)",
        "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#BuilderConfigurationWrapperInvocationHandler(ConfigurationBuilder<? extends ImmutableConfiguration>,EventSourceSupport)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine)": ["org.apache.commons.configuration2.tree.DefaultConfigurationKey#DefaultConfigurationKey(DefaultExpressionEngine,String)"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#nodeDefined(T)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xml(File)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(File)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode.Builder#ensureChildrenExist()"],
    "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.createDefaultSmybols()": [
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setAttributeStart(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setPropertyDelimiter(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#Builder()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#create()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setIndexStart(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setAttributeEnd(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setIndexEnd(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.Builder#setEscapedDelimiter(String)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.<staticinit>()"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup#setVariables(Variables)": ["org.apache.commons.configuration2.interpol.ExprLookup.Variables#Variables(Variables)"],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String,int)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#get(String,int)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#get(String,int)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#BasicConfigurationBuilder(Class<? extends T extends ImmutableConfiguration>,Map<String, Object>,boolean)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#updateParameters(Map<String, Object>)",
        "org.apache.commons.configuration2.event.EventListenerList#EventListenerList()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider#MultiFileConfigurationBuilderProvider(String,String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.createDefaultProviders()",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#BaseConfigurationBuilderProvider(String,String,String,Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider#FileExtensionConfigurationBuilderProvider(String,String,String,String,String,Collection<String>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#CombinedConfigurationBuilderProvider()",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngineSymbols.<staticinit>()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#toCollection(Object,Class<T>,ConfigurationInterpolator,Collection<T>)": [
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#convertToCollection(Object,Class<T>,ConfigurationInterpolator,Collection<T>)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#isEmptyElement(Object)",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler.fetchInterpolator(ConfigurationInterpolator)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigDecimalList(String,List<BigDecimal>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#WrapperBuilder(Configuration,ConfigurationBuilder<? extends Configuration>)": ["org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder.<init>()"],
    "org.apache.commons.configuration2.ConfigurationXMLReader#fireCharacters(String)": [
        "org.apache.commons.configuration2.ConfigurationXMLReader#getException()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getContentHandler()"
    ],
    "org.apache.commons.configuration2.XMLDocumentHelper.forSourceDocument(Document)": [
        "org.apache.commons.configuration2.XMLDocumentHelper#XMLDocumentHelper(Document,Map<Node, Node>,String,String)",
        "org.apache.commons.configuration2.XMLDocumentHelper.emptyElementMapping()",
        "org.apache.commons.configuration2.XMLDocumentHelper.copyDocument(Document)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getNumberOfConfigurations()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#ensureChildrenExist()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder.filterNull(Collection<? extends ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.tree.DefaultConfigurationKey.partsEqual(KeyIterator,KeyIterator)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#getIndex()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#isAttribute()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#nextKey()"
    ],
    "org.apache.commons.configuration2.io.FileSystem.<staticinit>()": ["org.apache.commons.configuration2.io.ConfigurationLogger.newDummyLogger()"],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#fetchFilteredNodeResults(String)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveNodeKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.parseLookups(String)": ["org.apache.commons.configuration2.interpol.ConfigurationInterpolator.DefaultPrefixLookupsHolder.addLookup(DefaultLookups,Map<String, Lookup>)"],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setSchemaValidation(boolean)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#setPrefixLookups(Map<String, ? extends Lookup>)": [
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#registerLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.createResult(Object)": ["org.apache.commons.configuration2.tree.QueryResult.createNodeResult(T)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,double)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getDouble(String,double)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getDouble(String,double)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getDouble(String,double)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#initPropertyName(String)": ["org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader#unescapePropertyName(String)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String,List<?>)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getList(String,List<?>)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getList(String,List<?>)",
        "org.apache.commons.configuration2.CompositeConfiguration#getList(String,List<?>)"
    ],
    "org.apache.commons.configuration2.web.BaseWebConfiguration#containsKeyInternal(String)": [
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.SubsetConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.BaseConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.AppletConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.JNDIConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.MapConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.web.ServletConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.DataConfiguration#getPropertyInternal(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getPropertyInternal(String)"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration#isEmptyInternal()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getNamedBuilder(String)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#getNamedBuilder(String)"
    ],
    "org.apache.commons.configuration2.SubnodeConfiguration#getTrackedModel()": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.<init>()": ["org.apache.commons.configuration2.event.EventListenerList#EventListenerList()"],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#createBeanDeclaration(NodeData<?>)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#matchesConfigRootNode(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<?>,NodeData<?>)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#escapedNodeName(HierarchicalConfiguration<?>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#nodeName()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getParameters()": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String)"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#EventListenerIterator(Iterator<EventListenerRegistrationData<?>>,EventType<T extends Event>)": [
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#initNextElement()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator.<init>()",
        "org.apache.commons.configuration2.event.EventType.fetchSuperEventTypes(EventType<?>)"
    ],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader#processKeys()": [
        "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter.<init>()",
        "org.apache.commons.configuration2.ConfigurationXMLReader#getRootName()",
        "org.apache.commons.configuration2.HierarchicalConfigurationConverter#process(Configuration)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementEnd(String)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementStart(String,Attributes)",
        "org.apache.commons.configuration2.BaseConfigurationXMLReader#getConfiguration()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getLong(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLong(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getLong(String)"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration.XMLPropertiesHandler#endElement(String,String,String)": [
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#setHeader(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(List<ImmutableNode>,Map<String, Object>)": ["org.apache.commons.configuration2.tree.ImmutableNode.Builder.<init>()"],
    "org.apache.commons.configuration2.DatabaseConfiguration#getPropertyInternal(String)$AbstractJdbcOperation$1#performOperation()": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.DatabaseConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#parse(Object)",
        "org.apache.commons.configuration2.DatabaseConfiguration#extractPropertyValue(ResultSet)"
    ],
    "org.apache.commons.configuration2.builder.INIBuilderParametersImpl#setCommentLeadingCharsUsedInInput(String)": [
        "org.apache.commons.configuration2.builder.INIBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)": [
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration.throwMissingPropertyException(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#getAndConvertProperty(Class<T>,String,T)",
        "org.apache.commons.configuration2.AbstractConfiguration#convertToArray(Class<?>,String,Object)"
    ],
    "org.apache.commons.configuration2.tree.UnionCombiner.<init>()": ["org.apache.commons.configuration2.tree.NodeCombiner#NodeCombiner()"],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(int)": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#write(int)"],
    "org.apache.commons.configuration2.XMLConfiguration#read(Reader)": ["org.apache.commons.configuration2.XMLConfiguration#load(InputSource)"],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#write(Writer)": [
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#getHeader()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(PrintWriter,String,Object)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#writeProperty(PrintWriter,String,List<?>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesReader.<staticinit>()": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.CombinedConfiguration#clone()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#clone()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getAt()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.CombinedConfiguration.ConfigData#getName()",
        "org.apache.commons.configuration2.CombinedConfiguration#initChildCollections()",
        "org.apache.commons.configuration2.ConfigurationUtils.cloneConfiguration(Configuration)",
        "org.apache.commons.configuration2.CombinedConfiguration#addConfiguration(Configuration,String,String)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createEventWithChangedSource(ConfigurationBuilderEvent)": [
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent#ConfigurationBuilderResultCreatedEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderResultCreatedEvent>,ImmutableConfiguration)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent.<staticinit>()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderResultCreatedEvent#getConfiguration()",
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent#ConfigurationBuilderEvent(ConfigurationBuilder<?>,EventType<? extends ConfigurationBuilderEvent>)"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceRoot(ImmutableNode,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.CombinedConfiguration#isUpToDate()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getSubConfigurationParentModel()",
        "org.apache.commons.configuration2.CombinedConfiguration#constructCombinedNode()"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#createTransformer()": [
        "org.apache.commons.configuration2.XMLDocumentHelper.createTransformer()",
        "org.apache.commons.configuration2.XMLConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String,BigDecimal)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getBigDecimal(String,BigDecimal)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBigDecimal(String,BigDecimal)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBigDecimal(String,BigDecimal)"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#getLocations()": ["org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean.defensiveCopy(T[])"],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#validateEvent(Event)": [
        "org.apache.commons.configuration2.event.Event#getEventType()",
        "org.apache.commons.configuration2.event.EventType.fetchSuperEventTypes(EventType<?>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileHandler)": [
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileLocator)",
        "org.apache.commons.configuration2.io.FileHandler.checkSourceHandler(FileHandler)",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker.createEmptyTrackedNode(TrackedNodeData)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getNode()"
    ],
    "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl#setAutoCommit(boolean)": [
        "org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.createDataWithTrackedChildNode(TreeData,ImmutableNode,String,NodeKeyResolver<ImmutableNode>,MutableObject<NodeSelector>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.updateDataWithNewTrackedNode(TreeData,ImmutableNode,NodeKeyResolver<ImmutableNode>,MutableObject<NodeSelector>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#execute()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodeOperation(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ModelTransaction#ModelTransaction(TreeData,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getChildren(ImmutableNode,String)"
    ],
    "org.apache.commons.configuration2.io.DefaultFileSystem#getPath(File,URL,String,String)": [
        "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()",
        "org.apache.commons.configuration2.io.VFSFileSystem#getURL(String,String)",
        "org.apache.commons.configuration2.io.FileSystem#getLogger()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)",
        "org.apache.commons.configuration2.io.DefaultFileSystem#getURL(String,String)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfiguration(BaseHierarchicalConfiguration)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.AbstractConfiguration#getSynchronizer()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#setSynchronizer(Synchronizer)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setExpressionEngine(ExpressionEngine)",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#setParentInterpolator(ConfigurationInterpolator)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#ConfigurationNodeIteratorAttribute(ConfigurationNodePointer<T>,QName)": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute.<init>()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorAttribute#createAttributeDataList(ConfigurationNodePointer<T>,QName)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#AbstractConfigurationNodeIterator(ConfigurationNodePointer<T>,boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getEncodedString(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getConfigurationDecoder()",
        "org.apache.commons.configuration2.AbstractConfiguration#getEncodedString(String,ConfigurationDecoder)"
    ],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeValue(Object,boolean,ValueTransformer)": [
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeBackslashs(Object,boolean)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#getDelimiter()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setFileName(String)": [
        "org.apache.commons.configuration2.io.FileHandler#setFileName(String)",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationAt(String,boolean)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationAt(String,boolean)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#setPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#clearProperty(String)",
        "org.apache.commons.configuration2.event.BaseEventSource#setDetailEvents(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setPropertyInternal(String,Object)"
    ],
    "org.apache.commons.configuration2.io.URLConnectionOptions.<staticinit>()": ["org.apache.commons.configuration2.io.URLConnectionOptions#URLConnectionOptions()"],
    "org.apache.commons.configuration2.io.FileHandler#setURL(URL)": [
        "org.apache.commons.configuration2.io.FileHandler#setURL(URL,URLConnectionOptions)",
        "org.apache.commons.configuration2.io.URLConnectionOptions.<staticinit>()"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#setupDefinitionBuilder(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl.fromParameters(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getDefinitionBuilderParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#createXMLDefinitionBuilder(BuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getDefinitionBuilder()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createXMLDefinitionBuilder(BuilderParameters)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyToModel(String,Iterable<?>)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#fetchNodeList(String)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#subset(String)": ["org.apache.commons.configuration2.SubsetConfiguration#SubsetConfiguration(Configuration,String,String)"],
    "org.apache.commons.configuration2.resolver.DefaultEntityResolver#registerEntityId(String,URL)": ["org.apache.commons.configuration2.resolver.DefaultEntityResolver#getRegisteredEntities()"],
    "org.apache.commons.configuration2.io.FileUtils.toFile(URL)": ["org.apache.commons.configuration2.io.FileUtils.decodeUrl(String)"],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#isReloadingRequired()": [
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#isReloadingRequired()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#isReloadingRequired()",
        "org.apache.commons.configuration2.reloading.ManagedReloadingDetector#isReloadingRequired()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#isReloadingRequired()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#ConfigurationNodeIteratorChildren(ConfigurationNodePointer<T>,NodeTest,boolean,ConfigurationNodePointer<T>)": [
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#setStartOffset(int)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#findStartIndex(List<T>,T)",
        "org.apache.commons.configuration2.tree.xpath.AbstractConfigurationNodeIterator#AbstractConfigurationNodeIterator(ConfigurationNodePointer<T>,boolean)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getConfigurationNode()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#size()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#createSubNodeList(T,NodeTest)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren.<init>()"
    ],
    "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()": [
        "org.apache.commons.configuration2.event.Event.<staticinit>()",
        "org.apache.commons.configuration2.event.EventType#EventType(EventType<? super T extends Event>,String)"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#initializeParameterObjects(ConfigurationDeclaration,Collection<BuilderParameters>)": [
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getConfigurationBuilder()",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#initializeParameterObjects(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider.setUpBasicParameters(CombinedConfiguration,BasicBuilderParameters)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#getConfigurationUnderConstruction()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,String,Object)": [
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#set(String,String,Object)",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaBean#set(String,String,Object)",
        "org.apache.commons.configuration2.builder.combined.MultiWrapDynaBean#fetchBean(String)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getShortList(String,List<Short>)": ["org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"],
    "org.apache.commons.configuration2.tree.NodeTreeWalker.bfs(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.FindNodeVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter#terminate()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.FindNodeVisitor#terminate()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T)",
        "org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#terminate()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#visitBeforeChildren(T,NodeHandler<T>)",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.SAXVisitor#terminate()"
    ],
    "org.apache.commons.configuration2.tree.NodeSelector#select(ImmutableNode,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.NodeSelector#getFilteredResults(ImmutableNode,NodeKeyResolver<ImmutableNode>,NodeHandler<ImmutableNode>,String,List<ImmutableNode>)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#configureEntityResolver(HierarchicalConfiguration<?>,XMLBuilderParametersImpl)": [
        "org.apache.commons.configuration2.beanutils.BeanHelper.setProperty(Object,String,Object)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getFileHandler()",
        "org.apache.commons.configuration2.io.FileHandler#getFileSystem()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#ConfigurationInterpolator()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>,String,boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getMaxIndex(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#fetchPrefixLookups()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#registerLookups(Map<String, ? extends Lookup>)",
        "org.apache.commons.configuration2.io.FileHandler#getBasePath()",
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setEntityResolver(EntityResolver)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#setSingleLine(String,boolean)": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#fetchLayoutData(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#setSingleLine(boolean)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getKeys()": [
        "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.MapConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SystemConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()",
        "org.apache.commons.configuration2.web.AppletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.web.ServletConfiguration#getKeysInternal()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.valuesNotEmpty(Iterable<?>)": ["org.apache.commons.configuration2.tree.ImmutableNode#iterator()"],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#setEntityResolver(EntityResolver)": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#storeProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction#addChangeNodeValueOperation(ImmutableNode,Object)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeValueOperation#ChangeNodeValueOperation(Object)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigDecimalList(String)": ["org.apache.commons.configuration2.DataConfiguration#getBigDecimalList(String,List<BigDecimal>)"],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#getParameters()": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#getParameters()",
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.<staticinit>()"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#BeanCreationContextImpl(BeanHelper,Class<?>,BeanDeclaration,Object)": ["org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl.<init>()"],
    "org.apache.commons.configuration2.event.BaseEventSource#BaseEventSource()": [
        "org.apache.commons.configuration2.event.BaseEventSource.<init>()",
        "org.apache.commons.configuration2.event.BaseEventSource#initListeners()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#properties(String)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#propertiesBuilder(String)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#visitBeforeChildren(T,NodeHandler<T>)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getExpressionEngine()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getExpressionEngine()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedKeysVisitor#handleAttributeKeys(String,T,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.DefaultExpressionEngine#nodeKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#nodeKey(T,String,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.io.URLConnectionOptions#URLConnectionOptions(URLConnectionOptions)": [
        "org.apache.commons.configuration2.io.URLConnectionOptions.<init>()",
        "org.apache.commons.configuration2.io.URLConnectionOptions#getUseCaches()",
        "org.apache.commons.configuration2.io.URLConnectionOptions#getAllowUserInteraction()",
        "org.apache.commons.configuration2.io.URLConnectionOptions#getConnectTimeoutMillis()",
        "org.apache.commons.configuration2.io.URLConnectionOptions#getReadTimeoutMillis()"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#DynamicCombinedConfiguration(NodeCombiner)": [
        "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#setNodeCombiner(NodeCombiner)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#initLocalInterpolator()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#CatalogResolver()": [
        "org.apache.commons.configuration2.resolver.CatalogResolver.CatalogManager#setFileSystem(FileSystem)",
        "org.apache.commons.configuration2.resolver.CatalogResolver#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.resolver.CatalogResolver.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#getChildDefaultParametersManager()": ["org.apache.commons.configuration2.builder.DefaultParametersManager#DefaultParametersManager()"],
    "org.apache.commons.configuration2.io.ConfigurationLogger#isDebugEnabled()": ["org.apache.commons.configuration2.io.ConfigurationLogger#getLog()"],
    "org.apache.commons.configuration2.XMLConfiguration#setPublicID(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#save()": [
        "org.apache.commons.configuration2.io.FileHandler#save()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#getFileHandler()"
    ],
    "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#invokeNextListenerUnchecked(Event)": [
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#next()",
        "org.apache.commons.configuration2.event.EventListenerList.callListener(EventListener<?>,Event)"
    ],
    "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader#HierarchicalConfigurationXMLReader()": [
        "org.apache.commons.configuration2.ConfigurationXMLReader#ConfigurationXMLReader()",
        "org.apache.commons.configuration2.HierarchicalConfigurationXMLReader.<init>()"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setPropertyInternal(String,Object)": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.updateParentMapping(Map<ImmutableNode, ImmutableNode>,ImmutableNode)$ConfigurationNodeVisitorAdapter$1.<init>()": ["org.apache.commons.configuration2.tree.ConfigurationNodeVisitorAdapter.<init>()"],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#updateElement(Element,Object)": ["org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor.findTextNodeForUpdate(Element)"],
    "org.apache.commons.configuration2.tree.NodeTracker#untrackNode(NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#observerRemoved()"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#clear(NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearTree(String,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#ReloadingFileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)": [
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingController()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder.<init>()",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#FileBasedConfigurationBuilder(Class<? extends T extends FileBasedConfiguration>)"
    ],
    "org.apache.commons.configuration2.tree.ReferenceTracker#updateReferences(Map<ImmutableNode, ImmutableNode>,Collection<ImmutableNode>)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.tree.ReferenceTracker#ReferenceTracker(Map<ImmutableNode, Object>,List<Object>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams(URL)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#setURL(URL)",
        "org.apache.commons.configuration2.builder.fluent.Configurations#fileParams()"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#isForceCreate()": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getConfiguration()",
        "org.apache.commons.configuration2.AbstractConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getBoolean(String,boolean)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getBoolean(String,boolean)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getName()": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.tree.ImmutableNode#getChildren(String)": ["org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()"],
    "org.apache.commons.configuration2.DataConfiguration#getDateList(String,List<Date>,String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#getList(Class<T>,String,List<T>)"
    ],
    "org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerRegistrationData#EventListenerRegistrationData(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#initChildConfiguration(CombinedConfiguration)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#ensureCurrentConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#setCurrentConfiguration(CombinedConfiguration)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#createChildConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#incrementLockCount()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#getKey()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#getCurrentConfiguration()"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertiesFactoryBean#getObject()": ["org.apache.commons.configuration2.ConfigurationConverter.getProperties(Configuration)"],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addIntegerValue(String)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#valueFromResult(QueryResult<T>,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeValue(NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.QueryResult#isAttributeResult()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getValue(T)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout#clear()": [
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setHeaderComment(String)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout#setFooterComment(String)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#clearProperty(String,NodeSelector,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#resolveKey(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getQueryRoot()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.initializeClearTransaction(ModelTransaction,Collection<QueryResult<ImmutableNode>>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#clearLocation()$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#removeNodesFromParentAndReplacementMapping(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ModelTransaction#removeNodesFromParentAndReplacementMapping(ImmutableNode)$ConfigurationNodeVisitorAdapter$1.<init>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeTreeWalker#walkBFS(T,ConfigurationNodeVisitor<T>,NodeHandler<T>)"
    ],
    "org.apache.commons.configuration2.event.EventListenerRegistrationData#equals(Object)": [
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getEventType()",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getListener()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchAndCheckDefaultLookups(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchParameter(Map<String, Object>,String,Class<T>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchDefaultLookups(Map<String, Object>)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getFile()": [
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector.fileFromURL(URL)",
        "org.apache.commons.configuration2.io.FileHandler#getFile()",
        "org.apache.commons.configuration2.io.FileHandler#getURL()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getFileHandler()"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup.Variable#Variable(String,Object)": [
        "org.apache.commons.configuration2.interpol.ExprLookup.Variable#setName(String)",
        "org.apache.commons.configuration2.interpol.ExprLookup.Variable.<init>()",
        "org.apache.commons.configuration2.interpol.ExprLookup.Variable#setValue(Object)"
    ],
    "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)": [
        "org.apache.commons.configuration2.DatabaseConfiguration#clearPropertyDirect(String)$AbstractJdbcOperation$1.<init>()",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#execute()"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChildrenUpdateOperation#addNodeToReplace(ImmutableNode,ImmutableNode)": ["org.apache.commons.configuration2.tree.ModelTransaction.append(Map<K, V>,K,V)"],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getAttributeValue(T,String)",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#addNodes(String,NodeSelector,Collection<? extends ImmutableNode>,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder(int)",
        "org.apache.commons.configuration2.tree.ModelTransaction#getCurrentData()",
        "org.apache.commons.configuration2.tree.NodeAddData#isAttribute()",
        "org.apache.commons.configuration2.tree.NodeAddData#getNewNodeName()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChildren(Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ModelTransaction#addAddNodesOperation(ImmutableNode,Collection<? extends ImmutableNode>)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#updateModel(TransactionInitializer,NodeSelector,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ModelTransaction#getQueryRoot()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.attributeKeyException(String)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel.addNodesByAddData(ModelTransaction,NodeAddData<ImmutableNode>,Collection<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,float)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getFloat(String,Float)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getFloat(String,Float)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getFloat(String,Float)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler.checkIfNodeDefined(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getFilteredParameters()": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.BuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String)": [
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.DataConfiguration#getCalendarList(String,List<Calendar>)"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<init>()": ["org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#generateKeyForAdd(T,String,NodeHandler<T>)": [
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#query(T,String,NodeHandler<T>)",
        "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory#createNodePointer(QName,Object,Locale)": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#getNodeHandler()",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.NodeWrapper#getNode()"
    ],
    "org.apache.commons.configuration2.io.CombinedLocationStrategy#CombinedLocationStrategy(Collection<? extends FileLocationStrategy>)": ["org.apache.commons.configuration2.io.CombinedLocationStrategy.<init>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#setProperty(String,Object)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireEvent(EventType<T extends ConfigurationEvent>,String,Object,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.event.ConfigurationEvent.<staticinit>()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.DataConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.JNDIConfiguration#setPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#setPropertyInternal(String,Object)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#createIndependentSubConfiguration(String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#fetchFilteredNodeResults(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#initSubConfiguration(BaseHierarchicalConfiguration)",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration(NodeModel<ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#createBeanInstance(BeanCreationContext)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#fetchConstructorArgs(Constructor<?>,BeanCreationContext)",
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#getBeanDeclaration()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.BeanCreationContextImpl#getBeanClass()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.findMatchingConstructor(Class<T>,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()"],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#terminate()": ["org.apache.commons.configuration2.AbstractHierarchicalConfiguration.DefinedVisitor#isDefined()"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.findMatchingConstructor(Class<T>,BeanDeclaration)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.checkSingleMatchingConstructor(Class<T>,BeanDeclaration,List<Constructor<T>>)",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.findMatchingConstructors(Class<T>,BeanDeclaration)"
    ],
    "org.apache.commons.configuration2.spring.ConfigurationPropertySource#ConfigurationPropertySource(String)": ["org.apache.commons.configuration2.spring.ConfigurationPropertySource.<init>()"],
    "org.apache.commons.configuration2.tree.ModelTransaction.ChangeNodeNameOperation#apply(ImmutableNode,Operations)": ["org.apache.commons.configuration2.tree.ImmutableNode#setName(String)"],
    "org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder#withPrefixLookup(String,Lookup)": ["org.apache.commons.configuration2.interpol.InterpolatorSpecification.Builder.checkLookup(Lookup)"],
    "org.apache.commons.configuration2.event.BaseEventSource#initListeners()": ["org.apache.commons.configuration2.event.EventListenerList#EventListenerList()"],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder.registerListener(EventSource,EventListenerRegistrationData<E extends Event>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getListener()",
        "org.apache.commons.configuration2.event.EventListenerRegistrationData#getEventType()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.event.BaseEventSource#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.ConfigurationUtils$EventSource$1#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getDate(String,Date,String)": [
        "org.apache.commons.configuration2.DataConfiguration#applyTempDateFormat(String,Supplier<R>)",
        "org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()": ["org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal(String)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.needsUnescape(char)": ["org.apache.commons.configuration2.PropertiesConfiguration.<staticinit>()"],
    "org.apache.commons.configuration2.io.VFSFileSystem#getOptions(String)": [
        "org.apache.commons.configuration2.io.FileOptionsProvider.<staticinit>()",
        "org.apache.commons.configuration2.io.VFSFileSystem#getManager()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getValue()",
        "org.apache.commons.configuration2.io.VFSFileSystem#setProperty(FileSystemConfigBuilder,FileSystemOptions,String,Object)",
        "org.apache.commons.configuration2.io.FileSystem#getFileOptionsProvider()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.Entry#getKey()"
    ],
    "org.apache.commons.configuration2.convert.DefaultConversionHandler#setListDelimiterHandler(ListDelimiterHandler)": ["org.apache.commons.configuration2.convert.DefaultConversionHandler.<staticinit>()"],
    "org.apache.commons.configuration2.AbstractConfiguration#getString(String,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#interpolate(String)"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#isReservedName(String)": ["org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.<staticinit>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#addConfiguration(Configuration,String,String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.ConfigData#ConfigData(Configuration,String,String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()"
    ],
    "org.apache.commons.configuration2.interpol.DefaultLookups.<staticinit>()": ["org.apache.commons.configuration2.interpol.StringLookupAdapter#StringLookupAdapter(StringLookup)"],
    "org.apache.commons.configuration2.CompositeConfiguration#CompositeConfiguration(Configuration)": [
        "org.apache.commons.configuration2.CompositeConfiguration.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#AbstractConfiguration()"
    ],
    "org.apache.commons.configuration2.reloading.ReloadingController#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#addEventListener(EventType<T extends Event>,EventListener<? super T extends Event>)"],
    "org.apache.commons.configuration2.tree.TreeData#getParent(ImmutableNode)": [
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData.handleReplacements(ImmutableNode,Map<ImmutableNode, ImmutableNode>)"
    ],
    "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementName()": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getRootElementNameInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.XMLConfiguration#getRootElementNameInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)": ["org.apache.commons.configuration2.tree.ModelTransaction.append(Collection<E>,E)"],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#constructMap(ImmutableNode)": [
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.addEntry(Map<String, Object>,String,Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#constructMap(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#ConfigurationDeclaration(CombinedConfigurationBuilder,HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration.<init>()",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>)"
    ],
    "org.apache.commons.configuration2.builder.DefaultParametersManager#unregisterDefaultsHandler(DefaultParametersHandler<?>)": ["org.apache.commons.configuration2.builder.DefaultParametersManager#unregisterDefaultsHandler(DefaultParametersHandler<?>,Class<?>)"],
    "org.apache.commons.configuration2.CompositeConfiguration#addConfiguration(Configuration,boolean)": [
        "org.apache.commons.configuration2.SubsetConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.AbstractConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#isThrowExceptionOnMissing()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.SubsetConfiguration#setThrowExceptionOnMissing(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endWrite()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.CompositeConfiguration#replaceInMemoryConfiguration(Configuration)"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#NodeTracker()": ["org.apache.commons.configuration2.tree.NodeTracker#NodeTracker(Map<NodeSelector, TrackedNodeData>)"],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#childIterator(NodeTest,boolean,NodePointer)": [
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#castPointer(NodePointer)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodeIteratorChildren#ConfigurationNodeIteratorChildren(ConfigurationNodePointer<T>,NodeTest,boolean,ConfigurationNodePointer<T>)"
    ],
    "org.apache.commons.configuration2.interpol.ExprLookup#lookup(String)": [
        "org.apache.commons.configuration2.interpol.ExprLookup#createContext()",
        "org.apache.commons.configuration2.interpol.ExprLookup#getLogger()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#debug(String)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#addPropertyInternal(String,Object)": [
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyInternal(String,Object)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#addPropertyDirect(String,Object)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getChildrenCount(ImmutableNode,String)": [
        "org.apache.commons.configuration2.tree.NodeNameMatchers.<staticinit>()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()"
    ],
    "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getRootSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getTrackedNode(NodeSelector)",
        "org.apache.commons.configuration2.SubnodeConfiguration#getParent()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#InMemoryNodeModel(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.constructCanonicalComment(String,boolean)": ["org.apache.commons.configuration2.PropertiesConfigurationLayout.trimComment(String,boolean)"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getAttributes(ImmutableNode)": ["org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()"],
    "org.apache.commons.configuration2.INIConfiguration#parseValue(String,BufferedReader)": [
        "org.apache.commons.configuration2.INIConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.INIConfiguration#lineContinues(String,int)",
        "org.apache.commons.configuration2.INIConfiguration#isCommentChar(char)",
        "org.apache.commons.configuration2.INIConfiguration.lineContinues(String)"
    ],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#addNodes(String,Collection<? extends ImmutableNode>,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getSelector()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#addNodes(String,NodeSelector,Collection<? extends ImmutableNode>,NodeKeyResolver<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)"
    ],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#ensureCurrentConfiguration()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endWrite()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginWrite(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#incrementLockCount()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration.CurrentConfigHolder#getCurrentConfiguration()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.<staticinit>()": ["org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder.initializeDefaultEncodings()"],
    "org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#close()": ["org.apache.commons.configuration2.io.DefaultFileSystem.HttpOutputStream#close()"],
    "org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler#BuilderConfigurationWrapperInvocationHandler(ConfigurationBuilder<? extends ImmutableConfiguration>,EventSourceSupport)": ["org.apache.commons.configuration2.builder.BuilderConfigurationWrapperFactory.BuilderConfigurationWrapperInvocationHandler.<init>()"],
    "org.apache.commons.configuration2.reloading.ReloadingController#resetReloadingState()": [
        "org.apache.commons.configuration2.reloading.ReloadingController#getDetector()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController.MultiReloadingControllerDetector#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.CombinedReloadingController#getDetector()",
        "org.apache.commons.configuration2.reloading.ReloadingController#isInReloadingState()",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#createReloadingDetectorForController()$ReloadingDetector$1#reloadingPerformed()",
        "org.apache.commons.configuration2.reloading.ManagedReloadingDetector#reloadingPerformed()"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#nodeName(T)"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#DateFieldParser(int,int,int)": [
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser.<init>()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser.<init>()"
    ],
    "org.apache.commons.configuration2.XMLPropertiesConfiguration#read(Reader)": [
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String,Throwable)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#parse(InputSource)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#setEntityResolver(EntityResolver)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#setContentHandler(ContentHandler)",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration.XMLPropertiesHandler.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#builderNames()": ["org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.ConfigurationSourceData#builderNames()"],
    "org.apache.commons.configuration2.tree.ModelTransaction#addAttributesOperation(ImmutableNode,Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.ModelTransaction.<staticinit>()",
        "org.apache.commons.configuration2.tree.ModelTransaction#fetchOperations(ImmutableNode,int)",
        "org.apache.commons.configuration2.tree.ModelTransaction.AddAttributesOperation#AddAttributesOperation(Map<String, Object>)",
        "org.apache.commons.configuration2.tree.ModelTransaction.Operations#addOperation(Operation)"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.cloneIfPossible(Object)": ["org.apache.commons.configuration2.ConfigurationUtils.clone(Object)"],
    "org.apache.commons.configuration2.ConfigurationMap#get(Object)": ["org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#PropertiesWriter(Writer,ListDelimiterHandler)": [
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter#PropertiesWriter(Writer,ListDelimiterHandler,ValueTransformer)",
        "org.apache.commons.configuration2.PropertiesConfiguration.PropertiesWriter.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl#inheritFrom(Map<String, ?>)": [
        "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#inheritFrom(Map<String, ?>)",
        "org.apache.commons.configuration2.builder.HierarchicalBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#copyPropertiesFrom(Map<String, ?>,String[]...)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Parameters#fileBased()": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl#FileBasedBuilderParametersImpl()"],
    "org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#openResultSet(String,boolean,Object[]...)": ["org.apache.commons.configuration2.DatabaseConfiguration.AbstractJdbcOperation#initStatement(String,boolean,Object[]...)"],
    "org.apache.commons.configuration2.ConfigurationUtils.append(ImmutableConfiguration,Configuration)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"
    ],
    "org.apache.commons.configuration2.beanutils.BeanHelper.fetchBeanClass(BeanDeclaration,Class<?>,BeanFactory)": [
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#getBeanClassName()",
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#getDefaultBeanClass()",
        "org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration#getBeanClassName()",
        "org.apache.commons.configuration2.beanutils.CombinedBeanDeclaration#getBeanClassName()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#createResultDeclaration(Map<String, Object>)$BeanDeclaration$1#getBeanClassName()",
        "org.apache.commons.configuration2.beanutils.BeanHelper.loadClass(String)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.io.FileHandler$SynchronizerSupport$1#getSynchronizer()": ["org.apache.commons.configuration2.sync.NoOpSynchronizer.<staticinit>()"],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine#attributeKey(String,String)": ["org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()"],
    "org.apache.commons.configuration2.XMLListReference#XMLListReference(Element)": ["org.apache.commons.configuration2.XMLListReference.<init>()"],
    "org.apache.commons.configuration2.INIConfiguration#getSections()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.INIConfiguration.isSectionNode(ImmutableNode)",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getModel()"
    ],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getConfigurationBuilder(ConfigurationDeclaration)": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#initializeParameterObjects(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#createBuilder(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#configureBuilder(BasicConfigurationBuilder<? extends Configuration>,ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#createParameterObjects()",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#createBuilder(ConfigurationDeclaration,Collection<BuilderParameters>)",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilderProvider#initializeParameterObjects(ConfigurationDeclaration,Collection<BuilderParameters>)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#getPropertyInternal(String)": [
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.JNDIConfiguration#getBaseContext()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"
    ],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getStringArray(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getStringArray(String)",
        "org.apache.commons.configuration2.CompositeConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getStringArray(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getStringArray(String)"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toBigInteger(Object)": ["org.apache.commons.configuration2.convert.PropertyConverter.toNumber(Object,Class<?>)"],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#createAdditionalsConfiguration(CombinedConfiguration)": [
        "org.apache.commons.configuration2.tree.UnionCombiner.<init>()",
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.CombinedConfiguration#CombinedConfiguration(NodeCombiner)",
        "org.apache.commons.configuration2.CompositeConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.AbstractConfiguration#setListDelimiterHandler(ListDelimiterHandler)",
        "org.apache.commons.configuration2.SubsetConfiguration#setListDelimiterHandler(ListDelimiterHandler)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getURI(String)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String)"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setDefaultLookups(Collection<? extends Lookup>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.convert.PropertyConverter.toLocale(Object)": ["org.apache.commons.configuration2.ex.ConversionException#ConversionException(String)"],
    "org.apache.commons.configuration2.AbstractConfiguration#sizeInternal()": [
        "org.apache.commons.configuration2.CompositeConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.AppletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.DataConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletFilterConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.BaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletContextConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.MapConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.SystemConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getKeysInternal()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletRequestConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.DatabaseConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.web.ServletConfiguration#getKeysInternal()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.ConfigurationUtils.convertToHierarchical(Configuration)": ["org.apache.commons.configuration2.ConfigurationUtils.convertToHierarchical(Configuration,ExpressionEngine)"],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#shutdown(boolean)": [
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#getExecutorService()",
        "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#stop()"
    ],
    "org.apache.commons.configuration2.tree.NodeTracker#getDetachedNodeModel(NodeSelector)": [
        "org.apache.commons.configuration2.tree.NodeTracker#getTrackedNodeData(NodeSelector)",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"
    ],
    "org.apache.commons.configuration2.tree.MergeCombiner#canCombine(ImmutableNode,ImmutableNode,List<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeCombiner.<staticinit>()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.MergeCombiner.matchAttributes(Map<String, Object>,ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.NodeCombiner#isListNode(ImmutableNode)"
    ],
    "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#checkResultInstance(Object)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getResultClass()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel.createSelectorsForTrackedNodes(Mutable<Collection<NodeSelector>>,List<ImmutableNode>,TreeData,NodeKeyResolver<ImmutableNode>)": [
        "org.apache.commons.configuration2.tree.NodeSelector#NodeSelector(String)",
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.tree.NodeTracker#trackNodes(Collection<NodeSelector>,Collection<ImmutableNode>)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder#registerConfiguredProviders(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getString(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#fetchBeanHelper()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getString(String)",
        "org.apache.commons.configuration2.builder.combined.CombinedBuilderParametersImpl#registerProvider(String,ConfigurationBuilderProvider)",
        "org.apache.commons.configuration2.AbstractConfiguration#getString(String)",
        "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration#XMLBeanDeclaration(HierarchicalConfiguration<T>)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration)",
        "org.apache.commons.configuration2.builder.combined.CombinedConfigurationBuilder.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.NodeHandlerDecorator#hasAttributes(T)": [
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()$NodeHandlerDecorator$1#getDecoratedNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#hasAttributes(T)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder#ReloadableWrapperBuilder(Configuration,ConfigurationBuilder<? extends Configuration>)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.ReloadableWrapperBuilder.<init>()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilderProvider.WrapperBuilder#WrapperBuilder(Configuration,ConfigurationBuilder<? extends Configuration>)"
    ],
    "org.apache.commons.configuration2.event.Event#appendPropertyRepresentation(StringBuilder,String,Object)": ["org.apache.commons.configuration2.event.Event.<staticinit>()"],
    "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)": [
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getCurrentConfig()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#configurationsAt(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#configurationsAt(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#configurationsAt(String)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#handleRemovedNodes(ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.XMLConfiguration.XMLBuilderVisitor#removeReference(Node)",
        "org.apache.commons.configuration2.tree.TreeData#removedReferences()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#saveToWriter(Writer)": [
        "org.apache.commons.configuration2.io.FileHandler#fireSavedEvent()",
        "org.apache.commons.configuration2.XMLPropertiesConfiguration#write(Writer)",
        "org.apache.commons.configuration2.io.FileHandler#getContent()",
        "org.apache.commons.configuration2.JSONConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#write(Writer)",
        "org.apache.commons.configuration2.XMLConfiguration#write(Writer)",
        "org.apache.commons.configuration2.YAMLConfiguration#write(Writer)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#write(Writer)",
        "org.apache.commons.configuration2.PropertiesConfiguration#write(Writer)",
        "org.apache.commons.configuration2.io.FileHandler#fireSavingEvent()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(Throwable)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#write(Writer)",
        "org.apache.commons.configuration2.INIConfiguration#write(Writer)"
    ],
    "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String)": ["org.apache.commons.configuration2.ex.ConfigurationRuntimeException.<init>()"],
    "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#getDynaProperties()": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#next()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass#getDynaProperty(String)",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.AbstractConfiguration#getKeys()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.beanutils.ConfigurationDynaClass.<staticinit>()"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#isLeaf()": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#getNodeHandler()"
    ],
    "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#clone()": [
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)",
        "org.apache.commons.configuration2.PropertiesConfigurationLayout.PropertyLayoutData#getComment()"
    ],
    "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#endElement(String,String,String)": [
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#peekNE()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#setName(String)",
        "org.apache.commons.configuration2.io.ConfigurationLogger#warn(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addTrueValue()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#pop()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder.<init>()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addDataValue(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addIntegerValue(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#push(PListNodeBuilder)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addList(ArrayNodeBuilder)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addChild(PListNodeBuilder)",
        "org.apache.commons.configuration2.AbstractConfiguration#getLogger()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#createNode()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.ArrayNodeBuilder#addValue(Object)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addRealValue(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.XMLPropertyListHandler#peek()",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration#XMLPropertyListConfiguration(ImmutableNode)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addDateValue(String)",
        "org.apache.commons.configuration2.plist.XMLPropertyListConfiguration.PListNodeBuilder#addFalseValue()"
    ],
    "org.apache.commons.configuration2.beanutils.XMLBeanDeclaration.NodeData#matchesConfigRootNode(HierarchicalConfiguration<?>)": [
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.TrackedNodeHandler#getRootNode()",
        "org.apache.commons.configuration2.INIConfiguration.GlobalSectionNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getRootNode()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getNodeHandler()",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1#getRootNode()",
        "org.apache.commons.configuration2.tree.TreeData#getRootNode()"
    ],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#addNodes(String,Collection<? extends ImmutableNode>,NodeKeyResolver<ImmutableNode>)": ["org.apache.commons.configuration2.tree.InMemoryNodeModel#addNodes(String,NodeSelector,Collection<? extends ImmutableNode>,NodeKeyResolver<ImmutableNode>)"],
    "org.apache.commons.configuration2.beanutils.BeanHelper#createBean(BeanDeclaration,Class<?>,Object)": [
        "org.apache.commons.configuration2.beanutils.DefaultBeanFactory#createBean(BeanCreationContext)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#createBeanCreationContext(BeanDeclaration,Class<?>,Object,BeanFactory)",
        "org.apache.commons.configuration2.beanutils.BeanHelper#fetchBeanFactory(BeanDeclaration)",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(Throwable)"
    ],
    "org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer#ConfigurationNodePointer(T,Locale,NodeHandler<T>)": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointer.<init>()"],
    "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#createParameterObjects()": [
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider.createParameterObject(String)",
        "org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider#getParameterClasses()"
    ],
    "org.apache.commons.configuration2.XMLListReference.listValue(ImmutableNode,ReferenceNodeHandler,ListDelimiterHandler)": [
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildren(T,String)",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.convert.DefaultListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.convert.ListDelimiterHandler.<staticinit>()",
        "org.apache.commons.configuration2.ex.ConfigurationRuntimeException#ConfigurationRuntimeException(String,Throwable)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.convert.DisabledListDelimiterHandler#escapeList(List<?>,ValueTransformer)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeList(List<?>,ValueTransformer)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.isEventTypeForManagedBuilders(EventType<?>)": [
        "org.apache.commons.configuration2.event.EventType.isInstanceOf(EventType<?>,EventType<?>)",
        "org.apache.commons.configuration2.builder.ConfigurationBuilderEvent.<staticinit>()"
    ],
    "org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#shutdown()": ["org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger#shutdown(boolean)"],
    "org.apache.commons.configuration2.io.FileHandler#setBasePath(String)$AbstractUpdater$1.<init>()": ["org.apache.commons.configuration2.io.FileHandler.AbstractUpdater.<init>()"],
    "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initResultInstance(T extends FileBasedConfiguration)": [
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#fetchFileHandlerFromParameters()",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#initResultInstance(T extends ImmutableConfiguration)",
        "org.apache.commons.configuration2.io.FileHandler#FileHandler(FileBased,FileHandler)",
        "org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder#initFileHandler(FileHandler)",
        "org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder#initFileHandler(FileHandler)",
        "org.apache.commons.configuration2.builder.AutoSaveListener#updateFileHandler(FileHandler)"
    ],
    "org.apache.commons.configuration2.JNDIConfiguration#getKeysInternal(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#containsKey(String)",
        "org.apache.commons.configuration2.event.ConfigurationErrorEvent.<staticinit>()",
        "org.apache.commons.configuration2.JNDIConfiguration#getContext(List<String>,Context)",
        "org.apache.commons.configuration2.JNDIConfiguration#recursiveGetKeys(Set<String>,Context,String,Set<Context>)",
        "org.apache.commons.configuration2.JNDIConfiguration#getBaseContext()",
        "org.apache.commons.configuration2.event.BaseEventSource#fireError(EventType<T extends ConfigurationErrorEvent>,EventType<?>,String,Object,Throwable)"
    ],
    "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler#invoke(Object,Method,Object[])": ["org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.handleResult(Object)"],
    "org.apache.commons.configuration2.BaseConfigurationXMLReader.SAXConverter#elementStart(String,Object)": [
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireCharacters(String)",
        "org.apache.commons.configuration2.ConfigurationXMLReader#fireElementStart(String,Attributes)",
        "org.apache.commons.configuration2.AbstractHierarchicalConfiguration#toString()",
        "org.apache.commons.configuration2.MapConfiguration#toString()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combined(File)": [
        "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(File)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration.DateFieldParser#parseComponent(String,int,Calendar)": ["org.apache.commons.configuration2.plist.PropertyListConfiguration.DateComponentParser#checkLength(String,int,int)"],
    "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModel()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.tree.TrackedNodeModel#getParentModelSupport()"
    ],
    "org.apache.commons.configuration2.resolver.CatalogResolver#setLogger(ConfigurationLogger)": ["org.apache.commons.configuration2.resolver.CatalogResolver#initLogger(ConfigurationLogger)"],
    "org.apache.commons.configuration2.PrefixedKeysIterator#remove()": [
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#remove()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#remove()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#remove()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#remove()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#remove()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#remove()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#getEncoding()": [
        "org.apache.commons.configuration2.io.FileLocator#getEncoding()",
        "org.apache.commons.configuration2.io.FileHandler#getFileLocator()"
    ],
    "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeList(List<?>,ValueTransformer)": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.countTrailingBS(String)",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#getDelimiter()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler#escapeValue(Object,boolean,ValueTransformer)",
        "org.apache.commons.configuration2.convert.LegacyListDelimiterHandler.<staticinit>()"
    ],
    "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl#getEntityResolver()": [
        "org.apache.commons.configuration2.builder.XMLBuilderParametersImpl.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#fetchProperty(String)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#constructFileName(MultiFileBuilderParametersImpl)": [
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getInterpolator()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler$ConfigurationInterpolator$1#interpolate(Object)",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getFilePattern()",
        "org.apache.commons.configuration2.interpol.ConfigurationInterpolator#interpolate(Object)"
    ],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getAttributeValue(ImmutableNode,String)": ["org.apache.commons.configuration2.tree.ImmutableNode#getAttributes()"],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector()": ["org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#FileHandlerReloadingDetector(FileHandler)"],
    "org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory.<staticinit>()": ["org.apache.commons.configuration2.PropertiesConfiguration.DefaultIOFactory.<init>()"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchPrefixLookups(Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.event.EventListenerList#getEventListeners(EventType<T extends Event>)": ["org.apache.commons.configuration2.event.EventListenerList#getEventListenerIterator(EventType<T extends Event>)"],
    "org.apache.commons.configuration2.beanutils.DefaultBeanFactory.<staticinit>()": ["org.apache.commons.configuration2.beanutils.DefaultBeanFactory#DefaultBeanFactory()"],
    "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getNode()": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#getRootNode()",
        "org.apache.commons.configuration2.tree.NodeTracker.TrackedNodeData#getDetachedModel()"
    ],
    "org.apache.commons.configuration2.tree.NodeCombiner.createNodeHandler()$AbstractImmutableNodeHandler$1.<init>()": ["org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler.<init>()"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getProperties(String)": [
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#getProperties(String)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#getProperties(String)",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#makePath(String)",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperties(String)"
    ],
    "org.apache.commons.configuration2.tree.xpath.XPathExpressionEngine.<staticinit>()": ["org.apache.commons.configuration2.tree.xpath.ConfigurationNodePointerFactory.<init>()"],
    "org.apache.commons.configuration2.tree.InMemoryNodeModel#replaceActiveTrackedNode(TreeData,NodeSelector,ImmutableNode)": [
        "org.apache.commons.configuration2.tree.NodeTracker#replaceAndDetachTrackedNode(NodeSelector,ImmutableNode)",
        "org.apache.commons.configuration2.tree.TreeData#updateNodeTracker(NodeTracker)",
        "org.apache.commons.configuration2.tree.TreeData#getNodeTracker()"
    ],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchDefaultLookups(Map<String, Object>)": ["org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters#setThrowExceptionOnMissing(boolean)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters#setProperty(String,Object)",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()"
    ],
    "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()": [
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()"
    ],
    "org.apache.commons.configuration2.CombinedConfiguration#getNumberOfConfigurations()": [
        "org.apache.commons.configuration2.CombinedConfiguration#getNumberOfConfigurationsInternal()",
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#ini(String)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#iniBuilder(String)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getBigIntegerArray(String)": [
        "org.apache.commons.configuration2.DataConfiguration#getBigIntegerArray(String,BigInteger[]...)",
        "org.apache.commons.configuration2.DataConfiguration.<staticinit>()"
    ],
    "org.apache.commons.configuration2.plist.PropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode,NodeHandler<ImmutableNode>)": [
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#hasNext()",
        "org.apache.commons.configuration2.SubsetConfiguration.SubsetIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getNodeName()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#next()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration.<staticinit>()",
        "org.apache.commons.configuration2.tree.DefaultConfigurationKey.KeyIterator#hasNext()",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#next()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getChildren()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#quoteString(String)",
        "org.apache.commons.configuration2.ImmutableConfigurationInvocationHandler.ImmutableIterator#hasNext()",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#printValue(PrintWriter,int,Object)",
        "org.apache.commons.configuration2.plist.PropertyListConfiguration#printNode(PrintWriter,int,ImmutableNode,NodeHandler<ImmutableNode>)",
        "org.apache.commons.configuration2.ConfigurationMap.ConfigurationSet.ConfigurationSetIterator#next()",
        "org.apache.commons.configuration2.PrefixedKeysIterator#hasNext()",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.event.EventListenerList.EventListenerIterator#hasNext()",
        "org.apache.commons.configuration2.tree.ImmutableNode#getValue()"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#xml(URL)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#xmlBuilder(URL)"
    ],
    "org.apache.commons.configuration2.DataConfiguration#getIntArray(String,int[]...)": ["org.apache.commons.configuration2.AbstractConfiguration#get(Class<T>,String,T)"],
    "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration#load(Map<String, Object>)": [
        "org.apache.commons.configuration2.tree.InMemoryNodeModel#setRootNode(ImmutableNode)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.AbstractYAMLBasedConfiguration.constructHierarchy(String,Object)"
    ],
    "org.apache.commons.configuration2.XMLConfiguration#XMLConfiguration()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.io.ConfigurationLogger#ConfigurationLogger(Class<?>)",
        "org.apache.commons.configuration2.AbstractConfiguration#initLogger(ConfigurationLogger)",
        "org.apache.commons.configuration2.XMLConfiguration.<init>()"
    ],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#reloadingPerformed()": [
        "org.apache.commons.configuration2.reloading.VFSFileHandlerReloadingDetector#getLastModificationDate()",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#updateLastModified(long)",
        "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getLastModificationDate()"
    ],
    "org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>)": ["org.apache.commons.configuration2.builder.FileBasedBuilderParametersImpl.fromParameters(Map<String, ?>,boolean)"],
    "org.apache.commons.configuration2.AbstractConfiguration#getShort(String)": [
        "org.apache.commons.configuration2.AbstractConfiguration.checkNonNullValue(String,T)",
        "org.apache.commons.configuration2.AbstractConfiguration#convert(Class<T>,String,T,boolean)"
    ],
    "org.apache.commons.configuration2.builder.AutoSaveListener#updateFileHandler(FileHandler)": [
        "org.apache.commons.configuration2.io.FileHandler#removeFileHandlerListener(FileHandlerListener)",
        "org.apache.commons.configuration2.io.FileHandler#addFileHandlerListener(FileHandlerListener)"
    ],
    "org.apache.commons.configuration2.builder.fluent.Configurations#combined(URL)": [
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.fluent.Configurations#combinedBuilder(URL)",
        "org.apache.commons.configuration2.builder.combined.ReloadingCombinedConfigurationBuilder#getConfiguration()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getConfiguration()"
    ],
    "org.apache.commons.configuration2.INIConfiguration#createValueNodes(Builder,String,String)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.SubsetConfiguration#getListDelimiterHandler()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#value(Object)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#addChild(ImmutableNode)",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#Builder()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#create()",
        "org.apache.commons.configuration2.tree.ImmutableNode.Builder#name(String)",
        "org.apache.commons.configuration2.convert.AbstractListDelimiterHandler#split(String,boolean)"
    ],
    "org.apache.commons.configuration2.INIConfiguration#getSeparatorUsedInOutput()": [
        "org.apache.commons.configuration2.AbstractConfiguration#endRead()",
        "org.apache.commons.configuration2.AbstractConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#endRead()",
        "org.apache.commons.configuration2.DynamicCombinedConfiguration#beginRead(boolean)",
        "org.apache.commons.configuration2.CombinedConfiguration#beginRead(boolean)"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilder()": [
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl#getFilePattern()",
        "org.apache.commons.configuration2.ex.ConfigurationException#ConfigurationException(String)",
        "org.apache.commons.configuration2.builder.BasicConfigurationBuilder#getParameters()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#fetchFileName(MultiFileBuilderParametersImpl)",
        "org.apache.commons.configuration2.builder.combined.MultiFileBuilderParametersImpl.fromParameters(Map<String, Object>,boolean)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#createInitializedManagedBuilder(String,Map<String, Object>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#getManagedBuilders()",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder#initListeners(FileBasedConfigurationBuilder<T extends FileBasedConfiguration>)",
        "org.apache.commons.configuration2.builder.combined.MultiFileConfigurationBuilder.createManagedBuilderParameters(Map<String, Object>,MultiFileBuilderParametersImpl)"
    ],
    "org.apache.commons.configuration2.AbstractConfiguration#convertToArray(Class<?>,String,Object)": [
        "org.apache.commons.configuration2.AbstractConfiguration#getConversionHandler()",
        "org.apache.commons.configuration2.AbstractConfiguration#getProperty(String)",
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#subset(String)$BaseHierarchicalConfiguration$2#getInterpolator()",
        "org.apache.commons.configuration2.convert.DefaultConversionHandler#toArray(Object,Class<?>,ConfigurationInterpolator)",
        "org.apache.commons.configuration2.AbstractConfiguration.checkDefaultValueArray(Class<?>,Object)",
        "org.apache.commons.configuration2.AbstractConfiguration#getInterpolator()",
        "org.apache.commons.configuration2.DataConfiguration#getConversionHandler()"
    ],
    "org.apache.commons.configuration2.SubnodeConfiguration#getRootNodeModel()": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getNodeModel()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getParent()",
        "org.apache.commons.configuration2.SubnodeConfiguration#getRootNodeModel()"
    ],
    "org.apache.commons.configuration2.tree.QueryResult#equals(Object)": [
        "org.apache.commons.configuration2.tree.QueryResult#getNode()",
        "org.apache.commons.configuration2.tree.QueryResult#getAttributeName()"
    ],
    "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)": [
        "org.apache.commons.configuration2.io.FileHandler.AbstractUpdater#update()",
        "org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)$AbstractUpdater$1.<init>()"
    ],
    "org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass#getDynaProperties()": ["org.apache.commons.configuration2.builder.combined.MultiWrapDynaClass.<staticinit>()"],
    "org.apache.commons.configuration2.builder.BasicBuilderParameters.fetchBeanHelper(Map<String, Object>)": [
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.<staticinit>()",
        "org.apache.commons.configuration2.builder.BasicBuilderParameters.checkParameters(Map<String, Object>)"
    ],
    "org.apache.commons.configuration2.io.FileHandler#resetFileSystem()": ["org.apache.commons.configuration2.io.FileHandler#setFileSystem(FileSystem)"],
    "org.apache.commons.configuration2.CompositeConfiguration#addPropertyDirect(String,Object)": ["org.apache.commons.configuration2.AbstractConfiguration#addProperty(String,Object)"],
    "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper#PatternSubtreeConfigurationWrapper(HierarchicalConfiguration<ImmutableNode>,String)": [
        "org.apache.commons.configuration2.BaseHierarchicalConfiguration#BaseHierarchicalConfiguration()",
        "org.apache.commons.configuration2.PatternSubtreeConfigurationWrapper.<init>()"
    ],
    "org.apache.commons.configuration2.XMLListReference.isListNode(ImmutableNode,ReferenceNodeHandler)": [
        "org.apache.commons.configuration2.XMLListReference.nameEquals(ImmutableNode,ImmutableNode)",
        "org.apache.commons.configuration2.XMLListReference.hasListReference(ImmutableNode,ReferenceNodeHandler)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChildrenCount(T,String)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getParent(T)",
        "org.apache.commons.configuration2.tree.NodeHandlerDecorator#getChild(T,int)"
    ],
    "org.apache.commons.configuration2.INIConfiguration.builder()": ["org.apache.commons.configuration2.INIConfiguration.Builder.<init>()"],
    "org.apache.commons.configuration2.builder.fluent.Parameters#database()": ["org.apache.commons.configuration2.builder.DatabaseBuilderParametersImpl.<init>()"],
    "org.apache.commons.configuration2.tree.AbstractImmutableNodeHandler#getChildren(ImmutableNode,String)": ["org.apache.commons.configuration2.tree.NodeNameMatchers.<staticinit>()"],
    "org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getLastModificationDate()": ["org.apache.commons.configuration2.reloading.FileHandlerReloadingDetector#getExistingFile()"],
    "org.apache.commons.configuration2.io.FileLocatorUtils.convertFileToURL(File)": ["org.apache.commons.configuration2.io.FileLocatorUtils.convertURIToURL(URI)"]
}