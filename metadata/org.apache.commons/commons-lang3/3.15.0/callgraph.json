{
    "org.apache.commons.lang3.ArchUtils.getProcessor()": [
        "org.apache.commons.lang3.ArchUtils.getProcessor(String)",
        "org.apache.commons.lang3.SystemProperties.getOsArch()"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor()": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()"
    ],
    "org.apache.commons.lang3.stream.Streams.instancesOf(Class<? super E>,Collection<? super E>)": [
        "org.apache.commons.lang3.stream.Streams.instancesOf(Class<? super E>,Stream<?>)",
        "org.apache.commons.lang3.stream.Streams.of(Collection<E>)"
    ],
    "org.apache.commons.lang3.RandomStringUtils.random(int,char[]...)": [
        "org.apache.commons.lang3.RandomStringUtils.random()",
        "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)"
    ],
    "org.apache.commons.lang3.function.Failable.accept(FailableIntConsumer<E extends Throwable>,int)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Date,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)"],
    "org.apache.commons.lang3.ArrayUtils.add(long[],long)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.AnnotationUtils.<staticinit>()": ["org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1.<init>()"],
    "org.apache.commons.lang3.ObjectUtils.identityToString(StringBuffer,Object)": [
        "org.apache.commons.lang3.ObjectUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)"
    ],
    "org.apache.commons.lang3.AnnotationUtils.equals(Annotation,Annotation)": [
        "org.apache.commons.lang3.AnnotationUtils.isValidAnnotationMemberType(Class<?>)",
        "org.apache.commons.lang3.AnnotationUtils.memberEquals(Class<?>,Object,Object)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Collection<?>)": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayEnd()",
        "org.apache.commons.lang3.builder.ToStringStyle#getArrayStart()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayStart()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#getArrayEnd()"
    ],
    "org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.function.FailableLongToDoubleFunction.nop()": ["org.apache.commons.lang3.function.FailableLongToDoubleFunction.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.<init>()": ["org.apache.commons.lang3.concurrent.AtomicSafeInitializer#getNoInit()"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#getTypedException(Exception)": ["org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)"],
    "org.apache.commons.lang3.time.DateUtils.truncatedEquals(Date,Date,int)": ["org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Date,Date,int)"],
    "org.apache.commons.lang3.time.FastDateParser.<staticinit>()": [
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#NumberStrategy(int)",
        "org.apache.commons.lang3.time.FastDateParser$NumberStrategy$1.<init>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle#SimpleToStringStyle()": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseFieldNames(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseFieldNames(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle.<init>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.tuple.Pair#compareTo(Pair<L, R>)": [
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()",
        "org.apache.commons.lang3.builder.CompareToBuilder#CompareToBuilder()",
        "org.apache.commons.lang3.builder.CompareToBuilder#toComparison()",
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()",
        "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[])"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>)": ["org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>,boolean,boolean)"],
    "org.apache.commons.lang3.CharUtils.toCharacterObject(String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.builder.ToStringStyle.getRegistry()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.tuple.Triple#equals(Object)": [
        "org.apache.commons.lang3.tuple.ImmutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.MutableTriple#getMiddle()",
        "org.apache.commons.lang3.tuple.MutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getMiddle()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#accept(Class<?>)",
        "org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(Class<?>)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(Object,ToStringStyle)",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nextCheckIntervalData(int,CheckIntervalData,State,long)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy#isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.stateStrategy(State)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#increment(int)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomAscii(int,int)": [
        "org.apache.commons.lang3.RandomStringUtils.randomAscii(int)",
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)"
    ],
    "org.apache.commons.lang3.StringUtils.splitByWholeSeparator(String,String)": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.time.FastDateFormat.getInstance(String)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,long)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.ClassUtils.getClass(ClassLoader,String,boolean)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getPrimitiveClass(String)",
        "org.apache.commons.lang3.ClassUtils.toCanonicalName(String)"
    ],
    "org.apache.commons.lang3.StringUtils.remove(String,char)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#getChars(char[])": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,T,int,int)"
    ],
    "org.apache.commons.lang3.time.DateUtils.addWeeks(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,String[]...)": ["org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,Locale,String[]...)"],
    "org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(CharSequence,CharSequence,int)": ["org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean)"],
    "org.apache.commons.lang3.time.DateUtils.truncate(Date,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)",
        "org.apache.commons.lang3.time.DateUtils.toCalendar(Date)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.createNumber(String)": [
        "org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String)",
        "org.apache.commons.lang3.math.NumberUtils.createLong(String)",
        "org.apache.commons.lang3.math.NumberUtils.createDouble(String)",
        "org.apache.commons.lang3.math.NumberUtils.createInteger(String)",
        "org.apache.commons.lang3.math.NumberUtils.createFloat(String)",
        "org.apache.commons.lang3.math.NumberUtils.isZero(String,String)",
        "org.apache.commons.lang3.math.NumberUtils.createBigInteger(String)",
        "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)",
        "org.apache.commons.lang3.math.NumberUtils.getMantissa(String,int)",
        "org.apache.commons.lang3.math.NumberUtils.isDigits(String)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#format(long,StringBuffer)"],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,TypeVariable<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,ParameterizedType,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,GenericArrayType,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,WildcardType,Map<TypeVariable<?>, Type>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(char[],int,char)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.SystemProperties.getJavaAwtGraphicsenv()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.StopWatch#getStartTime()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.EnumUtils.generateBitVectors(Class<E extends Enum>,Iterable<? extends E extends Enum>)": [
        "org.apache.commons.lang3.EnumUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.reverse(long[])",
        "org.apache.commons.lang3.EnumUtils.asEnum(Class<E extends Enum>)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,int)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,char[])": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,char[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char[],Boolean)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#isDone()": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#isDone()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#isDone()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toObject(byte[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)": ["org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)": [
        "org.apache.commons.lang3.tuple.ImmutablePair#ImmutablePair(L,R)",
        "org.apache.commons.lang3.tuple.ImmutablePair.nullPair()"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.Token#toString()": [
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.StringUtils.repeat(String,int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getTimeInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientWindowSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int)": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore.<init>()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore.<staticinit>()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#setLimit(int)",
        "org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.ThreadUtils.NamePredicate#NamePredicate(String)": ["org.apache.commons.lang3.ThreadUtils.NamePredicate.<init>()"],
    "org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#tryAdvance(Consumer<? super T>)": ["org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#next(Consumer<? super T>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[])": ["org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setUseShortClassName(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setUseShortClassName(boolean)"],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper#toUtf16Escape(int)": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int)"],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(Object,Object)": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.ArrayUtils.removeAll(double[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.text.StrTokenizer#readNextToken(char[],int,int,StrBuilder,List<String>)": [
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#getDelimiterMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#addToken(List<String>,String)",
        "org.apache.commons.lang3.text.StrTokenizer#getQuoteMatcher()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#getIgnoredMatcher()",
        "org.apache.commons.lang3.text.StrTokenizer#getTrimmerMatcher()",
        "org.apache.commons.lang3.text.StrTokenizer#readWithQuotes(char[],int,int,StrBuilder,List<String>,int,int)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String)": ["org.apache.commons.lang3.text.StrTokenizer.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVersion()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(byte[],byte[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(byte,byte)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#build()": ["org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#WildcardTypeImpl(Type[],Type[])"],
    "org.apache.commons.lang3.time.FastDateFormat#format(Date,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Date,StringBuffer)"],
    "org.apache.commons.lang3.JavaVersion.toFloatVersion(String)": [
        "org.apache.commons.lang3.JavaVersion.split(String)",
        "org.apache.commons.lang3.math.NumberUtils.toFloat(String,float)"
    ],
    "org.apache.commons.lang3.SystemUtils#SystemUtils()": ["org.apache.commons.lang3.SystemUtils.<init>()"],
    "org.apache.commons.lang3.Validate.notEmpty(T extends CharSequence,String,Object[]...)": [
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(long[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#reflectionAppendArrayDetail(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.ToStringStyle#reflectionAppendArrayDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#setDelimiterChar(char)": [
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)"
    ],
    "org.apache.commons.lang3.text.translate.CharSequenceTranslator#with(CharSequenceTranslator[]...)": ["org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,T,int,int)"],
    "org.apache.commons.lang3.CharSetUtils.containsAny(String,String[]...)": [
        "org.apache.commons.lang3.CharSet#contains(char)",
        "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])",
        "org.apache.commons.lang3.CharSet.getInstance(String[]...)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#parse(FastDateParser,Calendar,String,ParsePosition,int)": [
        "org.apache.commons.lang3.time.FastDateParser$NumberStrategy$1#modify(FastDateParser,int)",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#modify(FastDateParser,int)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double,int,RoundingMode)": ["org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)"],
    "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.tuple.ImmutablePair.nullPair()": ["org.apache.commons.lang3.tuple.ImmutablePair.<staticinit>()"],
    "org.apache.commons.lang3.math.NumberUtils.toShort(String)": ["org.apache.commons.lang3.math.NumberUtils.toShort(String,short)"],
    "org.apache.commons.lang3.StringUtils.lowerCase(String,Locale)": ["org.apache.commons.lang3.LocaleUtils.toLocale(Locale)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientWebSocketWriteBufferSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrLookup.SystemPropertiesStrLookup.<init>()": ["org.apache.commons.lang3.text.StrLookup#StrLookup()"],
    "org.apache.commons.lang3.StringUtils.isAlphanumeric(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientAllowRestrictedHeaders()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayStart()": ["org.apache.commons.lang3.builder.ToStringStyle#getArrayStart()"],
    "org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,char[]...)": [
        "org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,char[]...)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.noNullElements(T[])": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)": ["org.apache.commons.lang3.text.translate.JavaUnicodeEscaper#JavaUnicodeEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.Conversion.hexDigitToBinary(char)": ["org.apache.commons.lang3.Conversion.<staticinit>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparatorAtStart(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparatorAtStart(boolean)"],
    "org.apache.commons.lang3.tuple.ImmutablePair#ImmutablePair(L,R)": [
        "org.apache.commons.lang3.tuple.Pair.<init>()",
        "org.apache.commons.lang3.tuple.ImmutablePair.<init>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.StringMatcher#StringMatcher(String)": [
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher.<init>()",
        "org.apache.commons.lang3.text.StrMatcher#StrMatcher()"
    ],
    "org.apache.commons.lang3.function.FailableBiConsumer.nop()": ["org.apache.commons.lang3.function.FailableBiConsumer.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#build()": ["org.apache.commons.lang3.text.StrBuilder#toString()"],
    "org.apache.commons.lang3.Validate.isAssignableFrom(Class<?>,Class<?>,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.SystemProperties.getJavaCompiler()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(Annotation[],Annotation[])": ["org.apache.commons.lang3.AnnotationUtils.equals(Annotation,Annotation)"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class<?>,String,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class<?>,String,Object,boolean)"],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer()": ["org.apache.commons.lang3.text.StrTokenizer.<init>()"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,Locale)": [
        "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.DateFormatUtils.getTimeZone(Calendar)"
    ],
    "org.apache.commons.lang3.BitField#getShortRawValue(short)": ["org.apache.commons.lang3.BitField#getRawValue(int)"],
    "org.apache.commons.lang3.ObjectUtils.allNull(Object[]...)": ["org.apache.commons.lang3.ObjectUtils.anyNotNull(Object[]...)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)": ["org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)"],
    "org.apache.commons.lang3.compare.ComparableUtils.betweenExclusive(A extends Comparable,A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenExclusive(A extends Comparable,A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(double[],double)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.SystemProperties.getComSunNetHttpServerHttpServerProvider()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.function.FailableObjLongConsumer.nop()": ["org.apache.commons.lang3.function.FailableObjLongConsumer.<staticinit>()"],
    "org.apache.commons.lang3.time.DateUtils.set(Date,int,int)": ["org.apache.commons.lang3.time.DateUtils.validateDateNotNull(Date)"],
    "org.apache.commons.lang3.RandomUtils.nextBoolean()": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.ThreadUtils.predicateThreadGroup(String)": ["org.apache.commons.lang3.ThreadUtils.namePredicate(String,Function<T, String>)"],
    "org.apache.commons.lang3.text.StrBuilder#appendTo(Appendable)": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(char[],int,int)"],
    "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#Iso8601_Rule(int)": ["org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.<init>()"],
    "org.apache.commons.lang3.StringUtils.join(List<?>,String,int,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.join(Iterable<?>,String)"
    ],
    "org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int)": ["org.apache.commons.lang3.Conversion.hexDigitToInt(char)"],
    "org.apache.commons.lang3.ArrayUtils.remove(double[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.concurrent.CircuitBreakingException#CircuitBreakingException()": ["org.apache.commons.lang3.concurrent.CircuitBreakingException.<init>()"],
    "org.apache.commons.lang3.stream.LangCollectors.joining()": [
        "org.apache.commons.lang3.stream.LangCollectors.<staticinit>()",
        "org.apache.commons.lang3.stream.LangCollectors.SimpleCollector#SimpleCollector(Supplier<A>,BiConsumer<A, T>,BinaryOperator<A>,Function<A, R>,Set<Characteristics>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getUpperBounds()",
        "org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(Type[])"
    ],
    "org.apache.commons.lang3.text.StrMatcher.<staticinit>()": [
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#CharMatcher(char)",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#CharSetMatcher(char[])",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#NoMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#TrimMatcher()"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#hashCode()": ["org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableDoubleUnaryOperator.nop()": ["org.apache.commons.lang3.function.FailableDoubleUnaryOperator.<staticinit>()"],
    "org.apache.commons.lang3.time.DateUtils.round(Calendar,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuilder)": ["org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuilder,int,int)"],
    "org.apache.commons.lang3.Streams.FailableStream#forEach(FailableConsumer<O, ?>)": [
        "org.apache.commons.lang3.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.Functions.asConsumer(FailableConsumer<I, ?>)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#format(Calendar,B extends Appendable)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,B extends Appendable)"],
    "org.apache.commons.lang3.time.FastDateFormat#format(Date)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Date)"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getCloser()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#AtomicSafeInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getInitializer()"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpKeepAlive()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.builder()": ["org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(boolean[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"
    ],
    "org.apache.commons.lang3.StringUtils.firstNonBlank(T extends CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"],
    "org.apache.commons.lang3.StringUtils.abbreviate(String,String,int)": ["org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)"],
    "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)": ["org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(String)": [
        "org.apache.commons.lang3.SystemUtils.isJavaVersionMatch(String,String)",
        "org.apache.commons.lang3.SystemUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeXml(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getFtpProxyPort()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(char,char)": [
        "org.apache.commons.lang3.text.StrBuilder#append(char)",
        "org.apache.commons.lang3.text.StrBuilder#isNotEmpty()"
    ],
    "org.apache.commons.lang3.mutable.MutableDouble#MutableDouble()": ["org.apache.commons.lang3.mutable.MutableDouble.<init>()"],
    "org.apache.commons.lang3.function.Consumers#Consumers()": ["org.apache.commons.lang3.function.Consumers.<init>()"],
    "org.apache.commons.lang3.StringUtils.removeEnd(String,String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.add(byte[],byte)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ThreadUtils.ThreadIdPredicate#ThreadIdPredicate(long)": ["org.apache.commons.lang3.ThreadUtils.ThreadIdPredicate.<init>()"],
    "org.apache.commons.lang3.StringUtils.stripStart(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte,int)"],
    "org.apache.commons.lang3.CharSequenceUtils.checkLaterThan1(CharSequence,CharSequence,int,int)": ["org.apache.commons.lang3.text.StrBuilder#charAt(int)"],
    "org.apache.commons.lang3.time.StopWatch#isSuspended()": ["org.apache.commons.lang3.time.StopWatch.State$State$1#isSuspended()"],
    "org.apache.commons.lang3.text.StrBuilder#charAt(int)": ["org.apache.commons.lang3.text.StrBuilder#length()"],
    "org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(Class<?>,Class<? extends Annotation>)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>)"
    ],
    "org.apache.commons.lang3.IntegerRange#IntegerRange(Integer,Integer)": ["org.apache.commons.lang3.IntegerRange.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaVendor()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)"
    ],
    "org.apache.commons.lang3.function.Functions#Functions()": ["org.apache.commons.lang3.function.Functions.<init>()"],
    "org.apache.commons.lang3.concurrent.LazyInitializer.builder()": ["org.apache.commons.lang3.concurrent.LazyInitializer.Builder.<init>()"],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuffer)": ["org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuffer,int,int)"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.<init>()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()"],
    "org.apache.commons.lang3.function.Failable.asCallable(FailableCallable<V, ?>)": ["org.apache.commons.lang3.function.Failable.call(FailableCallable<V, E extends Throwable>)"],
    "org.apache.commons.lang3.SerializationUtils.clone(T extends Serializable)": [
        "org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream#ClassLoaderAwareObjectInputStream(InputStream,ClassLoader)",
        "org.apache.commons.lang3.ObjectUtils.getClass(T)",
        "org.apache.commons.lang3.SerializationException#SerializationException(String,Throwable)",
        "org.apache.commons.lang3.SerializationUtils.serialize(Serializable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)"
    ],
    "org.apache.commons.lang3.StringUtils.substringAfter(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#parse(String,ParsePosition,Calendar)": ["org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition,Calendar)"],
    "org.apache.commons.lang3.SystemProperties.getStdErrEncoding()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.function.FailableLongFunction.nop()": ["org.apache.commons.lang3.function.FailableLongFunction.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateFormat#format(long,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#format(long,StringBuffer)"],
    "org.apache.commons.lang3.RandomStringUtils.random(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)"],
    "org.apache.commons.lang3.Validate.validIndex(T[],int)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#read()": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#ready()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(char[])": [
        "org.apache.commons.lang3.text.StrTokenizer.getTSVClone()",
        "org.apache.commons.lang3.text.StrTokenizer#reset(char[])"
    ],
    "org.apache.commons.lang3.time.StopWatch.<init>()": [
        "org.apache.commons.lang3.time.StopWatch.State.<staticinit>()",
        "org.apache.commons.lang3.time.StopWatch.SplitState.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long,int)"],
    "org.apache.commons.lang3.EnumUtils.isValidEnum(Class<E extends Enum>,String)": ["org.apache.commons.lang3.EnumUtils.getEnum(Class<E extends Enum>,String)"],
    "org.apache.commons.lang3.StringUtils.rightPad(String,int,char)": [
        "org.apache.commons.lang3.StringUtils.repeat(char,int)",
        "org.apache.commons.lang3.StringUtils.rightPad(String,int,char)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.EnumUtils.generateBitVectors(Class<E extends Enum>,E extends Enum[]...)": [
        "org.apache.commons.lang3.Validate.noNullElements(T[])",
        "org.apache.commons.lang3.ArrayUtils.reverse(long[])",
        "org.apache.commons.lang3.EnumUtils.asEnum(Class<E extends Enum>)"
    ],
    "org.apache.commons.lang3.StringUtils.split(String)": ["org.apache.commons.lang3.StringUtils.split(String,String,int)"],
    "org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.text.WordUtils.swapCase(String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[])": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.rightPad(String,int,String)": [
        "org.apache.commons.lang3.StringUtils.rightPad(String,int,char)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.lastIndexOfAny(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(char[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(char)"],
    "org.apache.commons.lang3.math.IEEE754rUtils.max(double[]...)": ["org.apache.commons.lang3.math.IEEE754rUtils.max(double[]...)"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#isInitialized()": ["org.apache.commons.lang3.concurrent.AtomicSafeInitializer.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientHttpClientLog()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SerializationException#SerializationException(String)": ["org.apache.commons.lang3.SerializationException.<init>()"],
    "org.apache.commons.lang3.function.Failable.accept(FailableBiConsumer<T, U, E extends Throwable>,T,U)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Map<String, V>,String,String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#replace(Object)",
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>,String,String)"
    ],
    "org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,char[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#delete(int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#validateRange(int,int)",
        "org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)"
    ],
    "org.apache.commons.lang3.StringUtils.strip(String)": ["org.apache.commons.lang3.StringUtils.strip(String,String)"],
    "org.apache.commons.lang3.ArrayFill#ArrayFill()": ["org.apache.commons.lang3.ArrayFill.<init>()"],
    "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.<init>()": ["org.apache.commons.lang3.text.translate.CodePointTranslator.<init>()"],
    "org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale,Locale)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.Validate.validState(boolean,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getSizeEndText()": ["org.apache.commons.lang3.builder.ToStringStyle#getSizeEndText()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,char)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char)"],
    "org.apache.commons.lang3.text.StrMatcher.commaMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.getShortClassName(String)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.BooleanUtils.oneHot(boolean[]...)": ["org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"],
    "org.apache.commons.lang3.DoubleRange.of(double,double)": ["org.apache.commons.lang3.DoubleRange.of(double,double)"],
    "org.apache.commons.lang3.ClassUtils.getClass(ClassLoader,String)": ["org.apache.commons.lang3.ClassUtils.getClass(ClassLoader,String,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getJavaVendorVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Function<I, O>)": ["org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Function<I, O>,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.remove(T[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.RandomStringUtils.random(int,String)": [
        "org.apache.commons.lang3.RandomStringUtils.random(int,String)",
        "org.apache.commons.lang3.RandomStringUtils.random()",
        "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)"
    ],
    "org.apache.commons.lang3.ArrayUtils.reverse(long[])": ["org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(double)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double)"],
    "org.apache.commons.lang3.text.StrBuilder#replaceAll(String,String)": [
        "org.apache.commons.lang3.text.StrBuilder#replaceImpl(int,int,int,String,int)",
        "org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char,StrMatcher)": [
        "org.apache.commons.lang3.text.StrSubstitutor.<init>()",
        "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffixMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefixMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableResolver(StrLookup<?>)",
        "org.apache.commons.lang3.text.StrSubstitutor#setEscapeChar(char)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadGroupsByName(String)": [
        "org.apache.commons.lang3.ThreadUtils.findThreadGroups(Predicate<ThreadGroup>)",
        "org.apache.commons.lang3.ThreadUtils.predicateThreadGroup(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpMaxConnections()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.stream.Streams.ArrayCollector#characteristics()": ["org.apache.commons.lang3.stream.Streams.ArrayCollector.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.add(long[],int,long)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.StringUtils.endsWithAny(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,T[]...)": ["org.apache.commons.lang3.AppendableJoiner.joinSB(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[]...)"],
    "org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier<String>)": [
        "org.apache.commons.lang3.StringUtils.getIfEmpty(T extends CharSequence,Supplier<T extends CharSequence>)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.stream.Streams.failableStream(T[]...)": [
        "org.apache.commons.lang3.stream.Streams.failableStream(Stream<T>)",
        "org.apache.commons.lang3.stream.Streams.of(T[]...)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setIncludeFieldNames(String[]...)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Object[])",
        "org.apache.commons.lang3.ArraySorter.sort(T[])"
    ],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#initialize()": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getExternalExecutor()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#start()",
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#MultiBackgroundInitializerResults(Map<String, BackgroundInitializer<?>>,Map<String, Object>,Map<String, ConcurrentException>)",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#setExternalExecutor(ExecutorService)",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getActiveExecutor()"
    ],
    "org.apache.commons.lang3.text.translate.LookupTranslator#LookupTranslator(CharSequence[][]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()",
        "org.apache.commons.lang3.text.translate.LookupTranslator.<init>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)": [
        "org.apache.commons.lang3.time.DateUtils.validateDateNotNull(Date)",
        "org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder.<staticinit>()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#CharacterLiteral(char)": ["org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral.<init>()"],
    "org.apache.commons.lang3.ObjectUtils#ObjectUtils()": ["org.apache.commons.lang3.ObjectUtils.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()": [
        "org.apache.commons.lang3.AppendableJoiner.Builder#setSuffix(CharSequence)",
        "org.apache.commons.lang3.AppendableJoiner.Builder#setDelimiter(CharSequence)",
        "org.apache.commons.lang3.reflect.TypeUtils.anyToString(T)",
        "org.apache.commons.lang3.AppendableJoiner.Builder#setElementAppender(FailableBiConsumer<Appendable, T, IOException>)",
        "org.apache.commons.lang3.AppendableJoiner.Builder#setPrefix(CharSequence)",
        "org.apache.commons.lang3.AppendableJoiner.builder()",
        "org.apache.commons.lang3.reflect.TypeUtils.wildcardType()",
        "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)",
        "org.apache.commons.lang3.AppendableJoiner.Builder#get()"
    ],
    "org.apache.commons.lang3.ClassUtils.<staticinit>()": ["org.apache.commons.lang3.ClassUtils.getName(Class<?>)"],
    "org.apache.commons.lang3.compare.ComparableUtils.between(A extends Comparable,A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#between(A extends Comparable,A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)"
    ],
    "org.apache.commons.lang3.text.translate.AggregateTranslator#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.translate.LookupTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.UnicodeUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.AggregateTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.CodePointTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.OctalUnescaper#translate(CharSequence,int,Writer)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#ParameterizedTypeImpl(Class<?>,Type,Type[])": ["org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl.<init>()"],
    "org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[])": [
        "org.apache.commons.lang3.builder.CompareToBuilder#append(Object,Object)",
        "org.apache.commons.lang3.builder.Reflection.getUnchecked(Field,Object)",
        "org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.isChecked(Throwable)"],
    "org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)": [
        "org.apache.commons.lang3.StringEscapeUtils.escapeJson(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getRawType()",
        "org.apache.commons.lang3.reflect.TypeUtils.appendRecursiveTypes(StringBuilder,int[],Type[])",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,Iterable<T>)",
        "org.apache.commons.lang3.reflect.TypeUtils.findRecursiveTypes(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getOwnerType()",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientReceiveBufferSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T,ToStringStyle,boolean,boolean,boolean,Class<? super T>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class<? super T>,boolean,boolean,boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()"
    ],
    "org.apache.commons.lang3.RuntimeEnvironment.inWsl()": ["org.apache.commons.lang3.RuntimeEnvironment.containsLine(String,String)"],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float,int,RoundingMode)": ["org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)"],
    "org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[])": ["org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,short[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(long[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.BooleanUtils.oneHot(Boolean[]...)": [
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])",
        "org.apache.commons.lang3.BooleanUtils.oneHot(boolean[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer()": ["org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(ExecutorService)"],
    "org.apache.commons.lang3.concurrent.LazyInitializer#get()": [
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.<staticinit>()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#initialize()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char,int)"],
    "org.apache.commons.lang3.builder.Diff#toString()": [
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()"
    ],
    "org.apache.commons.lang3.StringUtils.join(int[],char)": ["org.apache.commons.lang3.StringUtils.join(int[],char,int,int)"],
    "org.apache.commons.lang3.text.StrTokenizer#previous()": ["org.apache.commons.lang3.text.StrTokenizer#hasPrevious()"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(char[],int,int)": ["org.apache.commons.lang3.text.StrBuilder#append(char[],int,int)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.ReadWriteLockVisitor#ReadWriteLockVisitor(O,ReadWriteLock)": [
        "org.apache.commons.lang3.concurrent.locks.LockingVisitors.ReadWriteLockVisitor.<init>()",
        "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#LockVisitor(O,L,Supplier<Lock>,Supplier<Lock>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaRmiServerRmiClassLoaderSpi()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.addAll(T[],T[]...)": [
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Supplier<T>)",
        "org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)",
        "org.apache.commons.lang3.ArrayUtils.clone(T[])",
        "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])"
    ],
    "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence,Function<Object, String>)": [
        "org.apache.commons.lang3.stream.LangCollectors.<staticinit>()",
        "org.apache.commons.lang3.stream.LangCollectors.SimpleCollector#SimpleCollector(Supplier<A>,BiConsumer<A, T>,BinaryOperator<A>,Function<A, R>,Set<Characteristics>)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#deleteFirst(char)": ["org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)"],
    "org.apache.commons.lang3.SystemProperties.getHttpAuthDigestReenabledAlgorithms()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateFormat$AbstractFormatCache$1#createInstance(String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.TimeZones.toTimeZone(TimeZone)"
    ],
    "org.apache.commons.lang3.ObjectUtils.clone(T)": [
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.exception.CloneFailedException#CloneFailedException(String,Throwable)"
    ],
    "org.apache.commons.lang3.Validate.notEmpty(T[],String,Object[]...)": [
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"
    ],
    "org.apache.commons.lang3.text.translate.CodePointTranslator#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.translate.UnicodeEscaper#translate(int,Writer)",
        "org.apache.commons.lang3.text.translate.NumericEntityEscaper#translate(int,Writer)",
        "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover#translate(int,Writer)"
    ],
    "org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale)": ["org.apache.commons.lang3.LocaleUtils.localeLookupList(Locale,Locale)"],
    "org.apache.commons.lang3.Validate.notBlank(T extends CharSequence,String,Object[]...)": [
        "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)",
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int)": ["org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.<staticinit>()"],
    "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence)": [
        "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#lastIndexOf(String,int)": ["org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,CharSequence,int)"],
    "org.apache.commons.lang3.ArrayUtils.insert(int,float[],float[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(float[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)"],
    "org.apache.commons.lang3.SystemProperties.getJdkTlsClientSignatureSchemes()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.math.Fraction.getFraction(String)": [
        "org.apache.commons.lang3.math.Fraction.getFraction(double)",
        "org.apache.commons.lang3.math.Fraction.getFraction(int,int)",
        "org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)"
    ],
    "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker#close()": [
        "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.<staticinit>()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#close()"
    ],
    "org.apache.commons.lang3.text.WordUtils.capitalizeFully(String)": ["org.apache.commons.lang3.text.WordUtils.capitalizeFully(String,char[]...)"],
    "org.apache.commons.lang3.tuple.Pair#hashCode()": [
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.RandomUtils.nextInt(int,int)": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Map<String, V>)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>)",
        "org.apache.commons.lang3.text.StrSubstitutor#replace(Object)"
    ],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#acquire()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#acquirePermit()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#prepareAcquire()"
    ],
    "org.apache.commons.lang3.mutable.MutableFloat#MutableFloat(float)": ["org.apache.commons.lang3.mutable.MutableFloat.<init>()"],
    "org.apache.commons.lang3.StringUtils.substringBetween(String,String)": ["org.apache.commons.lang3.StringUtils.substringBetween(String,String,String)"],
    "org.apache.commons.lang3.arch.Processor.Type#Type(String)": ["org.apache.commons.lang3.arch.Processor.Type.<init>()"],
    "org.apache.commons.lang3.function.Failable.apply(FailableBiFunction<T, U, R, E extends Throwable>,T,U)": ["org.apache.commons.lang3.function.Failable.get(FailableSupplier<T, E extends Throwable>)"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#MultilineRecursiveToStringStyle()": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#RecursiveToStringStyle()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()"
    ],
    "org.apache.commons.lang3.time.StopWatch#reset()": [
        "org.apache.commons.lang3.time.StopWatch.State.<staticinit>()",
        "org.apache.commons.lang3.time.StopWatch.SplitState.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(String)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String)": ["org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Map<String, ? extends FormatFactory>)"],
    "org.apache.commons.lang3.time.FastDateFormat#equals(Object)": ["org.apache.commons.lang3.time.FastDatePrinter#equals(Object)"],
    "org.apache.commons.lang3.reflect.MethodUtils.getVarArgs(Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Object)",
        "org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)"
    ],
    "org.apache.commons.lang3.StringUtils.truncate(String,int)": ["org.apache.commons.lang3.StringUtils.truncate(String,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.add(short[],int,short)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)": [
        "org.apache.commons.lang3.CharUtils.isAsciiAlphaLower(char)",
        "org.apache.commons.lang3.CharUtils.isAsciiAlphaUpper(char)"
    ],
    "org.apache.commons.lang3.ArrayUtils.addFirst(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,boolean[],boolean[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)"
    ],
    "org.apache.commons.lang3.ObjectUtils.getFirstNonNull(Supplier<T>[]...)": ["org.apache.commons.lang3.stream.Streams.of(T[]...)"],
    "org.apache.commons.lang3.ArrayUtils.addAll(double[],double[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(double[])"],
    "org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class<T>,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)",
        "org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class<T>,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.ObjectUtils.identityToString(StringBuilder,Object)": [
        "org.apache.commons.lang3.ObjectUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)"
    ],
    "org.apache.commons.lang3.function.MethodInvokers.asFailableFunction(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)": ["org.apache.commons.lang3.StringUtils.leftPad(String,int,char)"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#start()": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getExternalExecutor()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#createExecutor()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#isStarted()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#createTask(ExecutorService)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#trim()": ["org.apache.commons.lang3.text.StrBuilder#delete(int,int)"],
    "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)",
        "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#TwoDigitMonthField()": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.<init>()"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(Throwable,String)": ["org.apache.commons.lang3.NotImplementedException.<init>()"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#addContextValue(String,Object)": [
        "org.apache.commons.lang3.exception.ContextedException#addContextValue(String,Object)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#addContextValue(String,Object)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#addContextValue(String,Object)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.reflect.MemberUtils.compareMethodFit(Method,Method,Class<?>[])": [
        "org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Executable,Executable,Class<?>[])",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Method)"
    ],
    "org.apache.commons.lang3.tuple.MutablePair.of(Map.Entry<L, R>)": [
        "org.apache.commons.lang3.tuple.MutablePair#MutablePair(L,R)",
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.ArrayUtils.reverse(double[])": ["org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)"],
    "org.apache.commons.lang3.Validate.notNaN(double)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaVersionDate()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSorted(double[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.time.FastDateParser#init(Calendar)": [
        "org.apache.commons.lang3.time.FastDateParser.StrategyParser#StrategyParser(Calendar)",
        "org.apache.commons.lang3.time.FastDateParser.StrategyParser#getNextStrategy()"
    ],
    "org.apache.commons.lang3.time.FastDateParser#parseObject(String,ParsePosition)": ["org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition)"],
    "org.apache.commons.lang3.LocaleUtils#LocaleUtils()": ["org.apache.commons.lang3.LocaleUtils.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(String,String)": [
        "org.apache.commons.lang3.text.StrBuilder#isEmpty()",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.function.MethodInvokers.asSupplier(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.tuple.Pair.of(Map.Entry<L, R>)": ["org.apache.commons.lang3.tuple.ImmutablePair.of(Map.Entry<L, R>)"],
    "org.apache.commons.lang3.ObjectUtils.mode(T[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.StringUtils.getIfEmpty(T extends CharSequence,Supplier<T extends CharSequence>)": [
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.math.Fraction#abs()": ["org.apache.commons.lang3.math.Fraction#negate()"],
    "org.apache.commons.lang3.RandomStringUtils.randomPrint(int,int)": [
        "org.apache.commons.lang3.RandomStringUtils.randomPrint(int)",
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)"
    ],
    "org.apache.commons.lang3.StringUtils.stripToEmpty(String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.strip(String,String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getOsVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVendorUrl()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaNetUseSystemProxies()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)": ["org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Supplier<T>)"],
    "org.apache.commons.lang3.math.NumberUtils.min(int[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.CharUtils.isAsciiAlphanumeric(char)": [
        "org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)",
        "org.apache.commons.lang3.CharUtils.isAsciiAlpha(char)"
    ],
    "org.apache.commons.lang3.StringUtils.containsNone(CharSequence,String)": ["org.apache.commons.lang3.StringUtils.containsNone(CharSequence,String)"],
    "org.apache.commons.lang3.SystemProperties.getHttpNonProxyHosts()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getFirstContextValue(String)": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getFirstContextValue(String)",
        "org.apache.commons.lang3.exception.ContextedException#getFirstContextValue(String)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getFirstContextValue(String)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)": ["org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int,List<String>)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.time.DateUtils.addYears(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.Functions.asConsumer(FailableConsumer<I, ?>)": ["org.apache.commons.lang3.Functions.accept(FailableConsumer<O, T extends Throwable>,O)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen.<init>()": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy.<init>()"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()": [
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#getNoInit()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#initialize()"
    ],
    "org.apache.commons.lang3.stream.Streams.ArrayCollector#ArrayCollector(Class<E>)": ["org.apache.commons.lang3.stream.Streams.ArrayCollector.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle#ShortPrefixToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseShortClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseShortClassName(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class<?>,Class<?>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)"
    ],
    "org.apache.commons.lang3.StringUtils.deleteWhitespace(String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.tuple.Triple#toString(String)": [
        "org.apache.commons.lang3.tuple.ImmutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getMiddle()",
        "org.apache.commons.lang3.tuple.MutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getMiddle()"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#allMatch(FailablePredicate<O, ?>)": [
        "org.apache.commons.lang3.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.Functions.asPredicate(FailablePredicate<I, ?>)",
        "org.apache.commons.lang3.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#hashCode()": ["org.apache.commons.lang3.time.FastDatePrinter#hashCode()"],
    "org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Computable<I, O>,boolean)": [
        "org.apache.commons.lang3.concurrent.Memoizer#compute(I)",
        "org.apache.commons.lang3.concurrent.FutureTasks.run(Callable<V>)",
        "org.apache.commons.lang3.concurrent.Memoizer.<init>()"
    ],
    "org.apache.commons.lang3.time.DurationUtils.accept(FailableBiConsumer<Long, Integer, T extends Throwable>,Duration)": ["org.apache.commons.lang3.time.DurationUtils.getNanosOfMilli(Duration)"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.toVarArgs(Method,Object[])",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getMatchingMethod(Class<?>,String,Class<?>[]...)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(byte[])": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,byte[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte[],Boolean)"
    ],
    "org.apache.commons.lang3.CharSet.getInstance(String[]...)": [
        "org.apache.commons.lang3.CharSet.<staticinit>()",
        "org.apache.commons.lang3.CharSet#CharSet(String[]...)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Object,StringBuffer,FieldPosition)": [
        "org.apache.commons.lang3.time.FastDatePrinter#format(long,StringBuffer)",
        "org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,StringBuffer)",
        "org.apache.commons.lang3.time.FastDatePrinter#format(Date,StringBuffer)",
        "org.apache.commons.lang3.ClassUtils.getName(Object,String)"
    ],
    "org.apache.commons.lang3.StringUtils.isAlphanumericSpace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,String)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String)",
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterString(String)"
    ],
    "org.apache.commons.lang3.CharRange.CharacterIterator#CharacterIterator(CharRange)": ["org.apache.commons.lang3.CharRange.CharacterIterator.<init>()"],
    "org.apache.commons.lang3.text.WordUtils#WordUtils()": ["org.apache.commons.lang3.text.WordUtils.<init>()"],
    "org.apache.commons.lang3.compare.ComparableUtils.gt(A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#greaterThan(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)"
    ],
    "org.apache.commons.lang3.text.StrLookup.noneLookup()": ["org.apache.commons.lang3.text.StrLookup.<staticinit>()"],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)": [
        "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal,int,RoundingMode)",
        "org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(int[])": [
        "org.apache.commons.lang3.ArrayUtils.random()",
        "org.apache.commons.lang3.ArrayUtils.shuffle(int[],Random)"
    ],
    "org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Class<?>,String)": ["org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedName(Class<?>,String)"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Class<?>,String,Object,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object,boolean)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#toString()": ["org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"],
    "org.apache.commons.lang3.compare.ComparableUtils.lt(A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#lessThan(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#NumberStrategy(int)": [
        "org.apache.commons.lang3.time.FastDateParser.Strategy.<init>()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy.<init>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,double[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.ArrayUtils.add(char[],char)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.SystemProperties.getJavaLocaleUseOldIsoCodes()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)": ["org.apache.commons.lang3.function.MethodInvokers.unreflectUnchecked(Method)"],
    "org.apache.commons.lang3.concurrent.BasicThreadFactory#newThread(Runnable)": [
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#initializeThread(Thread)",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#newThread(Runnable)",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#getWrappedFactory()"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(Class<?>[],Executable)": [
        "org.apache.commons.lang3.reflect.MemberUtils.Executable#getParameterTypes()",
        "org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(Class<?>,Class<?>)",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable#isVarArgs()"
    ],
    "org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)": ["org.apache.commons.lang3.math.NumberUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#getResultObject(String)": ["org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#checkName(String)"],
    "org.apache.commons.lang3.StringUtils.isAlphaSpace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#setExcludeFieldNames(String[]...)": ["org.apache.commons.lang3.builder.ReflectionDiffBuilder.toExcludeFieldNames(String[])"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,String,String,char,String)": [
        "org.apache.commons.lang3.text.StrSubstitutor.<init>()",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffix(String)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableResolver(StrLookup<?>)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefix(String)",
        "org.apache.commons.lang3.text.StrSubstitutor#setEscapeChar(char)",
        "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiter(String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#replaceImpl(int,int,int,String,int)": ["org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#close()": [
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#changeState(State)",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()"
    ],
    "org.apache.commons.lang3.stream.Streams.toArray(Class<T>)": ["org.apache.commons.lang3.stream.Streams.ArrayCollector#ArrayCollector(Class<E>)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.<staticinit>()": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#TwoDigitMonthField()"],
    "org.apache.commons.lang3.CharUtils.toString(Character)": ["org.apache.commons.lang3.CharUtils.toString(Character)"],
    "org.apache.commons.lang3.StringUtils.substringAfterLast(String,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)": ["org.apache.commons.lang3.text.StrMatcher.CharMatcher#CharMatcher(char)"],
    "org.apache.commons.lang3.reflect.FieldUtils.getFieldsListWithAnnotation(Class<?>,Class<? extends Annotation>)": ["org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>)"],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#ContextedRuntimeException(String,Throwable)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.startsWithAny(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.stream(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,DiffResult<?>)": [
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder#append(String,Object,Object)",
        "org.apache.commons.lang3.builder.DiffResult#getDiffs()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()",
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.builder.Diff#getFieldName()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(double)": ["org.apache.commons.lang3.text.StrBuilder#append(double)"],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerMaxReqHeaders()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.clone(char[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])"
    ],
    "org.apache.commons.lang3.function.Failable.accept(FailableDoubleConsumer<E extends Throwable>,double)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,CharSequence,int)": ["org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class<? super T>,boolean,boolean)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setAppendStatics(boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.<init>()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setAppendTransients(boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setUpToClass(Class<?>)"
    ],
    "org.apache.commons.lang3.ObjectUtils.Null#readResolve()": ["org.apache.commons.lang3.ObjectUtils.<staticinit>()"],
    "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1.<init>()": [
        "org.apache.commons.lang3.builder.ToStringStyle#setDefaultFullDetail(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setDefaultFullDetail(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseShortClassName(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseShortClassName(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayContentDetail(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayContentDetail(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(long[],long[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(long,long)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendAll(T[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.text.StrBuilder#append(Object)"
    ],
    "org.apache.commons.lang3.concurrent.UncheckedTimeoutException#UncheckedTimeoutException(Throwable)": [
        "org.apache.commons.lang3.concurrent.UncheckedTimeoutException.<init>()",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.remove(float[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.RuntimeEnvironment.inContainer()": [
        "org.apache.commons.lang3.RuntimeEnvironment.inDocker()",
        "org.apache.commons.lang3.RuntimeEnvironment.inPodman()"
    ],
    "org.apache.commons.lang3.time.DateUtils.isSameDay(Date,Date)": [
        "org.apache.commons.lang3.time.DateUtils.isSameDay(Calendar,Calendar)",
        "org.apache.commons.lang3.time.DateUtils.toCalendar(Date)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.isDigits(String)": ["org.apache.commons.lang3.StringUtils.isNumeric(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.toStringArray(Object[],String)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.getClass(String)": ["org.apache.commons.lang3.ClassUtils.getClass(String,boolean)"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask#InitializationTask(ExecutorService)": ["org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadLeft(Object,int,char)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.toString(Object,String)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.StringUtils.repeat(String,String,int)": [
        "org.apache.commons.lang3.StringUtils.removeEnd(String,String)",
        "org.apache.commons.lang3.StringUtils.repeat(String,int)"
    ],
    "org.apache.commons.lang3.compare.ComparableUtils.ge(A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#greaterThanOrEqualTo(A extends Comparable)"
    ],
    "org.apache.commons.lang3.ClassUtils.getSimpleName(Object)": [
        "org.apache.commons.lang3.ClassUtils.getSimpleName(Object,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,long[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>,String,String,char,String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,String,String,char,String)",
        "org.apache.commons.lang3.text.StrLookup.mapLookup(Map<String, V>)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Properties)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Map<String, V>)",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientDisableRetryConnect()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()": ["org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)"],
    "org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean)": ["org.apache.commons.lang3.math.NumberUtils.<staticinit>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)": [
        "org.apache.commons.lang3.Validate.isTrue(boolean,String,double)",
        "org.apache.commons.lang3.reflect.MemberUtils.isStatic(Member)",
        "org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#close()": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nanoTime()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#close()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)"
    ],
    "org.apache.commons.lang3.tuple.MutableTriple#MutableTriple(L,M,R)": [
        "org.apache.commons.lang3.tuple.Triple.<init>()",
        "org.apache.commons.lang3.tuple.MutableTriple.<init>()"
    ],
    "org.apache.commons.lang3.mutable.MutableLong#MutableLong(long)": ["org.apache.commons.lang3.mutable.MutableLong.<init>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isPublic(Member)",
        "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>)",
        "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask#call()": [
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#initialize()"
    ],
    "org.apache.commons.lang3.EnumUtils.asEnum(Class<E extends Enum>)": ["org.apache.commons.lang3.EnumUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,String)": [
        "org.apache.commons.lang3.text.StrBuilder#validateIndex(int)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.typesSatisfyVariables(Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable<?>)",
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(long[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(long[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.ArrayUtils.remove(char[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkIoPermissionsUseCanonicalPath()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Supplier<T>)": ["org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,T,int,int)"],
    "org.apache.commons.lang3.SystemProperties.getUserScript()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder#appendArray(Object,Object,Comparator<?>)": [
        "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[],Comparator<?>)",
        "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[])"
    ],
    "org.apache.commons.lang3.reflect.TypeLiteral#equals(Object)": ["org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)"],
    "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,long[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,long[],Boolean)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,Calendar)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,long[],long[])": [
        "org.apache.commons.lang3.ArrayUtils.toObject(long[])",
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(String,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(String,int,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)",
        "org.apache.commons.lang3.ArrayUtils.clone(byte[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#getTokenArray()": ["org.apache.commons.lang3.text.StrTokenizer#checkTokenized()"],
    "org.apache.commons.lang3.builder.ToStringStyle.register(Object)": ["org.apache.commons.lang3.builder.ToStringStyle.getRegistry()"],
    "org.apache.commons.lang3.ArrayUtils.containsAny(Object[],Object[]...)": [
        "org.apache.commons.lang3.stream.Streams.of(T[]...)",
        "org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)"
    ],
    "org.apache.commons.lang3.StringUtils.split(String,char)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,char,boolean)"],
    "org.apache.commons.lang3.tuple.MutablePair.emptyArray()": ["org.apache.commons.lang3.tuple.MutablePair.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State$State$1.<init>()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<init>()"],
    "org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>,boolean,boolean)": ["org.apache.commons.lang3.reflect.MethodUtils.getAllSuperclassesAndInterfaces(Class<?>)"],
    "org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)",
        "org.apache.commons.lang3.tuple.Pair.of(L,R)",
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlMaxGeneralEntitySizeLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.hashCode(Object)": [
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder#HashCodeBuilder()",
        "org.apache.commons.lang3.builder.HashCodeBuilder#toHashCode()"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int,int)": [
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)",
        "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,char[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char[],Boolean)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field)": ["org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#increment(int)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getEventCount()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getCheckIntervalStart()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlIsStandalone()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.BitField#clearByte(byte)": ["org.apache.commons.lang3.BitField#clear(int)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(double[],double[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(double,double)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(int[])"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.min(double[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)": ["org.apache.commons.lang3.reflect.MemberUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.join(Iterable<?>,String)": [
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.StringUtils.join(Iterable<?>,String)",
        "org.apache.commons.lang3.builder.DiffResult#iterator()"
    ],
    "org.apache.commons.lang3.tuple.ImmutableTriple.of(L,M,R)": [
        "org.apache.commons.lang3.tuple.ImmutableTriple.nullTriple()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#ImmutableTriple(L,M,R)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#replaceFirst(StrMatcher,String)": ["org.apache.commons.lang3.text.StrBuilder#replace(StrMatcher,String,int,int,int)"],
    "org.apache.commons.lang3.ArchUtils.getProcessor(String)": ["org.apache.commons.lang3.ArchUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateFormat#parse(String,ParsePosition)": ["org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition)"],
    "org.apache.commons.lang3.RegExUtils.removeAll(String,Pattern)": [
        "org.apache.commons.lang3.RegExUtils.replaceAll(String,Pattern,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()"
    ],
    "org.apache.commons.lang3.stream.Streams.stream(Stream<T>)": ["org.apache.commons.lang3.stream.Streams.failableStream(Stream<T>)"],
    "org.apache.commons.lang3.exception.ContextedException#getContextLabels()": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextLabels()",
        "org.apache.commons.lang3.exception.ContextedException#getContextLabels()",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextLabels()"
    ],
    "org.apache.commons.lang3.function.FailableIntFunction.nop()": ["org.apache.commons.lang3.function.FailableIntFunction.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short,int)"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class<?>,String,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)"
    ],
    "org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int)": ["org.apache.commons.lang3.Conversion.hexDigitToInt(char)"],
    "org.apache.commons.lang3.ArrayUtils.toObject(boolean[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.setHours(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.ClassUtils.getPackageName(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.getPackageName(String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenExclusive(A extends Comparable,A extends Comparable)": ["org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenOrderedExclusive(A extends Comparable,A extends Comparable)"],
    "org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object,Object,Class<?>)": [
        "org.apache.commons.lang3.builder.Reflection.getUnchecked(Field,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder.unregister(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(Object,Object)",
        "org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder.register(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(Object,Object)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,char[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.time.StopWatch#resume()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)": ["org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)": ["org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)"],
    "org.apache.commons.lang3.time.DateUtils#DateUtils()": ["org.apache.commons.lang3.time.DateUtils.<init>()"],
    "org.apache.commons.lang3.stream.Streams.FailableStream#collect(Collector<? super T, A, R>)": [
        "org.apache.commons.lang3.stream.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.ObjectUtils.identityToString(Object)": [
        "org.apache.commons.lang3.ObjectUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object[],Class<?>[])": ["org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[],Class<?>[])"],
    "org.apache.commons.lang3.SystemProperties.getSunSecurityKrb5Principal()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiter(char)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)"
    ],
    "org.apache.commons.lang3.text.translate.OctalUnescaper.<init>()": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.StampedLockVisitor#StampedLockVisitor(O,StampedLock)": [
        "org.apache.commons.lang3.concurrent.locks.LockingVisitors.StampedLockVisitor.<init>()",
        "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#LockVisitor(O,L,Supplier<Lock>,Supplier<Lock>)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.isParsable(String)": [
        "org.apache.commons.lang3.math.NumberUtils.withDecimalsParsing(String,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.substringAfter(String,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.clone(long[])",
        "org.apache.commons.lang3.ArrayUtils.remove(long[],int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(float)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(float)"
    ],
    "org.apache.commons.lang3.LongRange#LongRange(Long,Long)": ["org.apache.commons.lang3.LongRange.<init>()"],
    "org.apache.commons.lang3.function.FailableToIntBiFunction.nop()": ["org.apache.commons.lang3.function.FailableToIntBiFunction.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getUserVariant()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.escapeXml(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)"],
    "org.apache.commons.lang3.tuple.ImmutableTriple.<staticinit>()": ["org.apache.commons.lang3.tuple.ImmutableTriple#ImmutableTriple(L,M,R)"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#getException(String)": ["org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#checkName(String)"],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(float[],float[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(float,float)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)": ["org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpAuthTunnelingDisabledSchemes()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.StringUtils.containsAny(ToBooleanBiFunction<CharSequence, CharSequence>,CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.getIfBlank(T extends CharSequence,Supplier<T extends CharSequence>)": [
        "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(Object)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#append(CharSequence)",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaxNetSslSessionCacheSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#lastIndexOf(StrMatcher)": ["org.apache.commons.lang3.text.StrBuilder#lastIndexOf(StrMatcher,int)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Double[],double)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#removeLastFieldSeparator(StringBuffer)": ["org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence)"],
    "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadRight(int,int,char)": ["org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadRight(Object,int,char)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(Object[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(Object)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)"],
    "org.apache.commons.lang3.ArrayUtils.addFirst(T[],T)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,T[],T[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(T[],T)"
    ],
    "org.apache.commons.lang3.StringUtils.stripAccents(String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.convertRemainingAccentCharacters(StringBuilder)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,float)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.math.Fraction#negate()": ["org.apache.commons.lang3.math.Fraction#Fraction(int,int)"],
    "org.apache.commons.lang3.StringUtils.containsNone(CharSequence,char[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>,ExecutorService)": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#setExternalExecutor(ExecutorService)",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object,Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendInternal(StringBuffer,String,Object,boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,char)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,char,boolean)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayEnd(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setArrayEnd(String)"],
    "org.apache.commons.lang3.mutable.MutableBoolean#toBoolean()": ["org.apache.commons.lang3.mutable.MutableBoolean#booleanValue()"],
    "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence,Writer)": [
        "org.apache.commons.lang3.text.translate.LookupTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.UnicodeUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.AggregateTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.translate.CodePointTranslator#translate(CharSequence,int,Writer)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.translate.OctalUnescaper#translate(CharSequence,int,Writer)"
    ],
    "org.apache.commons.lang3.ClassLoaderUtils.getSystemURLs()": ["org.apache.commons.lang3.ClassLoaderUtils.getURLs(ClassLoader)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>,String,String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,String,String,char)",
        "org.apache.commons.lang3.text.StrLookup.mapLookup(Map<String, V>)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isArrayIndexValid(T[],int)": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.StringUtils.wrapIfMissing(String,char)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal)": [
        "org.apache.commons.lang3.math.NumberUtils.<staticinit>()",
        "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(BigDecimal,int,RoundingMode)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.builder.DiffResult#toString(ToStringStyle)": [
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object[])",
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.builder.ToStringBuilder#build()",
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle)",
        "org.apache.commons.lang3.builder.DiffResult.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()",
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.builder.Diff#getFieldName()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setUseClassName(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setUseClassName(boolean)"],
    "org.apache.commons.lang3.ClassUtils.getClass(String,boolean)": ["org.apache.commons.lang3.ClassUtils.getClass(ClassLoader,String,boolean)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char,StrMatcher)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()"
    ],
    "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1#getShortClassName(Class<?>)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#GenericArrayTypeImpl(Type)": ["org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl.<init>()"],
    "org.apache.commons.lang3.mutable.MutableLong#compareTo(MutableLong)": ["org.apache.commons.lang3.math.NumberUtils.compare(long,long)"],
    "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.reflect.MethodUtils.getMethodObject(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.ClassUtils.isPublic(Class<?>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Supplier<T>)",
        "org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])"
    ],
    "org.apache.commons.lang3.StringUtils.rightPad(String,int)": ["org.apache.commons.lang3.StringUtils.rightPad(String,int,char)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(Object[],Object)": [
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(Object[],Object,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,long)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long)"],
    "org.apache.commons.lang3.Range.of(T,T,Comparator<T>)": ["org.apache.commons.lang3.Range#Range(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.ArrayUtils.addFirst(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,int[],int[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(int[],int)"
    ],
    "org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(JavaVersion)": [
        "org.apache.commons.lang3.JavaVersion#atLeast(JavaVersion)",
        "org.apache.commons.lang3.SystemUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.FastDateFormat#format(Date)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilLoggingSimpleFormatterFormat()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ThreadUtils.alwaysTruePredicate()": ["org.apache.commons.lang3.ThreadUtils.<staticinit>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Class<? extends Throwable>,int)": ["org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class<? extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.util.FluentBitSet#clone()": ["org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(BitSet)"],
    "org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,CharSequence)": ["org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)"],
    "org.apache.commons.lang3.StringUtils.equalsIgnoreCase(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.ObjectUtils.toString(Object)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.join(Iterator<?>,String)": [
        "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence,Function<Object, String>)",
        "org.apache.commons.lang3.StringUtils.toStringOrEmpty(Object)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.stream.Streams.of(Iterator<E>)",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()"
    ],
    "org.apache.commons.lang3.compare.ComparableUtils#ComparableUtils()": ["org.apache.commons.lang3.compare.ComparableUtils.<init>()"],
    "org.apache.commons.lang3.tuple.Pair#apply(FailableBiFunction<L, R, V, E extends Throwable>)": [
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.ArrayUtils.remove(long[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.text.StrTokenizer.getTSVClone()": [
        "org.apache.commons.lang3.text.StrTokenizer.<staticinit>()",
        "org.apache.commons.lang3.text.StrTokenizer#clone()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(String,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.toObject(float[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaRmiServerRandomIds()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getUserTimezone()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.parseDate(String,String[]...)": ["org.apache.commons.lang3.time.DateUtils.parseDate(String,Locale,String[]...)"],
    "org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"
    ],
    "org.apache.commons.lang3.JavaVersion.maxVersion()": [
        "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVersion(String)",
        "org.apache.commons.lang3.JavaVersion.toFloatVersion(String)"
    ],
    "org.apache.commons.lang3.Validate.notBlank(T extends CharSequence)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)": [
        "org.apache.commons.lang3.builder.IDKey#IDKey(Object)",
        "org.apache.commons.lang3.tuple.Pair.of(L,R)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#isJsonArray(String)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendValueAsString(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#isJsonObject(String)",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(Object,Object)": ["org.apache.commons.lang3.builder.CompareToBuilder#append(Object,Object,Comparator<?>)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldNameValueSeparator(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setFieldNameValueSeparator(String)"],
    "org.apache.commons.lang3.time.FastDateParser#hashCode()": ["org.apache.commons.lang3.time.GmtTimeZone#hashCode()"],
    "org.apache.commons.lang3.BitField#BitField(int)": ["org.apache.commons.lang3.BitField.<init>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.stream.LangCollectors#LangCollectors()": ["org.apache.commons.lang3.stream.LangCollectors.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object,int)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setSummaryObjectEndText(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectEndText(String)"],
    "org.apache.commons.lang3.function.FailableSupplier.nul()": ["org.apache.commons.lang3.function.FailableSupplier.<staticinit>()"],
    "org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char)": ["org.apache.commons.lang3.Conversion.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#equals(Object)": ["org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type)"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(String,Throwable)": ["org.apache.commons.lang3.NotImplementedException#NotImplementedException(String,Throwable,String)"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlMaxXmlNameLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(int[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)"],
    "org.apache.commons.lang3.text.StrBuilder#asReader()": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#StrBuilderReader()"],
    "org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadLeft(int,int,char)": ["org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadLeft(int,int,char)"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ExecutionException)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)",
        "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException(String,Throwable)"
    ],
    "org.apache.commons.lang3.StringUtils.substringBefore(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#replaceImpl(StrMatcher,String,int,int,int)": [
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#replaceImpl(int,int,int,String,int)",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.singleQuoteMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#TimeZoneStrategy(Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateParser.simpleQuote(StringBuilder,String)",
        "org.apache.commons.lang3.time.TimeZones.<staticinit>()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TzInfo#TzInfo(TimeZone,boolean)",
        "org.apache.commons.lang3.time.FastDateParser.<staticinit>()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#createPattern(StringBuilder)",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.<staticinit>()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy.<init>()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.clone(double[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomGraph(int,int)": [
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)",
        "org.apache.commons.lang3.RandomStringUtils.randomGraph(int)"
    ],
    "org.apache.commons.lang3.StringUtils.isWhitespace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(short[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,byte[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T)": ["org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"],
    "org.apache.commons.lang3.tuple.MutablePair#MutablePair()": [
        "org.apache.commons.lang3.tuple.Pair.<init>()",
        "org.apache.commons.lang3.tuple.MutablePair.<init>()"
    ],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()": [
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArraySeparator(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArraySeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#spacer(int)"
    ],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder.Builder#build()": ["org.apache.commons.lang3.builder.ReflectionDiffBuilder#ReflectionDiffBuilder(DiffBuilder<T>,String[])"],
    "org.apache.commons.lang3.StringUtils.join(short[],char)": ["org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)"],
    "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)",
        "org.apache.commons.lang3.concurrent.ConcurrentException.<init>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#CharSetMatcher(char[])": [
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher.<init>()",
        "org.apache.commons.lang3.ArraySorter.sort(char[])",
        "org.apache.commons.lang3.text.StrMatcher#StrMatcher()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.NoMatcher#NoMatcher()": [
        "org.apache.commons.lang3.text.StrMatcher#StrMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher.<init>()"
    ],
    "org.apache.commons.lang3.ThreadUtils.getAllThreadGroups()": [
        "org.apache.commons.lang3.ThreadUtils.findThreadGroups(Predicate<ThreadGroup>)",
        "org.apache.commons.lang3.ThreadUtils.alwaysTruePredicate()"
    ],
    "org.apache.commons.lang3.math.Fraction#toString()": [
        "org.apache.commons.lang3.math.Fraction#getNumerator()",
        "org.apache.commons.lang3.math.Fraction#getDenominator()"
    ],
    "org.apache.commons.lang3.EnumUtils.isValidEnumIgnoreCase(Class<E extends Enum>,String)": ["org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(Class<E extends Enum>,String)"],
    "org.apache.commons.lang3.RandomUtils.nextFloat(float,float)": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVersion(String)": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String,String)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen#isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#getClosingThreshold()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getEventCount()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getCheckIntervalStart()"
    ],
    "org.apache.commons.lang3.concurrent.Memoizer#compute(I)": [
        "org.apache.commons.lang3.concurrent.Memoizer#launderException(Throwable)",
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get()",
        "org.apache.commons.lang3.concurrent.UncheckedFuture#get()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#get()"
    ],
    "org.apache.commons.lang3.tuple.Triple.ofNonNull(L,M,R)": ["org.apache.commons.lang3.tuple.ImmutableTriple.ofNonNull(L,M,R)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getArraySeparator()": ["org.apache.commons.lang3.builder.ToStringStyle#getArraySeparator()"],
    "org.apache.commons.lang3.time.DurationFormatUtils.lexx(String)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.Token#Token(CharSequence,boolean,int)",
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token#increment()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token#getValue()"
    ],
    "org.apache.commons.lang3.BitField#setShort(short)": ["org.apache.commons.lang3.BitField#set(int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlMaxParameterEntitySizeLimit()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.wrap(Class<T>)": ["org.apache.commons.lang3.reflect.TypeUtils.wrap(Type)"],
    "org.apache.commons.lang3.function.FailableDoubleToLongFunction.nop()": ["org.apache.commons.lang3.function.FailableDoubleToLongFunction.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.isAllBlank(CharSequence[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])",
        "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,Calendar)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toLong(String)": ["org.apache.commons.lang3.math.NumberUtils.toLong(String,long)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#applyReadLocked(FailableFunction<O, T, ?>)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockApplyUnlock(Supplier<Lock>,FailableFunction<O, T, ?>)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,float[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,float[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder.builder()": ["org.apache.commons.lang3.builder.DiffBuilder.Builder.<init>()"],
    "org.apache.commons.lang3.time.DurationUtils.getNanosOfMilli(Duration)": ["org.apache.commons.lang3.time.DurationUtils.zeroIfNull(Duration)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(char[],char[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(char,char)"],
    "org.apache.commons.lang3.StringUtils.join(double[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.tuple.MutableTriple#MutableTriple()": [
        "org.apache.commons.lang3.tuple.Triple.<init>()",
        "org.apache.commons.lang3.tuple.MutableTriple.<init>()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkModuleUpgradePath()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,double[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,double[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getSummaryObjectEndText()": ["org.apache.commons.lang3.builder.ToStringStyle#getSummaryObjectEndText()"],
    "org.apache.commons.lang3.function.FailableDoublePredicate.truePredicate()": ["org.apache.commons.lang3.function.FailableDoublePredicate.<staticinit>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(double[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(double)"],
    "org.apache.commons.lang3.StringUtils.isAsciiPrintable(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(short[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(Object[],int,int,int)"],
    "org.apache.commons.lang3.time.FastDateFormat#FastDateFormat(String,TimeZone,Locale,Date)": [
        "org.apache.commons.lang3.time.FastDateFormat.<init>()",
        "org.apache.commons.lang3.time.FastDateParser#FastDateParser(String,TimeZone,Locale,Date)",
        "org.apache.commons.lang3.time.FastDatePrinter#FastDatePrinter(String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#substring(int,int)": ["org.apache.commons.lang3.text.StrBuilder#validateRange(int,int)"],
    "org.apache.commons.lang3.mutable.MutableObject#MutableObject()": ["org.apache.commons.lang3.mutable.MutableObject.<init>()"],
    "org.apache.commons.lang3.time.DurationUtils.toDuration(long,TimeUnit)": ["org.apache.commons.lang3.time.DurationUtils.toChronoUnit(TimeUnit)"],
    "org.apache.commons.lang3.text.StrMatcher.trimMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(Object[],Object,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.DateUtils.parseDateStrictly(String,Locale,String[]...)": ["org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String[],boolean)"],
    "org.apache.commons.lang3.AppendableJoiner.joinI(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,Iterable<T>)": [
        "org.apache.commons.lang3.AppendableJoiner.joinIterable(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,Iterable<T>)",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)": ["org.apache.commons.lang3.text.StrMatcher.noneMatcher()"],
    "org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,String[]...)": ["org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class<?>,String[]...)"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.stream.Streams.FailableStream#allMatch(FailablePredicate<T, ?>)": [
        "org.apache.commons.lang3.function.Failable.asPredicate(FailablePredicate<T, ?>)",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(ExecutionException)": ["org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ExecutionException)"],
    "org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String)": [
        "org.apache.commons.lang3.time.DateFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport()": ["org.apache.commons.lang3.event.EventListenerSupport.<init>()"],
    "org.apache.commons.lang3.ClassUtils.getPrimitiveClass(String)": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#UncheckedFutureImpl(Future<V>)": [
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#AbstractFutureProxy(Future<V>)",
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl.<init>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkNetUnixDomainTmpDir()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ClassUtils.getName(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.getName(Class<?>,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#initialize()": ["org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask#call()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextLabels()": ["org.apache.commons.lang3.exception.DefaultExceptionContext#stream()"],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,B extends Appendable)"],
    "org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map<TypeVariable<?>, Type>,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.wildcardType()",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getOwnerType()",
        "org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(Map<TypeVariable<?>, Type>,Type[])",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getLowerBounds()",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#build()",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getRawType()",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#withUpperBounds(Type[]...)",
        "org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map<TypeVariable<?>, Type>,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#withLowerBounds(Type[]...)",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getUpperBounds()"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)": ["org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,T,int,int)"],
    "org.apache.commons.lang3.time.FastDatePrinter#format(long,StringBuffer)": [
        "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)",
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.reflect.MethodUtils.getMethodObject(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Method)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#open()": [
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#changeState(State)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isUseIdentityHashCode()": ["org.apache.commons.lang3.builder.ToStringStyle#isUseIdentityHashCode()"],
    "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DurationUtils.of(FailableRunnable<E extends Throwable>)": ["org.apache.commons.lang3.time.DurationUtils.of(FailableConsumer<Instant, E extends Throwable>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.getArrayComponentType(Type)": ["org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()"],
    "org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)": ["org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)"],
    "org.apache.commons.lang3.StringUtils.getBytes(String,Charset)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.Charsets.toCharset(Charset)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,int[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#build()": ["org.apache.commons.lang3.builder.CompareToBuilder#toComparison()"],
    "org.apache.commons.lang3.ClassUtils.getCanonicalName(String)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.deleteWhitespace(String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#StrBuilder(String)": [
        "org.apache.commons.lang3.text.StrBuilder.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder.<init>()",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Date,Date,int)": ["org.apache.commons.lang3.time.DateUtils.truncate(Date,int)"],
    "org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable)": ["org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable,boolean)"],
    "org.apache.commons.lang3.CachedRandomBits#CachedRandomBits(int,Random)": ["org.apache.commons.lang3.CachedRandomBits.<init>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTraceList(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)",
        "org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(Throwable)",
        "org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(List<String>,List<String>)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicInitializer.builder()": ["org.apache.commons.lang3.concurrent.AtomicInitializer.Builder.<init>()"],
    "org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)": ["org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)"],
    "org.apache.commons.lang3.SystemUtils.getJavaHome()": ["org.apache.commons.lang3.SystemProperties.getJavaHome()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(float[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(float[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.function.FailableToDoubleFunction.nop()": ["org.apache.commons.lang3.function.FailableToDoubleFunction.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)",
        "org.apache.commons.lang3.ArrayUtils.clone(char[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadPredicate)": [
        "org.apache.commons.lang3.ThreadUtils.getSystemThreadGroup()",
        "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,ThreadPredicate)"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#next()": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#next()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#next()",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#next()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#walkInterfaces(Set<Class<?>>,Class<?>)",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()"
    ],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#MultiBackgroundInitializer(ExecutorService)": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(ExecutorService)",
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.<init>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,double[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,double)"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getCloser()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>,ExecutorService)",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getInitializer()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#DayInWeekField(NumberRule)": ["org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField.<init>()"],
    "org.apache.commons.lang3.Functions.asSupplier(FailableSupplier<O, ?>)": ["org.apache.commons.lang3.Functions.get(FailableSupplier<O, T extends Throwable>)"],
    "org.apache.commons.lang3.time.FastDatePrinter#readObject(ObjectInputStream)": ["org.apache.commons.lang3.time.FastDatePrinter#init()"],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)": ["org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.time.AbstractFormatCache.ArrayKey#ArrayKey(Object[]...)": [
        "org.apache.commons.lang3.time.AbstractFormatCache.ArrayKey.computeHashCode(Object[])",
        "org.apache.commons.lang3.time.AbstractFormatCache.ArrayKey.<init>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setDefaultFullDetail(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setDefaultFullDetail(boolean)"],
    "org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(TimeZone,boolean,int,Locale)": [
        "org.apache.commons.lang3.time.FastDatePrinter.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey#TimeZoneDisplayKey(TimeZone,boolean,int,Locale)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#format(long)": ["org.apache.commons.lang3.time.FastDatePrinter#format(long)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])"],
    "org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(byte[])"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.time.StopWatch#formatSplitTime()": [
        "org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)",
        "org.apache.commons.lang3.time.StopWatch#getSplitTime()"
    ],
    "org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence,boolean)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#TrimMatcher()": [
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher.<init>()",
        "org.apache.commons.lang3.text.StrMatcher#StrMatcher()"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StrBuilder,int,int)": ["org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"],
    "org.apache.commons.lang3.AnnotationUtils.toString(Annotation)": [
        "org.apache.commons.lang3.AnnotationUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)",
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle)",
        "org.apache.commons.lang3.builder.ToStringBuilder#build()",
        "org.apache.commons.lang3.builder.ToStringBuilder#append(String,double)"
    ],
    "org.apache.commons.lang3.ArrayUtils.get(T[],int)": ["org.apache.commons.lang3.ArrayUtils.get(T[],int,T)"],
    "org.apache.commons.lang3.text.StrBuilder#replace(StrMatcher,String,int,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#replaceImpl(StrMatcher,String,int,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#validateRange(int,int)"
    ],
    "org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence[]...)"],
    "org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler#invoke(Object,Method,Object[])": [
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String)",
        "org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler#hasMatchingParametersMethod(Method)",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object[]...)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getMatchingMethod(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[],boolean)",
        "org.apache.commons.lang3.ClassUtils.getAllSuperclasses(Class<?>)",
        "org.apache.commons.lang3.reflect.MethodUtils.distance(Class<?>[],Class<?>[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,float)": ["org.apache.commons.lang3.text.StrBuilder#insert(int,int)"],
    "org.apache.commons.lang3.CharSetUtils.keep(String,String[]...)": [
        "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSetUtils.modify(String,String[],boolean)"
    ],
    "org.apache.commons.lang3.Functions.asRunnable(FailableRunnable<?>)": ["org.apache.commons.lang3.Functions.run(FailableRunnable<T extends Throwable>)"],
    "org.apache.commons.lang3.time.DateUtils.add(Date,int,int)": ["org.apache.commons.lang3.time.DateUtils.validateDateNotNull(Date)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)": ["org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#HashCodeBuilder()": ["org.apache.commons.lang3.builder.HashCodeBuilder.<init>()"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#ReflectionDiffBuilder(DiffBuilder<T>,String[])": ["org.apache.commons.lang3.builder.ReflectionDiffBuilder.<init>()"],
    "org.apache.commons.lang3.mutable.MutableByte#toByte()": ["org.apache.commons.lang3.mutable.MutableByte#byteValue()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,double[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,double[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,char)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,char)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#previousToken()": ["org.apache.commons.lang3.text.StrTokenizer#hasPrevious()"],
    "org.apache.commons.lang3.SystemProperties.getAwtToolkit()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.inclusiveBetween(T,T,Comparable<T>,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle#NoClassNameToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)"
    ],
    "org.apache.commons.lang3.ArchUtils.init_RISCV_64Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)"
    ],
    "org.apache.commons.lang3.RandomStringUtils.random()": ["org.apache.commons.lang3.RandomStringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ThreadUtils.findThreads(Predicate<Thread>)": [
        "org.apache.commons.lang3.ThreadUtils.getSystemThreadGroup()",
        "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,Predicate<Thread>)"
    ],
    "org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int)": ["org.apache.commons.lang3.Conversion.hexDigitToInt(char)"],
    "org.apache.commons.lang3.time.AbstractFormatCache#getDateInstance(int,TimeZone,Locale)": ["org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"],
    "org.apache.commons.lang3.CharUtils.toIntValue(char)": ["org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)"],
    "org.apache.commons.lang3.tuple.ImmutablePair.right(R)": ["org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.wrapAndThrow(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)"],
    "org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence,boolean)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.RegExUtils.removeAll(String,String)": [
        "org.apache.commons.lang3.RegExUtils.replaceAll(String,String,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.Range#isAfterRange(Range<T>)": ["org.apache.commons.lang3.Range#isAfter(T)"],
    "org.apache.commons.lang3.SystemProperties.getJavaNioChannelsSpiSelectorProvider()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientEnablePush()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.Range#isBeforeRange(Range<T>)": ["org.apache.commons.lang3.Range#isBefore(T)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,boolean[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,boolean[],Boolean)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaHome()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeJava(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.builder.EqualsBuilder#build()": ["org.apache.commons.lang3.builder.EqualsBuilder#isEquals()"],
    "org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)"
    ],
    "org.apache.commons.lang3.time.DateUtils.addMilliseconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.CharRange.CharacterIterator#next()": ["org.apache.commons.lang3.CharRange.CharacterIterator#prepareNext()"],
    "org.apache.commons.lang3.time.FastDatePrinter.TextField#TextField(int,String[])": ["org.apache.commons.lang3.time.FastDatePrinter.TextField.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendInternal(StringBuffer,String,Object,boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,double[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,byte[])",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Map<?, ?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Collection<?>)",
        "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Collection<?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle.isRegistered(Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Map<?, ?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,boolean[])",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle.register(Object)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Collection<?>)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,double[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,double[])",
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendCyclicObject(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.mutable.MutableFloat#MutableFloat(String)": ["org.apache.commons.lang3.mutable.MutableFloat.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle#MultiLineToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparatorAtStart(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparatorAtStart(boolean)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlEntityReplacementLimit()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher#StrMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<init>()"],
    "org.apache.commons.lang3.StringUtils.containsWhitespace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)": ["org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayStart(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setArrayStart(String)"],
    "org.apache.commons.lang3.exception.DefaultExceptionContext#getFormattedExceptionMessage(String)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()",
        "org.apache.commons.lang3.tuple.Pair#getKey()",
        "org.apache.commons.lang3.tuple.Pair#getValue()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(boolean)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(boolean)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,short,short)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.function.Failable.rethrow(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)"],
    "org.apache.commons.lang3.tuple.Triple.of(L,M,R)": ["org.apache.commons.lang3.tuple.ImmutableTriple.of(L,M,R)"],
    "org.apache.commons.lang3.StringUtils.containsIgnoreCase(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaSecurityManager()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.toString(Object)": ["org.apache.commons.lang3.ArrayUtils.toString(Object,String)"],
    "org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,boolean,CharSequence[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence,boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(float[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)"],
    "org.apache.commons.lang3.compare.ComparableUtils.le(A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#lessThanOrEqualTo(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,boolean,boolean)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.time.DurationUtils.zeroIfNull(Duration)": ["org.apache.commons.lang3.ObjectUtils.defaultIfNull(T,T)"],
    "org.apache.commons.lang3.text.StrTokenizer#readWithQuotes(char[],int,int,StrBuilder,List<String>,int,int)": [
        "org.apache.commons.lang3.text.StrTokenizer#getDelimiterMatcher()",
        "org.apache.commons.lang3.text.StrBuilder#clear()",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#getIgnoredMatcher()",
        "org.apache.commons.lang3.text.StrTokenizer#getTrimmerMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#isQuote(char[],int,int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrTokenizer#addToken(List<String>,String)",
        "org.apache.commons.lang3.text.StrBuilder#size()",
        "org.apache.commons.lang3.text.StrBuilder#substring(int,int)",
        "org.apache.commons.lang3.text.StrBuilder#append(char)",
        "org.apache.commons.lang3.text.StrBuilder#append(char[],int,int)"
    ],
    "org.apache.commons.lang3.function.FailableIntToDoubleFunction.nop()": ["org.apache.commons.lang3.function.FailableIntToDoubleFunction.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.<staticinit>()": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#TwoDigitYearField()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlMaxOccurLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.leftPad(String,int,char)": [
        "org.apache.commons.lang3.StringUtils.repeat(char,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.leftPad(String,int,char)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,byte[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,byte)"],
    "org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(int[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.LongRange.of(Long,Long)": ["org.apache.commons.lang3.LongRange#LongRange(Long,Long)"],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer()": [
        "org.apache.commons.lang3.function.FailableSupplier.nul()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)",
        "org.apache.commons.lang3.function.FailableConsumer.nop()"
    ],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#AbstractCircuitBreaker()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.<init>()"],
    "org.apache.commons.lang3.time.DateUtils.ceiling(Object,int)": [
        "org.apache.commons.lang3.time.DateUtils.ceiling(Calendar,int)",
        "org.apache.commons.lang3.time.DateUtils.ceiling(Date,int)"
    ],
    "org.apache.commons.lang3.time.TimeZones#TimeZones()": ["org.apache.commons.lang3.time.TimeZones.<init>()"],
    "org.apache.commons.lang3.time.DateUtils.setMinutes(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.stream.Streams.nonNull(E[]...)": [
        "org.apache.commons.lang3.stream.Streams.nonNull(Stream<E>)",
        "org.apache.commons.lang3.stream.Streams.of(T[]...)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.initializeUnchecked(ConcurrentInitializer<T>)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(ConcurrentInitializer<T>)",
        "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException(Throwable)"
    ],
    "org.apache.commons.lang3.Conversion.uuidToByteArray(UUID,byte[],int,int)": ["org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)"],
    "org.apache.commons.lang3.StringUtils.join(byte[],char)": ["org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(float[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,float[],Boolean)"
    ],
    "org.apache.commons.lang3.ClassUtils.getShortCanonicalName(String)": [
        "org.apache.commons.lang3.ClassUtils.getCanonicalName(String)",
        "org.apache.commons.lang3.ClassUtils.getShortClassName(String)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,long[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get(long,TimeUnit)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#get(long,TimeUnit)",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get(long,TimeUnit)",
        "org.apache.commons.lang3.concurrent.UncheckedFuture#get(long,TimeUnit)",
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get(long,TimeUnit)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(Object)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder()",
        "org.apache.commons.lang3.text.StrBuilder#append(Object)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.time.StopWatch.create()": ["org.apache.commons.lang3.time.StopWatch#StopWatch()"],
    "org.apache.commons.lang3.reflect.MemberUtils.Executable#Executable(Method)": ["org.apache.commons.lang3.reflect.MemberUtils.Executable.<init>()"],
    "org.apache.commons.lang3.Streams.FailableStream#anyMatch(FailablePredicate<O, ?>)": [
        "org.apache.commons.lang3.Functions.asPredicate(FailablePredicate<I, ?>)",
        "org.apache.commons.lang3.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.compareConstructorFit(Constructor<?>,Constructor<?>,Class<?>[])": [
        "org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Executable,Executable,Class<?>[])",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Constructor<?>)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.isMatchingConstructor(Constructor<?>,Class<?>[])": [
        "org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class<?>[])",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Constructor<?>)"
    ],
    "org.apache.commons.lang3.mutable.MutableLong#toLong()": ["org.apache.commons.lang3.mutable.MutableLong#longValue()"],
    "org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)": ["org.apache.commons.lang3.math.Fraction#Fraction(int,int)"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,boolean,CharSequence[]...)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,byte[])": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,byte[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte[],Boolean)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int,List<String>)": [
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrSubstitutor#resolveVariable(String,StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(String)",
        "org.apache.commons.lang3.text.StrSubstitutor#getValueDelimiterMatcher()",
        "org.apache.commons.lang3.text.StrSubstitutor#getVariablePrefixMatcher()",
        "org.apache.commons.lang3.text.StrSubstitutor#checkCyclicSubstitution(String,List<String>)",
        "org.apache.commons.lang3.text.StrBuilder#deleteCharAt(int)",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrSubstitutor#isEnableSubstitutionInVariables()",
        "org.apache.commons.lang3.text.StrBuilder#replace(int,int,String)",
        "org.apache.commons.lang3.text.StrSubstitutor#getVariableSuffixMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int,List<String>)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher#isMatch(char[],int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrSubstitutor#getEscapeChar()"
    ],
    "org.apache.commons.lang3.StringUtils.replaceEach(String,String[],String[],boolean,int)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.StringUtils.replaceEach(String,String[],String[],boolean,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(long[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)"],
    "org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.StringUtils.unwrap(String,String)": [
        "org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,char[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.ArrayUtils.toObject(char[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Constructor<?>)": ["org.apache.commons.lang3.reflect.MemberUtils.Executable#Executable(Constructor<?>)"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer#StrBuilderTokenizer()": [
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer.<init>()",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer()"
    ],
    "org.apache.commons.lang3.text.translate.NumericEntityUnescaper#NumericEntityUnescaper(OPTION[]...)": [
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.<init>()",
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class<?>,int)"
    ],
    "org.apache.commons.lang3.RuntimeEnvironment.inPodman()": ["org.apache.commons.lang3.RuntimeEnvironment.containsLine(String,String)"],
    "org.apache.commons.lang3.function.MethodInvokers.asFailableBiFunction(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.StringUtils.compareIgnoreCase(String,String)": ["org.apache.commons.lang3.StringUtils.compareIgnoreCase(String,String,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Character[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.ConstantInitializer#toString()": [
        "org.apache.commons.lang3.concurrent.ConstantInitializer.<staticinit>()",
        "org.apache.commons.lang3.concurrent.ConstantInitializer#getObject()"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(long[],long[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(long,long)"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#isClosed()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#isOpen()"],
    "org.apache.commons.lang3.SystemProperties.getJavaxSecurityAuthUseSubjectCredsOnly()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getCloser()",
        "org.apache.commons.lang3.concurrent.LazyInitializer#LazyInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getInitializer()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Date,StringBuffer)": [
        "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)",
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)"],
    "org.apache.commons.lang3.exception.ExceptionUtils#ExceptionUtils()": ["org.apache.commons.lang3.exception.ExceptionUtils.<init>()"],
    "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.Memoizer#launderException(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)"],
    "org.apache.commons.lang3.StringEscapeUtils.escapeJava(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(String)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(char[])": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(char[])"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)": ["org.apache.commons.lang3.builder.ToStringStyle#appendFieldSeparator(StringBuffer)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.Token#Token(CharSequence,boolean,int)": ["org.apache.commons.lang3.time.DurationFormatUtils.Token.<init>()"],
    "org.apache.commons.lang3.StringEscapeUtils.escapeCsv(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.tuple.ImmutablePair.of(Map.Entry<L, R>)": [
        "org.apache.commons.lang3.tuple.ImmutablePair.nullPair()",
        "org.apache.commons.lang3.tuple.ImmutablePair#ImmutablePair(L,R)",
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(char[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(char[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.stream.Streams.nonNull(Collection<E>)": ["org.apache.commons.lang3.stream.Streams.of(Collection<E>)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#close()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#close()",
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#close()",
        "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException()"
    ],
    "org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getNetworkAddressCacheNegativeTtl()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ThreadUtils.sleepQuietly(Duration)": ["org.apache.commons.lang3.ThreadUtils.sleep(Duration)"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object,boolean)"],
    "org.apache.commons.lang3.StringUtils.trimToEmpty(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlMaxElementDepth()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.arch.Processor#isAarch64()": ["org.apache.commons.lang3.arch.Processor.Type.<staticinit>()"],
    "org.apache.commons.lang3.text.StrTokenizer#setDelimiterString(String)": [
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getUserCountry()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.mutable.MutableDouble#MutableDouble(Number)": ["org.apache.commons.lang3.mutable.MutableDouble.<init>()"],
    "org.apache.commons.lang3.function.MethodInvokers.asBiFunction(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.SerializationException#SerializationException(Throwable)": ["org.apache.commons.lang3.SerializationException.<init>()"],
    "org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(Boolean)": [
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()",
        "org.apache.commons.lang3.BooleanUtils.toString(Boolean,String,String,String)"
    ],
    "org.apache.commons.lang3.AppendableJoiner#AppendableJoiner(CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>)": [
        "org.apache.commons.lang3.AppendableJoiner.nonNull(CharSequence)",
        "org.apache.commons.lang3.AppendableJoiner.<init>()"
    ],
    "org.apache.commons.lang3.SystemUtils.getOsMatches(String,String)": [
        "org.apache.commons.lang3.SystemUtils.isOsMatch(String,String,String,String)",
        "org.apache.commons.lang3.SystemUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.tuple.Pair#toString(String)": [
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()"
    ],
    "org.apache.commons.lang3.StringUtils.join(Object[],String,int,int)": [
        "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence,Function<Object, String>)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.stream.Streams.of(T[]...)"
    ],
    "org.apache.commons.lang3.text.StrLookup.mapLookup(Map<String, V>)": ["org.apache.commons.lang3.text.StrLookup.MapStrLookup#MapStrLookup(Map<String, V>)"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.builder.DiffBuilder.Builder#setStyle(ToStringStyle)": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.replace(String,String,String,int)": ["org.apache.commons.lang3.StringUtils.replace(String,String,String,int,boolean)"],
    "org.apache.commons.lang3.StringUtils.replaceOnce(String,String,String)": ["org.apache.commons.lang3.StringUtils.replace(String,String,String,int)"],
    "org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#forEachRemaining(Consumer<? super T>)": ["org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#next(Consumer<? super T>)"],
    "org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String[],boolean)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateParser#FastDateParser(String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition,Calendar)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,Object,Object)": [
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.builder.DiffBuilder#append(String,Object[],Object[])"
    ],
    "org.apache.commons.lang3.function.FailableBiPredicate.falsePredicate()": ["org.apache.commons.lang3.function.FailableBiPredicate.<staticinit>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#hashCode()": ["org.apache.commons.lang3.builder.HashCodeBuilder#toHashCode()"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int,Object)"],
    "org.apache.commons.lang3.StringUtils.mid(String,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaLocaleProviders()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#CaseInsensitiveTextStrategy(int,Calendar,Locale)": [
        "org.apache.commons.lang3.time.FastDateParser.appendDisplayNames(Calendar,Locale,int,StringBuilder)",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy.<init>()",
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy.<init>()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#createPattern(StringBuilder)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#indexOf(StrMatcher)": ["org.apache.commons.lang3.text.StrBuilder#indexOf(StrMatcher,int)"],
    "org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class<?>,String)": ["org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class<?>,String,boolean)"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()": [
        "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getFuture()",
        "org.apache.commons.lang3.concurrent.UncheckedFuture#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(ExecutionException)",
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#get()"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean)",
        "org.apache.commons.lang3.time.DurationFormatUtils.lexx(String)",
        "org.apache.commons.lang3.time.DateUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth#getMaxWidth(ListIterator<StrategyAndWidth>)": [
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#isNumber()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#isNumber()",
        "org.apache.commons.lang3.time.FastDateParser.Strategy#isNumber()",
        "org.apache.commons.lang3.text.StrTokenizer#hasNext()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#isNumber()"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(boolean[],boolean[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(boolean,boolean)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(boolean[],int,boolean)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.CharSet#CharSet(String[]...)": ["org.apache.commons.lang3.CharSet.<init>()"],
    "org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(String)": [
        "org.apache.commons.lang3.ClassUtils.getPackageName(String)",
        "org.apache.commons.lang3.ClassUtils.getCanonicalName(String)"
    ],
    "org.apache.commons.lang3.ArchUtils.init_RISCV_32Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.text.WordUtils.containsAllWords(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle)": ["org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle,boolean)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatDurationISO(long)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,double)": ["org.apache.commons.lang3.text.StrBuilder#insert(int,int)"],
    "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>,HashSet<Class<?>>)": ["org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>,HashSet<Class<?>>)"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(char[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkTlsNamedGroups()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.capitalize(String)": ["org.apache.commons.lang3.StringUtils.length(CharSequence)"],
    "org.apache.commons.lang3.mutable.MutableFloat#toFloat()": ["org.apache.commons.lang3.mutable.MutableFloat#floatValue()"],
    "org.apache.commons.lang3.text.translate.LookupTranslator#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)"
    ],
    "org.apache.commons.lang3.function.FailablePredicate.falsePredicate()": ["org.apache.commons.lang3.function.FailablePredicate.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#appendAsObjectToString(Object)": [
        "org.apache.commons.lang3.ObjectUtils.identityToString(StringBuffer,Object)",
        "org.apache.commons.lang3.builder.ToStringBuilder#getStringBuffer()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int,int)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable,String[])"],
    "org.apache.commons.lang3.math.Fraction#equals(Object)": [
        "org.apache.commons.lang3.math.Fraction#getNumerator()",
        "org.apache.commons.lang3.math.Fraction#getDenominator()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object,Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object,Boolean)"
    ],
    "org.apache.commons.lang3.stream.Streams.FailableStream#makeTerminated()": ["org.apache.commons.lang3.stream.Streams.FailableStream#assertNotTerminated()"],
    "org.apache.commons.lang3.Validate.matchesPattern(CharSequence,String)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle.isRegistered(Object)": ["org.apache.commons.lang3.builder.ToStringStyle.getRegistry()"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String)": [
        "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.DateFormatUtils.getTimeZone(Calendar)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils#StringEscapeUtils()": ["org.apache.commons.lang3.StringEscapeUtils.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#equals(Object)": ["org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type)"],
    "org.apache.commons.lang3.Validate.notEmpty(T extends CharSequence)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"
    ],
    "org.apache.commons.lang3.mutable.MutableObject#MutableObject(T)": ["org.apache.commons.lang3.mutable.MutableObject.<init>()"],
    "org.apache.commons.lang3.tuple.Pair.ofNonNull(L,R)": ["org.apache.commons.lang3.tuple.ImmutablePair.ofNonNull(L,R)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,double[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double[],Boolean)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#close()": [
        "org.apache.commons.lang3.concurrent.LazyInitializer#get()",
        "org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#isInitialized()",
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#isInitialized()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#get()",
        "org.apache.commons.lang3.concurrent.ConstantInitializer#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#isInitialized()",
        "org.apache.commons.lang3.concurrent.LazyInitializer#isInitialized()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#isInitialized()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSuper(StringBuffer,String)": ["org.apache.commons.lang3.builder.ToStringStyle#appendToString(StringBuffer,String)"],
    "org.apache.commons.lang3.time.StopWatch#nanosToMillis(long)": ["org.apache.commons.lang3.time.StopWatch.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.containsVariableTypeSameParametrizedTypeBound(TypeVariable<?>,ParameterizedType)": ["org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.ArrayUtils.remove(int[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.text.StrBuilder#append(CharBuffer,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.StringUtils.join(Iterator<?>,char)": [
        "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence,Function<Object, String>)",
        "org.apache.commons.lang3.StringUtils.toStringOrEmpty(Object)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.stream.Streams.of(Iterator<E>)",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSorted(byte[])": [
        "org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpAuthDigestCnonceRepeat()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.toCodePoints(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.escapeEcmaScript(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#deleteAll(char)": ["org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.removeAll(float[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.exception.ContextedException#getFirstContextValue(String)": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getFirstContextValue(String)",
        "org.apache.commons.lang3.exception.ContextedException#getFirstContextValue(String)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getFirstContextValue(String)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)": ["org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientRedirectsRetryLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.BooleanUtils.xor(boolean[]...)": ["org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"],
    "org.apache.commons.lang3.builder.ToStringStyle#reflectionAppendArrayDetail(StringBuffer,String,Object)": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int,Object)"],
    "org.apache.commons.lang3.StringEscapeUtils.escapeXml11(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,char,char)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,char)",
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteChar(char)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendNewLine()": [
        "org.apache.commons.lang3.text.StrBuilder#append(double)",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])": ["org.apache.commons.lang3.ArrayUtils.contains(char[],char)"],
    "org.apache.commons.lang3.stream.IntStreams#IntStreams()": ["org.apache.commons.lang3.stream.IntStreams.<init>()"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#getValue(Field)": ["org.apache.commons.lang3.builder.ToStringBuilder#getObject()"],
    "org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>)": ["org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>,boolean,boolean)"],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#getAvailablePermits()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getAcquireCount()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getLimit()"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)"
    ],
    "org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)": ["org.apache.commons.lang3.ObjectUtils.isEmpty(Object)"],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)": ["org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.<init>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class<T extends Throwable>,int,boolean)": ["org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)"],
    "org.apache.commons.lang3.text.StrBuilder#getChars(int,int,char[],int)": ["org.apache.commons.lang3.text.StrBuilder#length()"],
    "org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.toString(byte[],String)": ["org.apache.commons.lang3.Charsets.toCharset(String)"],
    "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#estimateLength()"
    ],
    "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)": [
        "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)",
        "org.apache.commons.lang3.RandomStringUtils.<staticinit>()",
        "org.apache.commons.lang3.CachedRandomBits#nextBits(int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CachedRandomBits#CachedRandomBits(int,Random)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#incrementAndCheckState()": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#incrementAndCheckState(Integer)"],
    "org.apache.commons.lang3.text.StrTokenizer.getTSVInstance(String)": [
        "org.apache.commons.lang3.text.StrTokenizer#reset(String)",
        "org.apache.commons.lang3.text.StrTokenizer.getTSVClone()"
    ],
    "org.apache.commons.lang3.SerializationException#SerializationException()": ["org.apache.commons.lang3.SerializationException.<init>()"],
    "org.apache.commons.lang3.time.StopWatch#suspend()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.splitByCharacterType(String,boolean)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.Functions.asBiFunction(FailableBiFunction<O1, O2, O, ?>)": ["org.apache.commons.lang3.Functions.apply(FailableBiFunction<O1, O2, O, T extends Throwable>,O1,O2)"],
    "org.apache.commons.lang3.Range#intersectionWith(Range<T>)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.Range.of(T,T,Comparator<T>)",
        "org.apache.commons.lang3.Range#equals(Object)",
        "org.apache.commons.lang3.Range#getComparator()",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)",
        "org.apache.commons.lang3.Range#isOverlappedBy(Range<T>)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.StrategyParser#literal()": [
        "org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth#StrategyAndWidth(Strategy,int)",
        "org.apache.commons.lang3.time.FastDateParser.isFormatLetter(char)",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#CopyQuotedStrategy(String)"
    ],
    "org.apache.commons.lang3.SystemUtils.getOsMatchesName(String)": [
        "org.apache.commons.lang3.SystemUtils.isOsNameMatch(String,String)",
        "org.apache.commons.lang3.SystemUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(Throwable,Class<? extends Throwable>)": ["org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class<? extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilConcurrentForkJoinPoolCommonExceptionHandler()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.<staticinit>()": ["org.apache.commons.lang3.time.TimeZones.<staticinit>()"],
    "org.apache.commons.lang3.text.StrMatcher.CharMatcher#CharMatcher(char)": [
        "org.apache.commons.lang3.text.StrMatcher#StrMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher.<init>()"
    ],
    "org.apache.commons.lang3.stream.Streams.FailableStream#FailableStream(Stream<T>)": ["org.apache.commons.lang3.stream.Streams.FailableStream.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(short[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.math.Fraction#invert()": ["org.apache.commons.lang3.math.Fraction#Fraction(int,int)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintStream)": ["org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTraceList(Throwable)"],
    "org.apache.commons.lang3.SystemProperties.getJavaAwtHeadless()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Constructor<T>)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)",
        "org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(Class<?>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#setArraySeparator(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.Streams.stream(Collection<O>)": ["org.apache.commons.lang3.Streams.stream(Collection<O>)"],
    "org.apache.commons.lang3.tuple.Triple#toString()": [
        "org.apache.commons.lang3.tuple.ImmutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getMiddle()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.MutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getMiddle()"
    ],
    "org.apache.commons.lang3.math.Fraction#subtract(Fraction)": ["org.apache.commons.lang3.math.Fraction#addSub(Fraction,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlDtdSupport()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.StrategyParser#letterPattern(char)": [
        "org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth#StrategyAndWidth(Strategy,int)",
        "org.apache.commons.lang3.time.FastDateParser#getStrategy(char,int,Calendar)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#FastDateParser(String,TimeZone,Locale,Date)": [
        "org.apache.commons.lang3.time.FastDateParser.<init>()",
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateParser#init(Calendar)",
        "org.apache.commons.lang3.time.FastDateParser.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.Fraction.getFraction(double)": ["org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)"],
    "org.apache.commons.lang3.AppendableJoiner#joinA(A extends Appendable,T[]...)": ["org.apache.commons.lang3.AppendableJoiner.joinA(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[]...)"],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#tryAcquire()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#acquirePermit()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#prepareAcquire()"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setExcludeFieldNames(String[]...)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Object[])",
        "org.apache.commons.lang3.ArraySorter.sort(T[])"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#readArgumentIndex(String,ParsePosition)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#next(ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#seekNonWs(String,ParsePosition)"
    ],
    "org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence,int)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Function<I, O>,boolean)": [
        "org.apache.commons.lang3.concurrent.FutureTasks.run(Callable<V>)",
        "org.apache.commons.lang3.concurrent.Memoizer.<init>()"
    ],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#AtomicSafeInitializer()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.<init>()"
    ],
    "org.apache.commons.lang3.math.NumberUtils#NumberUtils()": ["org.apache.commons.lang3.math.NumberUtils.<init>()"],
    "org.apache.commons.lang3.text.WordUtils.wrap(String,int)": ["org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean)"],
    "org.apache.commons.lang3.builder.ToStringStyle#setArrayStart(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateParser#readObject(ObjectInputStream)": ["org.apache.commons.lang3.time.FastDateParser#init(Calendar)"],
    "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder.<init>()": ["org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder.<init>()"],
    "org.apache.commons.lang3.LocaleUtils.parseLocale(String)": [
        "org.apache.commons.lang3.LocaleUtils.isISO3166CountryCode(String)",
        "org.apache.commons.lang3.LocaleUtils.<staticinit>()",
        "org.apache.commons.lang3.LocaleUtils.isNumericAreaCode(String)",
        "org.apache.commons.lang3.LocaleUtils.isISO639LanguageCode(String)"
    ],
    "org.apache.commons.lang3.concurrent.FutureTasks#FutureTasks()": ["org.apache.commons.lang3.concurrent.FutureTasks.<init>()"],
    "org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.function.Failable.getAsLong(FailableLongSupplier<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.CharSequenceUtils#CharSequenceUtils()": ["org.apache.commons.lang3.CharSequenceUtils.<init>()"],
    "org.apache.commons.lang3.DoubleRange#DoubleRange(Double,Double)": ["org.apache.commons.lang3.DoubleRange.<init>()"],
    "org.apache.commons.lang3.Streams.toArray(Class<O>)": ["org.apache.commons.lang3.Streams.ArrayCollector#ArrayCollector(Class<O>)"],
    "org.apache.commons.lang3.function.MethodInvokers.asFailableBiConsumer(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.Range.between(T,T,Comparator<T>)": ["org.apache.commons.lang3.Range#Range(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#initialize()": [
        "org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)",
        "org.apache.commons.lang3.concurrent.LazyInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#getTypedException(Exception)",
        "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getTypedException(Exception)",
        "org.apache.commons.lang3.concurrent.LazyInitializer#getTypedException(Exception)",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#get()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#getTypedException(Exception)",
        "org.apache.commons.lang3.concurrent.ConstantInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#getTypedException(Exception)",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()"
    ],
    "org.apache.commons.lang3.StringUtils.join(boolean[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String,Locale)": [
        "org.apache.commons.lang3.time.DateFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getSummaryObjectStartText()": ["org.apache.commons.lang3.builder.ToStringStyle#getSummaryObjectStartText()"],
    "org.apache.commons.lang3.StringUtils.join(Object[],char)": ["org.apache.commons.lang3.StringUtils.join(Object[],char,int,int)"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlOverrideDefaultParser()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(long)": ["org.apache.commons.lang3.text.StrBuilder#append(double)"],
    "org.apache.commons.lang3.stream.Streams.instancesOf(Class<? super E>,Stream<?>)": ["org.apache.commons.lang3.stream.Streams.of(Stream<E>)"],
    "org.apache.commons.lang3.LocaleUtils.availableLocaleList()": ["org.apache.commons.lang3.LocaleUtils.SyncAvoid.<staticinit>()"],
    "org.apache.commons.lang3.function.Failable.getAsDouble(FailableDoubleSupplier<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.ClassUtils.getPackageName(String)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.tuple.ImmutablePair.emptyArray()": ["org.apache.commons.lang3.tuple.ImmutablePair.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getHttpProxyPort()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.function.MethodInvokers.asFailableSupplier(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Map<String, ? extends FormatFactory>)": ["org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Locale,Map<String, ? extends FormatFactory>)"],
    "org.apache.commons.lang3.mutable.MutableShort#MutableShort(String)": ["org.apache.commons.lang3.mutable.MutableShort.<init>()"],
    "org.apache.commons.lang3.concurrent.AtomicInitializer.<init>()": ["org.apache.commons.lang3.concurrent.AtomicInitializer#getNoInit()"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#setExternalExecutor(ExecutorService)": ["org.apache.commons.lang3.builder.AbstractSupplier#asThis()"],
    "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException(String,Throwable)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)",
        "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaClassVersion()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#MutableInt(String)": ["org.apache.commons.lang3.mutable.MutableInt.<init>()"],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)": ["org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)"],
    "org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)": ["org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)"],
    "org.apache.commons.lang3.SystemProperties.getProperty(String)": [
        "org.apache.commons.lang3.function.Suppliers.nul()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier<String>)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadsByName(String)": [
        "org.apache.commons.lang3.ThreadUtils.predicateThread(String)",
        "org.apache.commons.lang3.ThreadUtils.findThreads(Predicate<Thread>)"
    ],
    "org.apache.commons.lang3.StringUtils.reverseDelimited(String,char)": [
        "org.apache.commons.lang3.StringUtils.split(String,char)",
        "org.apache.commons.lang3.ArrayUtils.reverse(Object[])",
        "org.apache.commons.lang3.StringUtils.join(Object[],char)"
    ],
    "org.apache.commons.lang3.text.FormattableUtils.toString(Formattable)": ["org.apache.commons.lang3.text.FormattableUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.replace(String,String,String,int,boolean)": [
        "org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.NumberRange#NumberRange(N extends Number,N extends Number,Comparator<N extends Number>)": [
        "org.apache.commons.lang3.NumberRange.<init>()",
        "org.apache.commons.lang3.Range#Range(T,T,Comparator<T>)"
    ],
    "org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(Class<?>[]...)": ["org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(Class<?>)"],
    "org.apache.commons.lang3.ThreadUtils.sleep(Duration)": ["org.apache.commons.lang3.time.DurationUtils.accept(FailableBiConsumer<Long, Integer, T extends Throwable>,Duration)"],
    "org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String)": ["org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Long[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#CallableBackgroundInitializer(Callable<T>,ExecutorService)": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(ExecutorService)",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#checkCallable(Callable<T>)"
    ],
    "org.apache.commons.lang3.function.Failable.asRunnable(FailableRunnable<?>)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.text.StrTokenizer#clone()": ["org.apache.commons.lang3.text.StrTokenizer#cloneReset()"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientConnectionPoolSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.function.Failable.getAsInt(FailableIntSupplier<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.time.DateUtils.DateIterator#DateIterator(Calendar,Calendar)": ["org.apache.commons.lang3.time.DateUtils.DateIterator.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.text.StrBuilder#deleteAll(String)": [
        "org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)",
        "org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(byte[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Locale)": ["org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Locale,Map<String, ? extends FormatFactory>)"],
    "org.apache.commons.lang3.Range#isBefore(T)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#getPattern()": ["org.apache.commons.lang3.time.FastDatePrinter#getPattern()"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,float[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,float)"],
    "org.apache.commons.lang3.ArrayUtils.addFirst(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,float[],float[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(float[],float)"
    ],
    "org.apache.commons.lang3.arch.Processor.Arch#Arch(String)": ["org.apache.commons.lang3.arch.Processor.Arch.<init>()"],
    "org.apache.commons.lang3.text.StrTokenizer#reset(String)": ["org.apache.commons.lang3.text.StrTokenizer#reset()"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)",
        "org.apache.commons.lang3.reflect.MemberUtils.isStatic(Member)"
    ],
    "org.apache.commons.lang3.RandomUtils.nextDouble(double,double)": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.RandomUtils.nextInt()": ["org.apache.commons.lang3.RandomUtils.nextInt(int,int)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Class<? extends Throwable>)": ["org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class<? extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey#hashCode()": ["org.apache.commons.lang3.time.GmtTimeZone#hashCode()"],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,GenericArrayType,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#equals(Object)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type)"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class<? super T>,boolean,boolean,boolean)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setAppendStatics(boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.<init>()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setAppendTransients(boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setUpToClass(Class<?>)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setExcludeNullValues(boolean)"
    ],
    "org.apache.commons.lang3.DoubleRange.of(Double,Double)": ["org.apache.commons.lang3.DoubleRange#DoubleRange(Double,Double)"],
    "org.apache.commons.lang3.Range#contains(T)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#substring(int)": ["org.apache.commons.lang3.text.StrBuilder#substring(int,int)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder.register(Object)": [
        "org.apache.commons.lang3.builder.IDKey#IDKey(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.Validate.isInstanceOf(Class<?>,Object)": [
        "org.apache.commons.lang3.Validate.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getName(Object,String)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.isMatchingMethod(Method,Class<?>[])": [
        "org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class<?>[])",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Method)"
    ],
    "org.apache.commons.lang3.builder.Diff#Diff(String,Type)": [
        "org.apache.commons.lang3.builder.Diff.<init>()",
        "org.apache.commons.lang3.tuple.Pair.<init>()"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(Field,Object,boolean)"],
    "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#WildcardTypeImpl(Type[],Type[])": [
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl.<init>()",
        "org.apache.commons.lang3.ObjectUtils.defaultIfNull(T,T)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#FastDateFormat(String,TimeZone,Locale)": ["org.apache.commons.lang3.time.FastDateFormat#FastDateFormat(String,TimeZone,Locale,Date)"],
    "org.apache.commons.lang3.text.translate.OctalUnescaper#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.translate.OctalUnescaper#isOctalDigit(char)",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.translate.OctalUnescaper#isZeroToThree(char)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(Object[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.StringUtils.join(int[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.LocaleUtils.isAvailableLocale(Locale)": ["org.apache.commons.lang3.LocaleUtils.availableLocaleSet()"],
    "org.apache.commons.lang3.function.Failable.test(FailablePredicate<T, E extends Throwable>,T)": ["org.apache.commons.lang3.function.Failable.getAsBoolean(FailableBooleanSupplier<E extends Throwable>)"],
    "org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(Class<?>,Object,Object)": ["org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(Annotation[],Annotation[])"],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.SystemProperties.getSocksProxyVersion()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.unwrap(String,char)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.SystemProperties.getNetworkAddressCacheTtl()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,float[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.ArchUtils#ArchUtils()": ["org.apache.commons.lang3.ArchUtils.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getHttpMaxRedirects()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.CircuitBreakingException#CircuitBreakingException(String)": ["org.apache.commons.lang3.concurrent.CircuitBreakingException.<init>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setSizeEndText(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setSizeEndText(String)"],
    "org.apache.commons.lang3.ArrayUtils.insert(int,char[],char[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(char[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])"
    ],
    "org.apache.commons.lang3.BooleanUtils.xor(Boolean[]...)": [
        "org.apache.commons.lang3.BooleanUtils.xor(boolean[]...)",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])",
        "org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendClassName(StringBuffer,Object)": [
        "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1#getShortClassName(Class<?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#getShortClassName(Class<?>)",
        "org.apache.commons.lang3.builder.ToStringStyle.register(Object)"
    ],
    "org.apache.commons.lang3.function.Failable.apply(FailableFunction<T, R, E extends Throwable>,T)": ["org.apache.commons.lang3.function.Failable.get(FailableSupplier<T, E extends Throwable>)"],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"],
    "org.apache.commons.lang3.time.DateUtils.addDays(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.time.CalendarUtils.getInstance(Locale)": ["org.apache.commons.lang3.time.CalendarUtils#CalendarUtils(Calendar,Locale)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.stateStrategy(State)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object)": ["org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)"],
    "org.apache.commons.lang3.tuple.MutableTriple.emptyArray()": ["org.apache.commons.lang3.tuple.MutableTriple.<staticinit>()"],
    "org.apache.commons.lang3.SerializationUtils.deserialize(byte[])": ["org.apache.commons.lang3.SerializationUtils.deserialize(InputStream)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getLeft()": ["org.apache.commons.lang3.builder.DiffBuilder#getLeft()"],
    "org.apache.commons.lang3.function.Failable.tryWithResources(FailableRunnable<? extends Throwable>,FailableConsumer<Throwable, ? extends Throwable>,FailableRunnable<? extends Throwable>[]...)": [
        "org.apache.commons.lang3.stream.Streams.of(T[]...)",
        "org.apache.commons.lang3.function.Failable.rethrow(Throwable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#ConstantFuture(T)": ["org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#StrBuilder()": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#cloneReset()": ["org.apache.commons.lang3.text.StrTokenizer#reset()"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#applyPattern(String)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#seekNonWs(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#next(ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#appendQuotedString(String,ParsePosition,StringBuilder)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#insertFormats(String,ArrayList<String>)",
        "org.apache.commons.lang3.Validate.isTrue(boolean)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#readArgumentIndex(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#containsElements(Collection<?>)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#parseFormatDescription(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#getFormat(String)"
    ],
    "org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int)": ["org.apache.commons.lang3.Conversion.intToHexDigit(int)"],
    "org.apache.commons.lang3.text.StrBuilder#appendWithSeparators(Iterator<?>,String)": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.stampedLockVisitor(O)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.StampedLockVisitor#StampedLockVisitor(O,StampedLock)"],
    "org.apache.commons.lang3.SystemUtils.getUserDir()": ["org.apache.commons.lang3.SystemProperties.getUserDir()"],
    "org.apache.commons.lang3.StringEscapeUtils.escapeXml10(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)": ["org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"],
    "org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)": [
        "org.apache.commons.lang3.ObjectUtils.defaultIfNull(T,T)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(int[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int)": ["org.apache.commons.lang3.Conversion.hexDigitToInt(char)"],
    "org.apache.commons.lang3.time.GmtTimeZone#GmtTimeZone(boolean,int,int)": [
        "org.apache.commons.lang3.time.GmtTimeZone.twoDigits(StringBuilder,int)",
        "org.apache.commons.lang3.time.GmtTimeZone.<init>()",
        "org.apache.commons.lang3.time.TimeZones.<staticinit>()",
        "org.apache.commons.lang3.time.GmtTimeZone.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.indexOfDifference(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#TwelveHourField(NumberRule)": ["org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(char)": [
        "org.apache.commons.lang3.text.StrBuilder#append(char)",
        "org.apache.commons.lang3.text.StrBuilder#isNotEmpty()"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(int[])",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.clone(int[])"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#hasNext()": ["org.apache.commons.lang3.text.StrTokenizer#checkTokenized()"],
    "org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#ProxyInvocationHandler()": ["org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#ProxyInvocationHandler(FailableConsumer<Throwable, IllegalAccessException>)"],
    "org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.StringUtils.leftPad(String,int)": ["org.apache.commons.lang3.StringUtils.leftPad(String,int,char)"],
    "org.apache.commons.lang3.RandomStringUtils.randomPrint(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)"],
    "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenOrdered(A extends Comparable,A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#lessThanOrEqualTo(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#greaterThanOrEqualTo(A extends Comparable)"
    ],
    "org.apache.commons.lang3.StringUtils.swapCase(String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence,Writer)"
    ],
    "org.apache.commons.lang3.function.FailableDoubleConsumer.nop()": ["org.apache.commons.lang3.function.FailableDoubleConsumer.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.toCanonicalName(String)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.deleteWhitespace(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.Range.is(T extends Comparable)": ["org.apache.commons.lang3.Range.of(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#accept(Class<?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(Object,ToStringStyle)",
        "org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(Class<?>)"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(short[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(short)"],
    "org.apache.commons.lang3.SystemProperties.getPathSeparator()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(TimeZone,boolean,int,Locale)"],
    "org.apache.commons.lang3.mutable.MutableLong#equals(Object)": ["org.apache.commons.lang3.mutable.MutableLong#longValue()"],
    "org.apache.commons.lang3.exception.ContextedException#getContextEntries()": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextEntries()",
        "org.apache.commons.lang3.exception.ContextedException#getContextEntries()",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextEntries()"
    ],
    "org.apache.commons.lang3.mutable.MutableLong#MutableLong()": ["org.apache.commons.lang3.mutable.MutableLong.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.SystemProperties.getJavaVmName()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientBufSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#ExtendedMessageFormat(String,Locale,Map<String, ? extends FormatFactory>)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#applyPattern(String)",
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<init>()",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomAscii(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)"],
    "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaRuntimeVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.stream.Streams.ArrayCollector#finisher()": ["org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)"],
    "org.apache.commons.lang3.math.NumberUtils.isCreatable(String)": [
        "org.apache.commons.lang3.StringUtils.contains(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler#EventBindingInvocationHandler(Object,String,String[])": ["org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler.<init>()"],
    "org.apache.commons.lang3.Functions.stream(Stream<O>)": ["org.apache.commons.lang3.Streams.FailableStream#FailableStream(Stream<O>)"],
    "org.apache.commons.lang3.SystemProperties.getHttpProxyHost()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.DurationUtils.toMillisInt(Duration)": [
        "org.apache.commons.lang3.time.DurationUtils.<staticinit>()",
        "org.apache.commons.lang3.Range#fit(T)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaxRmiSslClientEnabledProtocols()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>)": [
        "org.apache.commons.lang3.BooleanUtils.toInteger(boolean)",
        "org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.Validate#Validate()": ["org.apache.commons.lang3.Validate.<init>()"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getMessage()": ["org.apache.commons.lang3.exception.ContextedRuntimeException#getFormattedExceptionMessage(String)"],
    "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper#JavaUnicodeEscaper(int,int,boolean)": [
        "org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper(int,int,boolean)",
        "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.<init>()"
    ],
    "org.apache.commons.lang3.tuple.MutableTriple.ofNonNull(L,M,R)": ["org.apache.commons.lang3.tuple.MutableTriple.of(L,M,R)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(float[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(float)"],
    "org.apache.commons.lang3.concurrent.UncheckedExecutionException#UncheckedExecutionException(Throwable)": [
        "org.apache.commons.lang3.concurrent.UncheckedExecutionException.<init>()",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.addFirst(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,byte[],byte[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(byte[],byte)"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInDays(Date,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String)": ["org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getFtpProxyHost()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(Object,ToStringStyle,StringBuffer)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.<init>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVmVersion()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#midString(int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.DiffBuilder.SDiff#SDiff(String,Supplier<T>,Supplier<T>,Class<T>)": [
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff.<init>()",
        "org.apache.commons.lang3.builder.Diff#Diff(String,Type)"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#isInitialized()": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#isDone()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#isDone()",
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get()",
        "org.apache.commons.lang3.concurrent.UncheckedFuture#get()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#get()"
    ],
    "org.apache.commons.lang3.SystemProperties.getLong(String,LongSupplier)": ["org.apache.commons.lang3.SystemProperties.getProperty(String)"],
    "org.apache.commons.lang3.time.FastTimeZone#FastTimeZone()": ["org.apache.commons.lang3.time.FastTimeZone.<init>()"],
    "org.apache.commons.lang3.StringUtils.replaceAll(String,String,String)": ["org.apache.commons.lang3.RegExUtils.replaceAll(String,String,String)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.math.Fraction#multiplyBy(Fraction)": [
        "org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)",
        "org.apache.commons.lang3.math.Fraction.<staticinit>()",
        "org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)",
        "org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)",
        "org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientSendBufferSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.prependIfMissingIgnoreCase(String,CharSequence,CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.prependIfMissing(String,CharSequence,boolean,CharSequence[]...)"],
    "org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Method)",
        "org.apache.commons.lang3.reflect.MethodUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.MethodUtils.getMethodObject(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.reflect.MemberUtils.isMatchingMethod(Method,Class<?>[])",
        "org.apache.commons.lang3.reflect.MemberUtils.compareMethodFit(Method,Method,Class<?>[])",
        "org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)",
        "org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)"
    ],
    "org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#getTypedException(Exception)": ["org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)"],
    "org.apache.commons.lang3.ArrayUtils.remove(boolean[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkNetUrlClassPathShowIgnoredClassPathEntries()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"],
    "org.apache.commons.lang3.SystemProperties.getJdkJndiLdapObjectFactoriesFilter()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#tokenize(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder()",
        "org.apache.commons.lang3.text.StrTokenizer#addToken(List<String>,String)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.text.StrTokenizer#readNextToken(char[],int,int,StrBuilder,List<String>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils#ConstructorUtils()": ["org.apache.commons.lang3.reflect.ConstructorUtils.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#WildcardTypeBuilder()": ["org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object,int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkSerialFilter()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class<?>[])": [
        "org.apache.commons.lang3.reflect.MemberUtils.Executable#getParameterTypes()",
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>,boolean)",
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[],boolean)",
        "org.apache.commons.lang3.reflect.MemberUtils.Executable#isVarArgs()"
    ],
    "org.apache.commons.lang3.StringUtils.left(String,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String)": ["org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"],
    "org.apache.commons.lang3.SystemProperties.getUserExtensions()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#size()": ["org.apache.commons.lang3.text.StrTokenizer#checkTokenized()"],
    "org.apache.commons.lang3.SystemProperties.getJavaxRmiSslClientEnabledCipherSuites()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.BooleanUtils.toStringOnOff(Boolean)": [
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()",
        "org.apache.commons.lang3.BooleanUtils.toString(Boolean,String,String,String)"
    ],
    "org.apache.commons.lang3.StringUtils.replaceOnceIgnoreCase(String,String,String)": ["org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String,int)"],
    "org.apache.commons.lang3.Range#isNaturalOrdering()": ["org.apache.commons.lang3.Range.ComparableComparator.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(boolean[])"],
    "org.apache.commons.lang3.text.StrTokenizer#setQuoteChar(char)": [
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)",
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteMatcher(StrMatcher)"
    ],
    "org.apache.commons.lang3.tuple.Triple#compareTo(Triple<L, M, R>)": [
        "org.apache.commons.lang3.tuple.MutableTriple#getMiddle()",
        "org.apache.commons.lang3.tuple.MutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getMiddle()",
        "org.apache.commons.lang3.builder.CompareToBuilder#CompareToBuilder()",
        "org.apache.commons.lang3.builder.CompareToBuilder#toComparison()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.MutableTriple#getLeft()",
        "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[])"
    ],
    "org.apache.commons.lang3.Functions.accept(FailableBiConsumer<O1, O2, T extends Throwable>,O1,O2)": ["org.apache.commons.lang3.Functions.run(FailableRunnable<T extends Throwable>)"],
    "org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()": ["org.apache.commons.lang3.builder.EqualsBuilder.<staticinit>()"],
    "org.apache.commons.lang3.text.StrTokenizer.getCSVInstance()": ["org.apache.commons.lang3.text.StrTokenizer.getCSVClone()"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.CompositeFormat#CompositeFormat(Format,Format)": ["org.apache.commons.lang3.text.CompositeFormat.<init>()"],
    "org.apache.commons.lang3.concurrent.LazyInitializer.Builder.<init>()": ["org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder.<init>()"],
    "org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroupPredicate)": [
        "org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)",
        "org.apache.commons.lang3.ThreadUtils.getSystemThreadGroup()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.<staticinit>()": ["org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#UnpaddedMonthField()"],
    "org.apache.commons.lang3.ArrayUtils.isSorted(T extends Comparable[])": ["org.apache.commons.lang3.ArrayUtils.isSorted(T[],Comparator<T>)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getRight()": ["org.apache.commons.lang3.builder.DiffBuilder#getRight()"],
    "org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence)": ["org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence,int)"],
    "org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,char[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.SystemUtils.<staticinit>()": [
        "org.apache.commons.lang3.SystemProperties.getJavaIoTmpdir()",
        "org.apache.commons.lang3.SystemProperties.getUserDir()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmName()",
        "org.apache.commons.lang3.SystemProperties.getFileSeparator()",
        "org.apache.commons.lang3.SystemProperties.getUserHome()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmInfo()",
        "org.apache.commons.lang3.SystemProperties.getJavaAwtGraphicsenv()",
        "org.apache.commons.lang3.SystemUtils.getJavaVersionMatches(String)",
        "org.apache.commons.lang3.SystemProperties.getOsArch()",
        "org.apache.commons.lang3.SystemProperties.getOsVersion()",
        "org.apache.commons.lang3.SystemProperties.getJavaVendorUrl()",
        "org.apache.commons.lang3.SystemProperties.getJavaAwtFonts()",
        "org.apache.commons.lang3.SystemProperties.getJavaRuntimeVersion()",
        "org.apache.commons.lang3.SystemProperties.getJavaRuntimeName()",
        "org.apache.commons.lang3.SystemProperties.getJavaCompiler()",
        "org.apache.commons.lang3.SystemProperties.getUserName()",
        "org.apache.commons.lang3.SystemProperties.getJavaExtDirs()",
        "org.apache.commons.lang3.SystemProperties.getJavaClassPath()",
        "org.apache.commons.lang3.JavaVersion.get(String)",
        "org.apache.commons.lang3.SystemProperties.getUserLanguage()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationVersion()",
        "org.apache.commons.lang3.SystemProperties.getJavaVersion()",
        "org.apache.commons.lang3.SystemUtils.getOsMatches(String,String)",
        "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationVendor()",
        "org.apache.commons.lang3.SystemProperties.getJavaVendor()",
        "org.apache.commons.lang3.SystemProperties.getJavaAwtPrinterjob()",
        "org.apache.commons.lang3.SystemUtils.getOsMatchesName(String)",
        "org.apache.commons.lang3.SystemProperties.getJavaEndorsedDirs()",
        "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVendor()",
        "org.apache.commons.lang3.SystemProperties.getUserTimezone()",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getAwtToolkit()",
        "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVersion()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmVersion()",
        "org.apache.commons.lang3.SystemProperties.getLineSeparator()",
        "org.apache.commons.lang3.SystemProperties.getFileEncoding()",
        "org.apache.commons.lang3.SystemProperties.getJavaLibraryPath()",
        "org.apache.commons.lang3.SystemProperties.getJavaClassVersion()",
        "org.apache.commons.lang3.SystemProperties.getJavaAwtHeadless()",
        "org.apache.commons.lang3.SystemProperties.getJavaSpecificationName()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.getOsName()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmVendor()",
        "org.apache.commons.lang3.SystemProperties.getPathSeparator()",
        "org.apache.commons.lang3.SystemProperties.getJavaUtilPrefsPreferencesFactory()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier<String>)",
        "org.apache.commons.lang3.SystemProperties.getJavaHome()",
        "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationName()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(Throwable,Class<? extends Throwable>,int)": ["org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class<? extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.event.EventUtils#EventUtils()": ["org.apache.commons.lang3.event.EventUtils.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.addAll(short[],short[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(short[])"],
    "org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(Map<TypeVariable<?>, Type>,Type[])": [
        "org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map<TypeVariable<?>, Type>,Type)",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.StringUtils.appendIfMissingIgnoreCase(String,CharSequence,CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,boolean,CharSequence[]...)"],
    "org.apache.commons.lang3.time.FastDateFormat#applyRules(Calendar,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,StringBuffer)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(char)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char)"],
    "org.apache.commons.lang3.StringUtils.isAllEmpty(CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.exception.ContextedException#getFormattedExceptionMessage(String)": [
        "org.apache.commons.lang3.exception.ContextedException#getFormattedExceptionMessage(String)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getFormattedExceptionMessage(String)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getFormattedExceptionMessage(String)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#readObject(ObjectInputStream)": [
        "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])",
        "org.apache.commons.lang3.event.EventListenerSupport#initializeTransientFields(Class<L>,ClassLoader)"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer#tokenize(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#size()",
        "org.apache.commons.lang3.text.StrTokenizer#tokenize(char[],int,int)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.StrategyParser#StrategyParser(Calendar)": ["org.apache.commons.lang3.time.FastDateParser.StrategyParser.<init>()"],
    "org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)"
    ],
    "org.apache.commons.lang3.tuple.Pair#getValue()": [
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors#LockingVisitors()": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.<init>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(float)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float)"],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.<staticinit>()": ["org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#Iso8601_Rule(int)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float,int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toObject(long[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder.<init>()": [
        "org.apache.commons.lang3.builder.AbstractSupplier.<init>()",
        "org.apache.commons.lang3.function.FailableConsumer.nop()",
        "org.apache.commons.lang3.function.FailableSupplier.nul()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[],boolean)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.ObjectUtils.median(Comparator<T>,T[]...)": ["org.apache.commons.lang3.Validate.noNullElements(T[])"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#appendFields(Class<?>)": [
        "org.apache.commons.lang3.builder.DiffBuilder#append(String,Object,Object)",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#readField(Field,Object)",
        "org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>)",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getRight()",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#accept(Field)",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getLeft()"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)": ["org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.time.StopWatch#getNanoTime()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(String)": ["org.apache.commons.lang3.NotImplementedException#NotImplementedException(String,String)"],
    "org.apache.commons.lang3.time.FastDateParser.getCache(int)": ["org.apache.commons.lang3.time.FastDateParser.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils#ConcurrentUtils()": ["org.apache.commons.lang3.concurrent.ConcurrentUtils.<init>()"],
    "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()": [
        "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.<init>()",
        "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE()",
        "org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()",
        "org.apache.commons.lang3.text.translate.UnicodeUnescaper.<init>()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.<init>()",
        "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_ESCAPE()",
        "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_UNESCAPE()",
        "org.apache.commons.lang3.text.translate.EntityArrays.APOS_UNESCAPE()",
        "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE()",
        "org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.<init>()",
        "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)",
        "org.apache.commons.lang3.text.translate.OctalUnescaper.<init>()",
        "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE()",
        "org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)",
        "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_UNESCAPE()",
        "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.<init>()",
        "org.apache.commons.lang3.text.translate.EntityArrays.BASIC_ESCAPE()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#applyRulesToString(Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)"],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)": [
        "org.apache.commons.lang3.mutable.MutableObject#MutableObject(T)",
        "org.apache.commons.lang3.ClassUtils.Interfaces.<staticinit>()",
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2.<init>()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1.<init>()",
        "org.apache.commons.lang3.builder.DiffResult#iterator()"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#skip(long)": ["org.apache.commons.lang3.text.StrBuilder#size()"],
    "org.apache.commons.lang3.function.Failable.applyAsDouble(FailableDoubleBinaryOperator<E extends Throwable>,double,double)": ["org.apache.commons.lang3.function.Failable.getAsDouble(FailableDoubleSupplier<E extends Throwable>)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int)"
    ],
    "org.apache.commons.lang3.time.DateUtils.iterator(Date,int)": [
        "org.apache.commons.lang3.time.DateUtils.iterator(Calendar,int)",
        "org.apache.commons.lang3.time.DateUtils.toCalendar(Date)",
        "org.apache.commons.lang3.time.DateUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.function.FailableFunction.nop()": ["org.apache.commons.lang3.function.FailableFunction.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.<staticinit>()": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.createStrategyMap()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(int)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int)"],
    "org.apache.commons.lang3.exception.ContextedException#ContextedException(Throwable)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedException.<init>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(Class<?>,ParameterizedType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(Class<?>,ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(Class<T>,ParameterizedType,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.StringUtils.replaceChars(String,String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)"
    ],
    "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker#ThresholdCircuitBreaker(long)": [
        "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.<staticinit>()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#AbstractCircuitBreaker()",
        "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(String,String)": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.isSorted(int[])": [
        "org.apache.commons.lang3.math.NumberUtils.compare(int,int)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.Range#elementCompareTo(T)": [
        "org.apache.commons.lang3.Range#isBefore(T)",
        "org.apache.commons.lang3.Range#isAfter(T)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#insert(int,String)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)",
        "org.apache.commons.lang3.text.StrBuilder#validateIndex(int)"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_UNESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,boolean[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[])": [
        "org.apache.commons.lang3.builder.HashCodeBuilder.unregister(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder.register(Object)",
        "org.apache.commons.lang3.builder.Reflection.getUnchecked(Field,Object)",
        "org.apache.commons.lang3.ArraySorter.sort(T[],Comparator<? super T>)",
        "org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(Object)"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Character[],char)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getFormattedExceptionMessage(String)": [
        "org.apache.commons.lang3.exception.ContextedException#getFormattedExceptionMessage(String)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getFormattedExceptionMessage(String)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getFormattedExceptionMessage(String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],String)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[])",
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterString(String)"
    ],
    "org.apache.commons.lang3.time.StopWatch#isStarted()": ["org.apache.commons.lang3.time.StopWatch.State$State$1#isStarted()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArchUtils.addProcessor(String,Processor)": ["org.apache.commons.lang3.ArchUtils.<staticinit>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTraceList(Throwable)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#createTask(ExecutorService)": ["org.apache.commons.lang3.concurrent.BackgroundInitializer.InitializationTask#InitializationTask(ExecutorService)"],
    "org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence)": ["org.apache.commons.lang3.stream.LangCollectors.joining(CharSequence,CharSequence,CharSequence,Function<Object, String>)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder.toExcludeFieldNames(String[])": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Object[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArraySorter.sort(T[])"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils#FieldUtils()": ["org.apache.commons.lang3.reflect.FieldUtils.<init>()"],
    "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.CharSequenceUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.CalendarUtils.getInstance()": ["org.apache.commons.lang3.time.CalendarUtils#CalendarUtils(Calendar)"],
    "org.apache.commons.lang3.math.NumberUtils.min(byte[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(long)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone)",
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,String,Locale)": [
        "org.apache.commons.lang3.time.DateFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setUpToClass(Class<?>)": ["org.apache.commons.lang3.builder.ToStringBuilder#getObject()"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StrBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean)",
        "org.apache.commons.lang3.time.DurationFormatUtils.lexx(String)",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object)",
        "org.apache.commons.lang3.time.DateUtils.<staticinit>()",
        "org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,String)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#TwoDigitNumberField(int)": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField.<init>()"],
    "org.apache.commons.lang3.StringUtils.countMatches(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientMaxFrameSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed#fetchCheckInterval(EventCountCircuitBreaker)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#getOpeningInterval()"],
    "org.apache.commons.lang3.Validate.isAssignableFrom(Class<?>,Class<?>)": [
        "org.apache.commons.lang3.Validate.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getName(Class<?>,String)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#createProxy(Class<L>,ClassLoader)": ["org.apache.commons.lang3.event.EventListenerSupport#createInvocationHandler()"],
    "org.apache.commons.lang3.StringUtils.wrap(String,String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,Class<T extends Throwable>,int)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class<T extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.StringUtils.abbreviate(String,int,int)": ["org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)"],
    "org.apache.commons.lang3.Functions.asFunction(FailableFunction<I, O, ?>)": ["org.apache.commons.lang3.Functions.apply(FailableFunction<I, O, T extends Throwable>,I)"],
    "org.apache.commons.lang3.function.Failable.asSupplier(FailableSupplier<T, ?>)": ["org.apache.commons.lang3.function.Failable.get(FailableSupplier<T, E extends Throwable>)"],
    "org.apache.commons.lang3.concurrent.CircuitBreakingException#CircuitBreakingException(Throwable)": ["org.apache.commons.lang3.concurrent.CircuitBreakingException.<init>()"],
    "org.apache.commons.lang3.stream.Streams.FailableStream#collect(Supplier<R>,BiConsumer<R, ? super T>,BiConsumer<R, R>)": [
        "org.apache.commons.lang3.stream.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder.register(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.max(float[]...)": ["org.apache.commons.lang3.math.IEEE754rUtils.max(float[]...)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData.<init>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(byte[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(byte)"],
    "org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(Class<?>,Class<? extends Annotation>,boolean,boolean)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class<?>,Class<? extends Annotation>,boolean,boolean)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()": ["org.apache.commons.lang3.builder.ToStringStyle.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#deleteAll(StrMatcher)": ["org.apache.commons.lang3.text.StrBuilder#replace(StrMatcher,String,int,int,int)"],
    "org.apache.commons.lang3.ThreadUtils#ThreadUtils()": ["org.apache.commons.lang3.ThreadUtils.<init>()"],
    "org.apache.commons.lang3.arch.Processor#toString()": [
        "org.apache.commons.lang3.arch.Processor.Arch#getLabel()",
        "org.apache.commons.lang3.arch.Processor.Type#getLabel()"
    ],
    "org.apache.commons.lang3.function.Failable.getAsShort(FailableShortSupplier<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)": ["org.apache.commons.lang3.text.translate.NumericEntityEscaper#NumericEntityEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(char[])"],
    "org.apache.commons.lang3.EnumUtils.processBitVector(Class<E extends Enum>,long)": [
        "org.apache.commons.lang3.EnumUtils.checkBitVectorable(Class<E extends Enum>)",
        "org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E extends Enum>,long[]...)"
    ],
    "org.apache.commons.lang3.StringUtils.stripToNull(String)": ["org.apache.commons.lang3.StringUtils.strip(String,String)"],
    "org.apache.commons.lang3.Functions.run(FailableRunnable<T extends Throwable>)": ["org.apache.commons.lang3.Functions.rethrow(Throwable)"],
    "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#WeekYear(NumberRule)": ["org.apache.commons.lang3.time.FastDatePrinter.WeekYear.<init>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer[],int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.wrapIfMissing(String,String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.CharUtils#CharUtils()": ["org.apache.commons.lang3.CharUtils.<init>()"],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(int[],int[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(int,int)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.LongRange.of(long,long)": ["org.apache.commons.lang3.LongRange.of(Long,Long)"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)": ["org.apache.commons.lang3.text.StrBuilder#append(String)"],
    "org.apache.commons.lang3.ClassPathUtils#ClassPathUtils()": ["org.apache.commons.lang3.ClassPathUtils.<init>()"],
    "org.apache.commons.lang3.BooleanUtils#BooleanUtils()": ["org.apache.commons.lang3.BooleanUtils.<init>()"],
    "org.apache.commons.lang3.time.DateUtils.truncatedEquals(Calendar,Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Calendar,Calendar,int)"],
    "org.apache.commons.lang3.StringUtils.repeat(String,int)": [
        "org.apache.commons.lang3.StringUtils.repeat(String,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectEndText(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)": ["org.apache.commons.lang3.builder.DiffBuilder.SDiff#SDiff(String,Supplier<T>,Supplier<T>,Class<T>)"],
    "org.apache.commons.lang3.function.Consumers.nop()": ["org.apache.commons.lang3.function.Consumers.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableIntConsumer.nop()": ["org.apache.commons.lang3.function.FailableIntConsumer.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.LazyInitializer#LazyInitializer()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.<init>()"
    ],
    "org.apache.commons.lang3.CharUtils.toIntValue(Character,int)": ["org.apache.commons.lang3.CharUtils.toIntValue(char,int)"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#validate()": [
        "org.apache.commons.lang3.builder.ToStringBuilder#getObject()",
        "org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)",
        "org.apache.commons.lang3.ArrayUtils.containsAny(Object[],Object[]...)"
    ],
    "org.apache.commons.lang3.mutable.MutableByte#MutableByte(String)": ["org.apache.commons.lang3.mutable.MutableByte.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.remove(short[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)": [
        "org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)",
        "org.apache.commons.lang3.math.Fraction.<staticinit>()",
        "org.apache.commons.lang3.math.Fraction#Fraction(int,int)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class<?>,String,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils#ArrayUtils()": ["org.apache.commons.lang3.ArrayUtils.<init>()"],
    "org.apache.commons.lang3.time.StopWatch#getTime(TimeUnit)": ["org.apache.commons.lang3.time.StopWatch#getNanoTime()"],
    "org.apache.commons.lang3.concurrent.LazyInitializer#LazyInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)": [
        "org.apache.commons.lang3.concurrent.LazyInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#StrBuilderReader()": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderReader.<init>()"],
    "org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,Collection<String>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)",
        "org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,String[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])": [
        "org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(char[],char[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(char,char)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(short[],short)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#acceptWriteLocked(FailableConsumer<O, ?>)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockAcceptUnlock(Supplier<Lock>,FailableConsumer<O, ?>)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#acceptReadLocked(FailableConsumer<O, ?>)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockAcceptUnlock(Supplier<Lock>,FailableConsumer<O, ?>)"],
    "org.apache.commons.lang3.Validate.validIndex(T[],int,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.ObjectUtils.min(T extends Comparable[]...)": ["org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable,boolean)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getContentStart()": ["org.apache.commons.lang3.builder.ToStringStyle#getContentStart()"],
    "org.apache.commons.lang3.stream.Streams.FailableStream#anyMatch(FailablePredicate<T, ?>)": [
        "org.apache.commons.lang3.function.Failable.asPredicate(FailablePredicate<T, ?>)",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.getDefaultCauseMethodNames()": [
        "org.apache.commons.lang3.exception.ExceptionUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.clone(T[])"
    ],
    "org.apache.commons.lang3.time.DurationUtils#DurationUtils()": ["org.apache.commons.lang3.time.DurationUtils.<init>()"],
    "org.apache.commons.lang3.text.StrTokenizer#toString()": ["org.apache.commons.lang3.text.StrTokenizer#getTokenList()"],
    "org.apache.commons.lang3.JavaVersion.getJavaVersion(String)": ["org.apache.commons.lang3.JavaVersion.get(String)"],
    "org.apache.commons.lang3.StringUtils.removePattern(String,String)": ["org.apache.commons.lang3.RegExUtils.removePattern(String,String)"],
    "org.apache.commons.lang3.function.Failable.asBiFunction(FailableBiFunction<T, U, R, ?>)": ["org.apache.commons.lang3.function.Failable.apply(FailableBiFunction<T, U, R, E extends Throwable>,T,U)"],
    "org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence)",
        "org.apache.commons.lang3.StringUtils.containsAny(CharSequence,char[]...)"
    ],
    "org.apache.commons.lang3.StringUtils.splitByCharacterTypeCamelCase(String)": ["org.apache.commons.lang3.StringUtils.splitByCharacterType(String,boolean)"],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper#translate(int,Writer)": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,char[],char[])": [
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.ArrayUtils.toObject(char[])"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder#appendArray(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)",
        "org.apache.commons.lang3.ClassUtils.isPrimitiveOrWrapper(Class<?>)"
    ],
    "org.apache.commons.lang3.StringUtils.leftPad(String,int,String)": [
        "org.apache.commons.lang3.StringUtils.leftPad(String,int,char)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()"
    ],
    "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>)": ["org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>,HashSet<Class<?>>)"],
    "org.apache.commons.lang3.StringUtils.stripEnd(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#getLocaleSpecificStrategy(int,Calendar)": [
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#CaseInsensitiveTextStrategy(int,Calendar,Locale)",
        "org.apache.commons.lang3.time.FastDateParser.getCache(int)",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#TimeZoneStrategy(Locale)"
    ],
    "org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int)": ["org.apache.commons.lang3.StringUtils.ordinalIndexOf(CharSequence,CharSequence,int,boolean)"],
    "org.apache.commons.lang3.time.CalendarUtils#getStandaloneLongMonthNames()": ["org.apache.commons.lang3.time.CalendarUtils#getMonthDisplayNames(int)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,int[],int[])": [
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.ArrayUtils.toObject(int[])"
    ],
    "org.apache.commons.lang3.SystemUtils.getHostName()": ["org.apache.commons.lang3.SystemUtils.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.initialize(ConcurrentInitializer<T>)": [
        "org.apache.commons.lang3.concurrent.ConstantInitializer#get()",
        "org.apache.commons.lang3.concurrent.LazyInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#get()"
    ],
    "org.apache.commons.lang3.concurrent.UncheckedFuture.on(Future<T>)": ["org.apache.commons.lang3.concurrent.UncheckedFutureImpl#UncheckedFutureImpl(Future<V>)"],
    "org.apache.commons.lang3.ArrayUtils.remove(Object,int)": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.function.FailableLongToIntFunction.nop()": ["org.apache.commons.lang3.function.FailableLongToIntFunction.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils#StringUtils()": ["org.apache.commons.lang3.StringUtils.<init>()"],
    "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.<staticinit>()": ["org.apache.commons.lang3.CharUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StringBuffer,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()"
    ],
    "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#setCalendar(FastDateParser,Calendar,String)": [
        "org.apache.commons.lang3.time.GmtTimeZone#getRawOffset()",
        "org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)"
    ],
    "org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)": [
        "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)",
        "org.apache.commons.lang3.StringUtils.substring(String,int,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.abbreviate(String,String,int)"
    ],
    "org.apache.commons.lang3.BooleanUtils.forEach(Consumer<Boolean>)": ["org.apache.commons.lang3.BooleanUtils.values()"],
    "org.apache.commons.lang3.Functions.tryWithResources(FailableRunnable<? extends Throwable>,FailableRunnable<? extends Throwable>[]...)": ["org.apache.commons.lang3.Functions.tryWithResources(FailableRunnable<? extends Throwable>,FailableConsumer<Throwable, ? extends Throwable>,FailableRunnable<? extends Throwable>[]...)"],
    "org.apache.commons.lang3.JavaVersion.split(String)": ["org.apache.commons.lang3.JavaVersion.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#setSizeStartText(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayContentDetail(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setArrayContentDetail(boolean)"],
    "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy#setCalendar(FastDateParser,Calendar,String)": ["org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)"],
    "org.apache.commons.lang3.StringUtils.getBytes(String,String)": [
        "org.apache.commons.lang3.Charsets.toCharsetName(String)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.StopWatch#isStopped()": ["org.apache.commons.lang3.time.StopWatch.State$State$1#isStopped()"],
    "org.apache.commons.lang3.SystemProperties.getJavaAwtFonts()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrLookup.MapStrLookup#MapStrLookup(Map<String, V>)": [
        "org.apache.commons.lang3.text.StrLookup#StrLookup()",
        "org.apache.commons.lang3.text.StrLookup.MapStrLookup.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(String,String[],String[])": [
        "org.apache.commons.lang3.StringUtils.replaceEach(String,String[],String[],boolean,int)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,float[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.JAVA_CTRL_CHARS_ESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiter(String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)"
    ],
    "org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean,String)": ["org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"],
    "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.<init>()": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#MultiBackgroundInitializer()": [
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer()"
    ],
    "org.apache.commons.lang3.mutable.MutableFloat#MutableFloat()": ["org.apache.commons.lang3.mutable.MutableFloat.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#replaceFirst(String,String)": [
        "org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)",
        "org.apache.commons.lang3.text.StrBuilder#replaceImpl(int,int,int,String,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,int[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,int[],Boolean)"
    ],
    "org.apache.commons.lang3.CharSetUtils.squeeze(String,String[]...)": [
        "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])",
        "org.apache.commons.lang3.CharSet#contains(char)",
        "org.apache.commons.lang3.CharSet.getInstance(String[]...)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextEntries()": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextEntries()",
        "org.apache.commons.lang3.exception.ContextedException#getContextEntries()",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextEntries()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendToString(StringBuffer,String)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldSeparator(StringBuffer)",
        "org.apache.commons.lang3.builder.ToStringStyle#removeLastFieldSeparator(StringBuffer)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#getNoInit()": ["org.apache.commons.lang3.concurrent.AtomicInitializer.<staticinit>()"],
    "org.apache.commons.lang3.compare.ComparableUtils.is(A extends Comparable)": ["org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#ComparableCheckBuilder(A extends Comparable)"],
    "org.apache.commons.lang3.math.NumberUtils.isNumber(String)": ["org.apache.commons.lang3.math.NumberUtils.isCreatable(String)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#UnpaddedNumberField(int)": ["org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.genericArrayType(Type)": ["org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#GenericArrayTypeImpl(Type)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,short[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,short)"],
    "org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.escapeJson(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#addToken(List<String>,String)": [
        "org.apache.commons.lang3.text.StrTokenizer#isIgnoreEmptyTokens()",
        "org.apache.commons.lang3.text.StrTokenizer#isEmptyTokenAsNull()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#asTokenizer()": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer#StrBuilderTokenizer()"],
    "org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.clone(double[])",
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)": ["org.apache.commons.lang3.text.translate.JavaUnicodeEscaper#JavaUnicodeEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.addAll(int[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(int[])"],
    "org.apache.commons.lang3.text.StrBuilder#append(float)": ["org.apache.commons.lang3.text.StrBuilder#append(double)"],
    "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>)",
        "org.apache.commons.lang3.ObjectUtils.identityToString(Object)",
        "org.apache.commons.lang3.reflect.TypeUtils.genericArrayTypeToString(GenericArrayType)",
        "org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<T>)"
    ],
    "org.apache.commons.lang3.StringUtils.center(String,int,String)": [
        "org.apache.commons.lang3.StringUtils.rightPad(String,int,String)",
        "org.apache.commons.lang3.StringUtils.leftPad(String,int,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#AbstractFutureProxy(Future<V>)": ["org.apache.commons.lang3.concurrent.AbstractFutureProxy.<init>()"],
    "org.apache.commons.lang3.SerializationUtils.serialize(Serializable)": ["org.apache.commons.lang3.SerializationUtils.serialize(Serializable,OutputStream)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,Calendar)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long,int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.clone(short[])",
        "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(short[],int)"
    ],
    "org.apache.commons.lang3.Validate.notEmpty(T extends Map,String,Object[]...)": [
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper()": ["org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.function.Failable.stream(Collection<E>)": ["org.apache.commons.lang3.stream.Streams.FailableStream#FailableStream(Stream<T>)"],
    "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1#appendDetail(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.AnnotationUtils.toString(Annotation)"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Short[])": [
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.RandomUtils.nextLong()": ["org.apache.commons.lang3.RandomUtils.nextLong(long)"],
    "org.apache.commons.lang3.SystemProperties.getJavaRuntimeName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)": ["org.apache.commons.lang3.math.IEEE754rUtils.min(float[]...)"],
    "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>,boolean)": [
        "org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(Class<?>)",
        "org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getOrgJcpXmlDsigSecureValidation()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeHtml3(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#estimateLength()"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(String[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.ArchUtils.init_IA64_64Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.StringUtils.chomp(String,String)": ["org.apache.commons.lang3.StringUtils.removeEnd(String,String)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,boolean)": ["org.apache.commons.lang3.builder.HashCodeBuilder.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.remove(byte[],int)": ["org.apache.commons.lang3.ArrayUtils.remove(Object,int)"],
    "org.apache.commons.lang3.function.MethodInvokers.unreflect(Method)": ["org.apache.commons.lang3.function.MethodInvokers.requireMethod(Method)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Double[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.reverse(boolean[])": ["org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int)"],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Date)": [
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()",
        "org.apache.commons.lang3.time.FastDatePrinter#applyRulesToString(Calendar)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isArrayContentDetail()": ["org.apache.commons.lang3.builder.ToStringStyle#isArrayContentDetail()"],
    "org.apache.commons.lang3.BooleanUtils.isNotTrue(Boolean)": ["org.apache.commons.lang3.BooleanUtils.isTrue(Boolean)"],
    "org.apache.commons.lang3.event.EventListenerSupport#addListener(L)": ["org.apache.commons.lang3.event.EventListenerSupport#addListener(L,boolean)"],
    "org.apache.commons.lang3.reflect.MemberUtils.Executable#Executable(Constructor<?>)": ["org.apache.commons.lang3.reflect.MemberUtils.Executable.<init>()"],
    "org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(CharSequence,CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.SystemUtils.getUserName()": ["org.apache.commons.lang3.SystemProperties.getUserName()"],
    "org.apache.commons.lang3.Streams.ArrayCollector#finisher()": ["org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)"],
    "org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Package,String)": ["org.apache.commons.lang3.ClassPathUtils.packageToPath(String)"],
    "org.apache.commons.lang3.text.StrTokenizer.<staticinit>()": [
        "org.apache.commons.lang3.text.StrTokenizer#setIgnoredMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.trimMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.tabMatcher()",
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#setIgnoreEmptyTokens(boolean)",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer()",
        "org.apache.commons.lang3.text.StrTokenizer#setTrimmerMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.noneMatcher()",
        "org.apache.commons.lang3.text.StrTokenizer#setEmptyTokenAsNull(boolean)",
        "org.apache.commons.lang3.text.StrMatcher.commaMatcher()"
    ],
    "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Collection<?>)": [
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendIdentityHashCode(StringBuffer,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendClassName(StringBuffer,Object)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.<init>()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#AbstractCircuitBreaker()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)"
    ],
    "org.apache.commons.lang3.SerializationException#SerializationException(String,Throwable)": ["org.apache.commons.lang3.SerializationException.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.exception.ContextedException#ContextedException(String,Throwable)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedException.<init>()"
    ],
    "org.apache.commons.lang3.CharSequenceUtils.subSequence(CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle#NoFieldNameToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseFieldNames(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseFieldNames(boolean)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],StrMatcher)": [
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[])"
    ],
    "org.apache.commons.lang3.BitField#setShortValue(short,short)": ["org.apache.commons.lang3.BitField#setValue(int,int)"],
    "org.apache.commons.lang3.time.FastDateParser$NumberStrategy$1.<init>()": ["org.apache.commons.lang3.time.FastDateParser.NumberStrategy#NumberStrategy(int)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)"
    ],
    "org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(String,String)": [
        "org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.CharRange.isNot(char)": ["org.apache.commons.lang3.CharRange#CharRange(char,char,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getJavaxAccessibilityAssistiveTechnologies()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)": [
        "org.apache.commons.lang3.builder.ToStringBuilder.getDefaultStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendStart(StringBuffer,Object)",
        "org.apache.commons.lang3.builder.ToStringBuilder.<init>()"
    ],
    "org.apache.commons.lang3.math.Fraction#add(Fraction)": ["org.apache.commons.lang3.math.Fraction#addSub(Fraction,boolean)"],
    "org.apache.commons.lang3.text.StrTokenizer#hasPrevious()": ["org.apache.commons.lang3.text.StrTokenizer#checkTokenized()"],
    "org.apache.commons.lang3.time.FastDateFormat.getInstance()": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance()"
    ],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.reentrantReadWriteLockVisitor(O)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.create(O,ReadWriteLock)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#UnpaddedMonthField()": ["org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.<init>()"],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#setInitializer(FailableSupplier<T, ? extends Exception>)": [
        "org.apache.commons.lang3.builder.AbstractSupplier#asThis()",
        "org.apache.commons.lang3.function.FailableSupplier.nul()"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)": [
        "org.apache.commons.lang3.StringUtils.replaceOnce(String,String,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientHpackMaxHeaderTableSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,int,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.PatternStrategy.<init>()": ["org.apache.commons.lang3.time.FastDateParser.Strategy.<init>()"],
    "org.apache.commons.lang3.ThreadUtils.join(Thread,Duration)": ["org.apache.commons.lang3.time.DurationUtils.accept(FailableBiConsumer<Long, Integer, T extends Throwable>,Duration)"],
    "org.apache.commons.lang3.SystemProperties.getJdkVirtualThreadSchedulerParallelism()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence)": ["org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence,boolean)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed#isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getEventCount()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#getOpeningThreshold()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaExtDirs()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getTimeInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)"
    ],
    "org.apache.commons.lang3.tuple.Pair.emptyArray()": ["org.apache.commons.lang3.tuple.Pair.<staticinit>()"],
    "org.apache.commons.lang3.ArchUtils.init_PPC_64Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#isInitialized()": ["org.apache.commons.lang3.concurrent.AtomicInitializer.<staticinit>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#StandardToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle.<init>()"
    ],
    "org.apache.commons.lang3.ClassLoaderUtils.getThreadURLs()": ["org.apache.commons.lang3.ClassLoaderUtils.getURLs(ClassLoader)"],
    "org.apache.commons.lang3.math.Fraction#pow(int)": [
        "org.apache.commons.lang3.math.Fraction#pow(int)",
        "org.apache.commons.lang3.math.Fraction.<staticinit>()",
        "org.apache.commons.lang3.math.Fraction#invert()",
        "org.apache.commons.lang3.math.Fraction#multiplyBy(Fraction)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#TimeZoneNumberRule(boolean)": ["org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.convertClassesToClassNames(List<Class<?>>)": ["org.apache.commons.lang3.ClassUtils.getName(Class<?>,String)"],
    "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,Calendar)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.time.FastDateParser$NumberStrategy$1#modify(FastDateParser,int)": ["org.apache.commons.lang3.time.FastDateParser#adjustYear(int)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isFieldSeparatorAtEnd()": ["org.apache.commons.lang3.builder.ToStringStyle#isFieldSeparatorAtEnd()"],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilLoggingConfigFile()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.mutable.MutableShort#MutableShort(short)": ["org.apache.commons.lang3.mutable.MutableShort.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.toStringArray(Object[])": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.function.Failable.asConsumer(FailableConsumer<T, ?>)": ["org.apache.commons.lang3.function.Failable.accept(FailableConsumer<T, E extends Throwable>,T)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,Collection<String>)": [
        "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)"
    ],
    "org.apache.commons.lang3.CharSet#contains(char)": ["org.apache.commons.lang3.CharRange#contains(char)"],
    "org.apache.commons.lang3.StringUtils.wrap(String,char)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.mutable.MutableByte#equals(Object)": ["org.apache.commons.lang3.mutable.MutableByte#byteValue()"],
    "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.getRule(int)": ["org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.<staticinit>()"],
    "org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(Executable,Executable,Class<?>[])": ["org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(Class<?>[],Executable)"],
    "org.apache.commons.lang3.mutable.MutableBoolean#MutableBoolean(Boolean)": ["org.apache.commons.lang3.mutable.MutableBoolean.<init>()"],
    "org.apache.commons.lang3.mutable.MutableBoolean#equals(Object)": ["org.apache.commons.lang3.mutable.MutableBoolean#booleanValue()"],
    "org.apache.commons.lang3.mutable.MutableBoolean#MutableBoolean(boolean)": ["org.apache.commons.lang3.mutable.MutableBoolean.<init>()"],
    "org.apache.commons.lang3.StringUtils.truncate(String,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.DurationFormatUtils.Token#equals(Object)": [
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#equals(Object)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#checkTokenized()": [
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer#tokenize(char[],int,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.text.StrTokenizer#tokenize(char[],int,int)"
    ],
    "org.apache.commons.lang3.ObjectUtils.firstNonNull(T[]...)": ["org.apache.commons.lang3.stream.Streams.of(T[]...)"],
    "org.apache.commons.lang3.CharRange#toString()": ["org.apache.commons.lang3.CharRange#isNegated()"],
    "org.apache.commons.lang3.text.WordUtils.uncapitalize(String)": ["org.apache.commons.lang3.text.WordUtils.uncapitalize(String,char[]...)"],
    "org.apache.commons.lang3.exception.CloneFailedException#CloneFailedException(String,Throwable)": ["org.apache.commons.lang3.exception.CloneFailedException.<init>()"],
    "org.apache.commons.lang3.CharUtils.unicodeEscaped(char)": ["org.apache.commons.lang3.CharUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,byte[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkInternalHttpClientDisableHostNameVerification()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String)": ["org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(long[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object,boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object,Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object,Boolean)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeJson(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)": [
        "org.apache.commons.lang3.time.FastTimeZone.parseSign(String)",
        "org.apache.commons.lang3.time.FastTimeZone.parseInt(String)",
        "org.apache.commons.lang3.time.GmtTimeZone#GmtTimeZone(boolean,int,int)",
        "org.apache.commons.lang3.time.FastTimeZone.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#setLimit(int)": ["org.apache.commons.lang3.concurrent.TimedSemaphore.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,char[])": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,char)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,char)"
    ],
    "org.apache.commons.lang3.CharRange#iterator()": ["org.apache.commons.lang3.CharRange.CharacterIterator#CharacterIterator(CharRange)"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,byte)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getUserName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(byte[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(byte[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.AnnotationUtils#AnnotationUtils()": ["org.apache.commons.lang3.AnnotationUtils.<init>()"],
    "org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkVirtualThreadSchedulerMaxPoolSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ObjectUtils.cloneIfPossible(T)": ["org.apache.commons.lang3.ObjectUtils.clone(T)"],
    "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StringBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder,int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpsProxyHost()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.Functions.stream(Collection<O>)": ["org.apache.commons.lang3.Streams.FailableStream#FailableStream(Stream<O>)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(double)": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(byte[])"],
    "org.apache.commons.lang3.ObjectUtils.isEmpty(Object)": [
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(double[],double[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(double,double)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#reset(char[])": [
        "org.apache.commons.lang3.ArrayUtils.clone(char[])",
        "org.apache.commons.lang3.text.StrTokenizer#reset()"
    ],
    "org.apache.commons.lang3.time.StopWatch#unsplit()": ["org.apache.commons.lang3.time.StopWatch.SplitState.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkModuleMainClass()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadById(long,String)": ["org.apache.commons.lang3.ThreadUtils.findThreadById(long)"],
    "org.apache.commons.lang3.text.StrLookup.<staticinit>()": [
        "org.apache.commons.lang3.text.StrLookup.MapStrLookup#MapStrLookup(Map<String, V>)",
        "org.apache.commons.lang3.text.StrLookup.SystemPropertiesStrLookup.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[],Comparator<?>)": ["org.apache.commons.lang3.builder.CompareToBuilder#append(Object,Object,Comparator<?>)"],
    "org.apache.commons.lang3.text.StrBuilder#appendNull()": ["org.apache.commons.lang3.text.StrBuilder#append(String)"],
    "org.apache.commons.lang3.reflect.TypeUtils.parameterize(Class<?>,Type[]...)": ["org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Type[]...)"],
    "org.apache.commons.lang3.time.FastDateFormat#getMaxLengthEstimate()": ["org.apache.commons.lang3.time.FastDatePrinter#getMaxLengthEstimate()"],
    "org.apache.commons.lang3.SystemProperties.getJavaLibraryPath()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#ProxyInvocationHandler(FailableConsumer<Throwable, IllegalAccessException>)": ["org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlCdataChunkSize()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"
    ],
    "org.apache.commons.lang3.StringUtils.join(float[],char)": ["org.apache.commons.lang3.StringUtils.join(float[],char,int,int)"],
    "org.apache.commons.lang3.ClassUtils.getCanonicalName(Object)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getCanonicalName(Object,String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#setIgnoredChar(char)": [
        "org.apache.commons.lang3.text.StrTokenizer#setIgnoredMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)"
    ],
    "org.apache.commons.lang3.function.FailableObjDoubleConsumer.nop()": ["org.apache.commons.lang3.function.FailableObjDoubleConsumer.<staticinit>()"],
    "org.apache.commons.lang3.time.StopWatch#stop()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.time.DurationFormatUtils.format(Token[],long,long,long,long,long,long,long,boolean)": [
        "org.apache.commons.lang3.time.DurationFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token#getValue()",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.DurationFormatUtils.Token#getCount()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(double[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(String,String)": ["org.apache.commons.lang3.NotImplementedException.<init>()"],
    "org.apache.commons.lang3.StringUtils.join(boolean[],char)": ["org.apache.commons.lang3.StringUtils.join(boolean[],char,int,int)"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Object[])": ["org.apache.commons.lang3.stream.Streams.nonNull(E[]...)"],
    "org.apache.commons.lang3.ArrayUtils.shift(double[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)"],
    "org.apache.commons.lang3.mutable.MutableShort#MutableShort(Number)": ["org.apache.commons.lang3.mutable.MutableShort.<init>()"],
    "org.apache.commons.lang3.Range.is(T,Comparator<T>)": ["org.apache.commons.lang3.Range.of(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.CharSetUtils.modify(String,String[],boolean)": [
        "org.apache.commons.lang3.CharSet#contains(char)",
        "org.apache.commons.lang3.CharSet.getInstance(String[]...)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle,boolean)": [
        "org.apache.commons.lang3.builder.DiffBuilder.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle,boolean,String)"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(Class<T>,Class<?>[]...)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isMatchingConstructor(Constructor<?>,Class<?>[])",
        "org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Constructor<T>)",
        "org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)",
        "org.apache.commons.lang3.reflect.MemberUtils.compareConstructorFit(Constructor<?>,Constructor<?>,Class<?>[])"
    ],
    "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)": [
        "org.apache.commons.lang3.RandomStringUtils.random()",
        "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat$AbstractFormatCache$1#createInstance(String,TimeZone,Locale)": ["org.apache.commons.lang3.time.FastDateFormat#FastDateFormat(String,TimeZone,Locale)"],
    "org.apache.commons.lang3.AppendableJoiner.Builder#Builder()": ["org.apache.commons.lang3.AppendableJoiner.Builder.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#append(String)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.function.FailableIntUnaryOperator.nop()": ["org.apache.commons.lang3.function.FailableIntUnaryOperator.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.removeAll(byte[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Character[])": [
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DurationFormatUtils.Token#hashCode()": ["org.apache.commons.lang3.text.StrBuilder#hashCode()"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short)"
    ],
    "org.apache.commons.lang3.time.AbstractFormatCache#getInstance()": ["org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"],
    "org.apache.commons.lang3.StringUtils.toStringOrEmpty(Object)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerDrainAmount()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean)": [
        "org.apache.commons.lang3.JavaVersion.<staticinit>()",
        "org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast(JavaVersion)"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Float[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemUtils.isJavaAwtHeadless()": ["org.apache.commons.lang3.SystemUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getNativeEncoding()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.DateUtils.addHours(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.StringUtils.defaultString(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(float[],float[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(float,float)"],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,WildcardType,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.substituteTypeVariables(Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#equals(Object)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)"
    ],
    "org.apache.commons.lang3.exception.ContextedException#ContextedException(String,Throwable,ExceptionContext)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedException.<init>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(String,Object[]...)": ["org.apache.commons.lang3.text.StrBuilder#append(double)"],
    "org.apache.commons.lang3.StringUtils.removeStartIgnoreCase(String,String)": [
        "org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport(Class<L>,ClassLoader)": [
        "org.apache.commons.lang3.Validate.isTrue(boolean,String,double)",
        "org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport()",
        "org.apache.commons.lang3.event.EventListenerSupport#initializeTransientFields(Class<L>,ClassLoader)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(Object)": ["org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(Object)"],
    "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#estimateLength()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils#TypeUtils()": ["org.apache.commons.lang3.reflect.TypeUtils.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.defaultIfEmpty(T extends CharSequence,T extends CharSequence)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Integer[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,long[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.SystemProperties.getUserDir()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(T[],T)": [
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#reflectionAppendArray(Object)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#getStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle#reflectionAppendArrayDetail(StringBuffer,String,Object)",
        "org.apache.commons.lang3.builder.ToStringBuilder#getStringBuffer()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#reflectionAppendArrayDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.LocaleUtils.availableLocaleList(Predicate<Locale>)": ["org.apache.commons.lang3.LocaleUtils.availableLocaleList()"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.Validate.noNullElements(T extends Iterable)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#changeState(State)": [
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.<staticinit>()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State$State$1#oppositeState()"
    ],
    "org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()": ["org.apache.commons.lang3.text.StrLookup.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.equalsAny(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_ESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableDoubleToIntFunction.nop()": ["org.apache.commons.lang3.function.FailableDoubleToIntFunction.<staticinit>()"],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],StrMatcher,StrMatcher)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteMatcher(StrMatcher)"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#seekNonWs(String,ParsePosition)": [
        "org.apache.commons.lang3.text.StrMatcher.splitMatcher()",
        "org.apache.commons.lang3.text.StrMatcher#isMatch(char[],int)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,boolean[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,boolean[],Boolean)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSorted(char[])": [
        "org.apache.commons.lang3.CharUtils.compare(char,char)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.stream.Streams.nonNull(Stream<E>)": ["org.apache.commons.lang3.stream.Streams.of(Stream<E>)"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.escapeHtml4(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientMaxStreams()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone()": ["org.apache.commons.lang3.time.FastTimeZone.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type)": ["org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.BooleanUtils.toBooleanObject(String)": ["org.apache.commons.lang3.BooleanUtils.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableLongPredicate.falsePredicate()": ["org.apache.commons.lang3.function.FailableLongPredicate.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,B extends Appendable)": ["org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)"],
    "org.apache.commons.lang3.ArrayUtils.addFirst(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.add(short[],short)",
        "org.apache.commons.lang3.ArrayUtils.insert(int,short[],short[]...)"
    ],
    "org.apache.commons.lang3.math.Fraction#addSub(Fraction,boolean)": [
        "org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)",
        "org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)",
        "org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)",
        "org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)",
        "org.apache.commons.lang3.math.Fraction#negate()",
        "org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)",
        "org.apache.commons.lang3.math.Fraction#Fraction(int,int)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.spaceMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.Range#isEndedBy(T)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaNioChannelsSpiAsynchronousChannelProvider()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.StopWatch#toSplitString()": [
        "org.apache.commons.lang3.time.StopWatch#formatSplitTime()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#next()": [
        "org.apache.commons.lang3.mutable.MutableObject#getValue()",
        "org.apache.commons.lang3.mutable.MutableObject#setValue(T)"
    ],
    "org.apache.commons.lang3.Streams.stream(Stream<O>)": ["org.apache.commons.lang3.Streams.FailableStream#FailableStream(Stream<O>)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpServerMaxConnections()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getProperty(String,String)": ["org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier<String>)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean)"],
    "org.apache.commons.lang3.ArchUtils.init_PPC_32Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.ArchUtils.init_IA64_32Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)"
    ],
    "org.apache.commons.lang3.ObjectUtils.isNotEmpty(Object)": ["org.apache.commons.lang3.ObjectUtils.isEmpty(Object)"],
    "org.apache.commons.lang3.arch.Processor#is64Bit()": ["org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StrBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder)",
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()"
    ],
    "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get()": [
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()",
        "org.apache.commons.lang3.concurrent.UncheckedExecutionException#UncheckedExecutionException(Throwable)",
        "org.apache.commons.lang3.exception.UncheckedInterruptedException#UncheckedInterruptedException(Throwable)"
    ],
    "org.apache.commons.lang3.time.DateUtils.parseDate(String,Locale,String[]...)": ["org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String[],boolean)"],
    "org.apache.commons.lang3.ArchUtils.init_X86_64Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])": [
        "org.apache.commons.lang3.ObjectUtils.getClass(T)",
        "org.apache.commons.lang3.ClassUtils.getComponentType(Class<T[]>)"
    ],
    "org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ObjectUtils.anyNull(Object[]...)": ["org.apache.commons.lang3.ObjectUtils.allNotNull(Object[]...)"],
    "org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable<?>)": ["org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(Type[])"],
    "org.apache.commons.lang3.exception.ContextedException#ContextedException(String)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedException.<init>()"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#toString()": [
        "org.apache.commons.lang3.time.GmtTimeZone#getID()",
        "org.apache.commons.lang3.time.FastDatePrinter#getPattern()",
        "org.apache.commons.lang3.time.FastDatePrinter#getLocale()",
        "org.apache.commons.lang3.time.FastDatePrinter#getTimeZone()"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,double[],double[])": [
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.ArrayUtils.toObject(double[])"
    ],
    "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])": ["org.apache.commons.lang3.stream.Streams.of(T[]...)"],
    "org.apache.commons.lang3.LocaleUtils.toLocale(String)": [
        "org.apache.commons.lang3.LocaleUtils.parseLocale(String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.LocaleUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.mutable.MutableByte#MutableByte()": ["org.apache.commons.lang3.mutable.MutableByte.<init>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#build()": ["org.apache.commons.lang3.builder.HashCodeBuilder#toHashCode()"],
    "org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle,boolean,String)": [
        "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffBuilder.<init>()"
    ],
    "org.apache.commons.lang3.time.StopWatch#getStopTime()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable,String[])": [
        "org.apache.commons.lang3.exception.ExceptionUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(Throwable,String)"
    ],
    "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)": [
        "org.apache.commons.lang3.ArchUtils.addProcessor(String,Processor)",
        "org.apache.commons.lang3.stream.Streams.of(T[]...)"
    ],
    "org.apache.commons.lang3.function.FailableIntToLongFunction.nop()": ["org.apache.commons.lang3.function.FailableIntToLongFunction.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.shift(Object[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(Object[],int,int,int)"],
    "org.apache.commons.lang3.StringUtils.join(short[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.equalsAnyIgnoreCase(CharSequence,CharSequence[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.StringUtils.equalsIgnoreCase(CharSequence,CharSequence)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(double,double)": ["org.apache.commons.lang3.builder.EqualsBuilder#append(boolean[],boolean[])"],
    "org.apache.commons.lang3.text.StrBuilder#equals(Object)": ["org.apache.commons.lang3.text.StrBuilder#equals(StrBuilder)"],
    "org.apache.commons.lang3.ClassLoaderUtils#ClassLoaderUtils()": ["org.apache.commons.lang3.ClassLoaderUtils.<init>()"],
    "org.apache.commons.lang3.function.FailableToLongBiFunction.nop()": ["org.apache.commons.lang3.function.FailableToLongBiFunction.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaPropertiesDate()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,char[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.ObjectUtils.max(T extends Comparable[]...)": ["org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable,boolean)"],
    "org.apache.commons.lang3.time.DateUtils.addMonths(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.clone(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(long,B extends Appendable)": [
        "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)",
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Byte[])": [
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder.unregister(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegisterPair(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder.<staticinit>()",
        "org.apache.commons.lang3.builder.EqualsBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(Class<?>)": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Class<?>)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Class<?>)"
    ],
    "org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrMatcher.noneMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[])": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(int[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(Object[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.JavaVersion.<staticinit>()": ["org.apache.commons.lang3.JavaVersion.maxVersion()"],
    "org.apache.commons.lang3.text.StrBuilder#asWriter()": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#StrBuilderWriter()"],
    "org.apache.commons.lang3.ArrayUtils.reverse(float[])": ["org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Float[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.StringUtils.contains(CharSequence,CharSequence)": ["org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)"],
    "org.apache.commons.lang3.math.NumberUtils.min(float[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(Object[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)": ["org.apache.commons.lang3.math.IEEE754rUtils.min(double[]...)"],
    "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()": ["org.apache.commons.lang3.time.FastDateFormat$AbstractFormatCache$1.<init>()"],
    "org.apache.commons.lang3.time.FastDateParser#equals(Object)": ["org.apache.commons.lang3.time.GmtTimeZone#equals(Object)"],
    "org.apache.commons.lang3.text.StrTokenizer#nextToken()": ["org.apache.commons.lang3.text.StrTokenizer#hasNext()"],
    "org.apache.commons.lang3.reflect.TypeUtils.getRawType(Type,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(Type,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getFtpNonProxyHost()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get(long,TimeUnit)": [
        "org.apache.commons.lang3.concurrent.UncheckedExecutionException#UncheckedExecutionException(Throwable)",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get(long,TimeUnit)",
        "org.apache.commons.lang3.concurrent.UncheckedTimeoutException#UncheckedTimeoutException(Throwable)",
        "org.apache.commons.lang3.exception.UncheckedInterruptedException#UncheckedInterruptedException(Throwable)"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwableOfType(Throwable,Class<T extends Throwable>)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class<T extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#append(char[],int,int)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle)": ["org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle,StringBuffer)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[])": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()": ["org.apache.commons.lang3.text.translate.EntityArrays.invert(String[][])"],
    "org.apache.commons.lang3.ArrayUtils.toString(Object,String)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle)",
        "org.apache.commons.lang3.builder.ToStringBuilder#append(Object)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.ToStringBuilder#toString()"
    ],
    "org.apache.commons.lang3.concurrent.LazyInitializer.<init>()": ["org.apache.commons.lang3.concurrent.LazyInitializer.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#read(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#getChars(int,int,char[],int)",
        "org.apache.commons.lang3.text.StrBuilder#size()"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(boolean[])": [
        "org.apache.commons.lang3.ArrayUtils.random()",
        "org.apache.commons.lang3.ArrayUtils.shuffle(boolean[],Random)"
    ],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder.builder()": ["org.apache.commons.lang3.builder.ReflectionDiffBuilder.Builder.<init>()"],
    "org.apache.commons.lang3.RegExUtils.removeFirst(String,String)": [
        "org.apache.commons.lang3.RegExUtils.replaceFirst(String,String,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(Object)": [
        "org.apache.commons.lang3.text.StrBuilder#append(Object)",
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(Date,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(long,String,TimeZone,Locale)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.ArrayUtils.removeElement(T[],Object)": [
        "org.apache.commons.lang3.ArrayUtils.clone(T[])",
        "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffix(String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffixMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)"
    ],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(String,Throwable,String)": ["org.apache.commons.lang3.NotImplementedException.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlEntityExpansionLimit()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendStart(StringBuffer,Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendContentStart(StringBuffer)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldSeparator(StringBuffer)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendIdentityHashCode(StringBuffer,Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendClassName(StringBuffer,Object)"
    ],
    "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[],boolean)": [
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>,boolean)",
        "org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[])",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)": ["org.apache.commons.lang3.time.FastDatePrinter.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.isEquals(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder#isEquals()",
        "org.apache.commons.lang3.builder.EqualsBuilder#EqualsBuilder()",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(Object,Object)"
    ],
    "org.apache.commons.lang3.stream.Streams.failableStream(Stream<T>)": ["org.apache.commons.lang3.stream.Streams.FailableStream#FailableStream(Stream<T>)"],
    "org.apache.commons.lang3.time.DurationFormatUtils#DurationFormatUtils()": ["org.apache.commons.lang3.time.DurationFormatUtils.<init>()"],
    "org.apache.commons.lang3.Validate.notEmpty(T[])": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.join(double[],char)": ["org.apache.commons.lang3.StringUtils.join(double[],char,int,int)"],
    "org.apache.commons.lang3.time.FastDateFormat#format(Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Calendar)"],
    "org.apache.commons.lang3.Validate.isTrue(boolean)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.stripAll(String[]...)": ["org.apache.commons.lang3.StringUtils.stripAll(String[],String)"],
    "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker#incrementAndCheckState(Long)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#open()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#open()",
        "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker#checkState()"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(String)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(String)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#collect(Supplier<R>,BiConsumer<R, ? super O>,BiConsumer<R, R>)": [
        "org.apache.commons.lang3.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.Streams.FailableStream#makeTerminated()"
    ],
    "org.apache.commons.lang3.reflect.TypeLiteral#TypeLiteral()": [
        "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)",
        "org.apache.commons.lang3.reflect.TypeLiteral.<init>()",
        "org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable<?>)",
        "org.apache.commons.lang3.reflect.TypeLiteral.<staticinit>()",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.Functions.rethrow(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#isJsonObject(String)": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#getContentStart()",
        "org.apache.commons.lang3.builder.ToStringStyle#getContentEnd()",
        "org.apache.commons.lang3.builder.ToStringStyle#getContentStart()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getContentEnd()"
    ],
    "org.apache.commons.lang3.ArrayUtils.addAll(float[],float[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(float[])"],
    "org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerMaxIdleConnections()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Object)": [
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Double[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Short[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Character[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Float[])",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Long[])",
        "org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(Class<?>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaSpecificationName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#lastIndexOf(StrMatcher,int)": [
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.reverse(char[])": ["org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int)"],
    "org.apache.commons.lang3.StringUtils.length(CharSequence)": ["org.apache.commons.lang3.text.StrBuilder#length()"],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)"],
    "org.apache.commons.lang3.SystemProperties.getJdkModuleMain()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#createExecutor()": [
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#getTaskCount()",
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#getTaskCount()"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)"],
    "org.apache.commons.lang3.tuple.Pair#equals(Object)": [
        "org.apache.commons.lang3.tuple.Pair#getValue()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)": ["org.apache.commons.lang3.math.IEEE754rUtils.max(double[]...)"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class<?>,String,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class<?>,String,Object[],Class<?>[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuffer,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.ObjectUtils.wait(Object,Duration)": [
        "org.apache.commons.lang3.time.DurationUtils.zeroIfNull(Duration)",
        "org.apache.commons.lang3.time.DurationUtils.accept(FailableBiConsumer<Long, Integer, T extends Throwable>,Duration)"
    ],
    "org.apache.commons.lang3.SystemProperties.getInt(String,IntSupplier)": ["org.apache.commons.lang3.SystemProperties.getProperty(String)"],
    "org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char)": ["org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientConnectionWindowSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientAuthRetryLimit()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.StopWatch#toString()": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.time.StopWatch#formatTime()"
    ],
    "org.apache.commons.lang3.BooleanUtils.toStringYesNo(Boolean)": [
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()",
        "org.apache.commons.lang3.BooleanUtils.toString(Boolean,String,String,String)"
    ],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#addInitializer(String,BackgroundInitializer<?>)": ["org.apache.commons.lang3.concurrent.BackgroundInitializer#isStarted()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,int[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,int[],Boolean)"
    ],
    "org.apache.commons.lang3.BitField#setShortBoolean(short,boolean)": [
        "org.apache.commons.lang3.BitField#clearShort(short)",
        "org.apache.commons.lang3.BitField#setShort(short)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#lastIndexOf(String)": ["org.apache.commons.lang3.text.StrBuilder#lastIndexOf(String,int)"],
    "org.apache.commons.lang3.ThreadUtils.findThreadById(long,ThreadGroup)": ["org.apache.commons.lang3.ThreadUtils.findThreadById(long)"],
    "org.apache.commons.lang3.stream.LangCollectors.SimpleCollector#SimpleCollector(Supplier<A>,BiConsumer<A, T>,BinaryOperator<A>,Function<A, R>,Set<Characteristics>)": ["org.apache.commons.lang3.stream.LangCollectors.SimpleCollector.<init>()"],
    "org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)": ["org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"],
    "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy#ISO8601TimeZoneStrategy(String)": [
        "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.<init>()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#createPattern(String)",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy.<init>()"
    ],
    "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextValues(String)": [
        "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#stream()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.JavaVersion#JavaVersion(float,String)": ["org.apache.commons.lang3.JavaVersion.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,short[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#appendArray(Object)": [
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(byte[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(float[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(char[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(double[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(int[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(Object[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#append(long[])"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.wildcardType()": ["org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeBuilder#WildcardTypeBuilder()"],
    "org.apache.commons.lang3.exception.ContextedException#getContextValues(String)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextValues(String)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextValues(String)",
        "org.apache.commons.lang3.exception.ContextedException#getContextValues(String)"
    ],
    "org.apache.commons.lang3.Range.between(T extends Comparable,T extends Comparable)": ["org.apache.commons.lang3.Range.of(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.ClassUtils.primitivesToWrappers(Class<?>[]...)": ["org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class<?>)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlJdkCatalogResolve()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)": [
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#StringMatcher(String)",
        "org.apache.commons.lang3.text.StrMatcher.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(Class<E extends Enum>,String,E extends Enum)": ["org.apache.commons.lang3.EnumUtils.getFirstEnumIgnoreCase(Class<E extends Enum>,String,Function<E extends Enum, String>,E extends Enum)"],
    "org.apache.commons.lang3.time.FastDateFormat$AbstractFormatCache$1.<init>()": ["org.apache.commons.lang3.time.AbstractFormatCache.<init>()"],
    "org.apache.commons.lang3.StringUtils.abbreviate(String,int)": ["org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)"],
    "org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Class<?>,String)": ["org.apache.commons.lang3.ClassPathUtils.toFullyQualifiedPath(Class<?>,String)"],
    "org.apache.commons.lang3.Functions.asBiPredicate(FailableBiPredicate<O1, O2, ?>)": ["org.apache.commons.lang3.Functions.test(FailableBiPredicate<O1, O2, T extends Throwable>,O1,O2)"],
    "org.apache.commons.lang3.function.FailableConsumer.nop()": ["org.apache.commons.lang3.function.FailableConsumer.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.builder()": ["org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(long)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(long)"
    ],
    "org.apache.commons.lang3.stream.Streams.failableStream(T)": [
        "org.apache.commons.lang3.stream.Streams.failableStream(Stream<T>)",
        "org.apache.commons.lang3.stream.Streams.streamOf(T)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendWithSeparators(Iterable<?>,String)": [
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.builder.DiffResult#iterator()",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.text.StrBuilder#append(String)",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)"
    ],
    "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)": ["org.apache.commons.lang3.text.StrBuilder#toString()"],
    "org.apache.commons.lang3.function.FailableBiFunction.nop()": ["org.apache.commons.lang3.function.FailableBiFunction.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.rotate(String,int)": [
        "org.apache.commons.lang3.StringUtils.substring(String,int)",
        "org.apache.commons.lang3.StringUtils.substring(String,int,int)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#parseObject(String,ParsePosition)": ["org.apache.commons.lang3.time.FastDateParser#parseObject(String,ParsePosition)"],
    "org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#EnumerationSpliterator(long,int,Enumeration<T>)": ["org.apache.commons.lang3.stream.Streams.EnumerationSpliterator.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#setCharAt(int,char)": ["org.apache.commons.lang3.text.StrBuilder#length()"],
    "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.Validate.inclusiveBetween(T,T,Comparable<T>)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.toObject(short[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderTokenizer#getContent()": [
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrTokenizer#getContent()"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#open()": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nanoTime()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#open()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)"
    ],
    "org.apache.commons.lang3.BooleanUtils.values()": ["org.apache.commons.lang3.BooleanUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlTotalEntitySizeLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence[]...)"],
    "org.apache.commons.lang3.StringUtils.join(long[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int,double)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparator(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)"],
    "org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(CharSequence,CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.CharSequenceUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.checkLaterThan1(CharSequence,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#next()": ["org.apache.commons.lang3.text.StrTokenizer#hasNext()"],
    "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#between(A extends Comparable,A extends Comparable)": ["org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenOrdered(A extends Comparable,A extends Comparable)"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(double[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)"],
    "org.apache.commons.lang3.tuple.ImmutablePair.ofNonNull(L,R)": ["org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)"],
    "org.apache.commons.lang3.arch.Processor#is32Bit()": ["org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.asRuntimeException(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.eraseType(Throwable)"],
    "org.apache.commons.lang3.function.Failable.asPredicate(FailablePredicate<T, ?>)": ["org.apache.commons.lang3.function.Failable.test(FailablePredicate<T, E extends Throwable>,T)"],
    "org.apache.commons.lang3.SystemProperties.getJavaEndorsedDirs()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.stream.Streams.FailableStream#map(FailableFunction<T, R, ?>)": [
        "org.apache.commons.lang3.stream.Streams.FailableStream#FailableStream(Stream<T>)",
        "org.apache.commons.lang3.stream.Streams.FailableStream#assertNotTerminated()",
        "org.apache.commons.lang3.function.Failable.asFunction(FailableFunction<T, R, ?>)"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()": ["org.apache.commons.lang3.builder.HashCodeBuilder.<staticinit>()"],
    "org.apache.commons.lang3.stream.Streams.of(Enumeration<E>)": ["org.apache.commons.lang3.stream.Streams.EnumerationSpliterator#EnumerationSpliterator(long,int,Enumeration<T>)"],
    "org.apache.commons.lang3.time.StopWatch#getSplitTime()": [
        "org.apache.commons.lang3.time.StopWatch#getSplitNanoTime()",
        "org.apache.commons.lang3.time.StopWatch#nanosToMillis(long)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringInclude(Object,String[]...)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setIncludeFieldNames(String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(Object)"
    ],
    "org.apache.commons.lang3.tuple.MutableTriple.of(L,M,R)": ["org.apache.commons.lang3.tuple.MutableTriple#MutableTriple(L,M,R)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"],
    "org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setNullText(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setNullText(String)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setSummaryObjectStartText(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectStartText(String)"],
    "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#CallableBackgroundInitializer(Callable<T>)": [
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#checkCallable(Callable<T>)",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable<?>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,Iterable<T>)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#parsePattern()": [
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#TimeZoneNameRule(TimeZone,Locale,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#TwelveHourField(NumberRule)",
        "org.apache.commons.lang3.time.CalendarUtils.getInstance(Locale)",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#WeekYear(NumberRule)",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#CharacterLiteral(char)",
        "org.apache.commons.lang3.time.FastDatePrinter#selectNumberRule(int,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#TextField(int,String[])",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter#parseToken(String,int[])",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule.getRule(int)",
        "org.apache.commons.lang3.time.CalendarUtils#getStandaloneShortMonthNames()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#TwentyFourHourField(NumberRule)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#DayInWeekField(NumberRule)",
        "org.apache.commons.lang3.time.CalendarUtils#getStandaloneLongMonthNames()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#StringLiteral(String)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.<staticinit>()"
    ],
    "org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int)": ["org.apache.commons.lang3.Conversion.intToHexDigit(int)"],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilConcurrentForkJoinPoolCommonParallelism()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.tuple.Pair#toString()": [
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getRight()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getRight()",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#MutableInt()": ["org.apache.commons.lang3.mutable.MutableInt.<init>()"],
    "org.apache.commons.lang3.arch.Processor#isX86()": ["org.apache.commons.lang3.arch.Processor.Type.<staticinit>()"],
    "org.apache.commons.lang3.function.Failable.test(FailableBiPredicate<T, U, E extends Throwable>,T,U)": ["org.apache.commons.lang3.function.Failable.getAsBoolean(FailableBooleanSupplier<E extends Throwable>)"],
    "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.<init>()": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()"],
    "org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,Collection<String>)": [
        "org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#isCancelled()": [
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#isCancelled()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#isCancelled()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)": ["org.apache.commons.lang3.time.FastDatePrinter.appendFullDigits(Appendable,int,int)"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(long,String,TimeZone)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(char[])": ["org.apache.commons.lang3.text.StrBuilder#append(char[])"],
    "org.apache.commons.lang3.time.FastDateParser#parse(String)": [
        "org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition)",
        "org.apache.commons.lang3.time.FastDateParser.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.insert(int,int[],int[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(int[])",
        "org.apache.commons.lang3.ArrayUtils.clone(int[])"
    ],
    "org.apache.commons.lang3.StringUtils.removeIgnoreCase(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String,int)"
    ],
    "org.apache.commons.lang3.text.StrMatcher#isMatch(char[],int)": [
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)"
    ],
    "org.apache.commons.lang3.time.DateUtils.round(Object,int)": [
        "org.apache.commons.lang3.time.DateUtils.round(Date,int)",
        "org.apache.commons.lang3.time.DateUtils.round(Calendar,int)"
    ],
    "org.apache.commons.lang3.StringUtils.splitByCharacterType(String)": ["org.apache.commons.lang3.StringUtils.splitByCharacterType(String,boolean)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,long,long)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.Functions.accept(FailableConsumer<O, T extends Throwable>,O)": ["org.apache.commons.lang3.Functions.run(FailableRunnable<T extends Throwable>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendIdentityHashCode(StringBuffer,Object)": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#isUseIdentityHashCode()",
        "org.apache.commons.lang3.builder.ToStringStyle#isUseIdentityHashCode()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)",
        "org.apache.commons.lang3.builder.ToStringStyle.register(Object)"
    ],
    "org.apache.commons.lang3.StringUtils.getLevenshteinDistance(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#reduce(O,BinaryOperator<O>)": [
        "org.apache.commons.lang3.Streams.FailableStream#stream()",
        "org.apache.commons.lang3.Streams.FailableStream#makeTerminated()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,StrMatcher)": [
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#AtomicInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)": [
        "org.apache.commons.lang3.concurrent.AtomicInitializer.<init>()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy#isCheckIntervalFinished(EventCountCircuitBreaker,CheckIntervalData,long)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen#fetchCheckInterval(EventCountCircuitBreaker)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed#fetchCheckInterval(EventCountCircuitBreaker)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#getCheckIntervalStart()"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#createInvocationHandler()": ["org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#ProxyInvocationHandler()"],
    "org.apache.commons.lang3.SystemUtils.isOsVersionMatch(String,String)": [
        "org.apache.commons.lang3.JavaVersion.split(String)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.right(String,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.Range#isOverlappedBy(Range<T>)": ["org.apache.commons.lang3.Range#contains(T)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#accept(Field)": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableToIntFunction.nop()": ["org.apache.commons.lang3.function.FailableToIntFunction.<staticinit>()"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,boolean[],boolean[])": [
        "org.apache.commons.lang3.ArrayUtils.toObject(boolean[])",
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#JsonToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#setSizeEndText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle.<init>()",
        "org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectEndText(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setSizeStartText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setSizeStartText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setNullText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseIdentityHashCode(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparator(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectStartText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setArrayEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setContentEnd(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldNameValueSeparator(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setNullText(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setUseClassName(boolean)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setSummaryObjectStartText(String)",
        "org.apache.commons.lang3.builder.ToStringStyle#setFieldNameValueSeparator(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setSummaryObjectEndText(String)",
        "org.apache.commons.lang3.builder.StandardToStringStyle#setSizeEndText(String)"
    ],
    "org.apache.commons.lang3.RegExUtils.dotAllMatcher(String,String)": ["org.apache.commons.lang3.RegExUtils.dotAll(String)"],
    "org.apache.commons.lang3.time.AbstractFormatCache.getPatternForStyle(Integer,Integer,Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.AbstractFormatCache.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isUseShortClassName()": ["org.apache.commons.lang3.builder.ToStringStyle#isUseShortClassName()"],
    "org.apache.commons.lang3.BooleanUtils.toStringYesNo(boolean)": [
        "org.apache.commons.lang3.BooleanUtils.toString(boolean,String,String)",
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.LocaleUtils.isNumericAreaCode(String)": ["org.apache.commons.lang3.StringUtils.isNumeric(CharSequence)"],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#get()": [
        "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.CallableBackgroundInitializer#initialize()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#getNoInit()",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#initialize()"
    ],
    "org.apache.commons.lang3.math.Fraction#Fraction(int,int)": ["org.apache.commons.lang3.math.Fraction.<init>()"],
    "org.apache.commons.lang3.StringUtils.removeFirst(String,String)": [
        "org.apache.commons.lang3.StringUtils.replaceFirst(String,String,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.EnumUtils#EnumUtils()": ["org.apache.commons.lang3.EnumUtils.<init>()"],
    "org.apache.commons.lang3.StringUtils.defaultIfBlank(T extends CharSequence,T extends CharSequence)": ["org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"],
    "org.apache.commons.lang3.StringUtils.join(List<?>,char,int,int)": [
        "org.apache.commons.lang3.StringUtils.join(boolean[],char)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.StringUtils.join(char[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.SerializationUtils#SerializationUtils()": ["org.apache.commons.lang3.SerializationUtils.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(Type[])": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TzInfo#TzInfo(TimeZone,boolean)": ["org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy.TzInfo.<init>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)"
    ],
    "org.apache.commons.lang3.ArchUtils.init_Aarch_64Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.tuple.MutablePair#MutablePair(L,R)": [
        "org.apache.commons.lang3.tuple.Pair.<init>()",
        "org.apache.commons.lang3.tuple.MutablePair.<init>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpAuthNtlmDomain()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(CharSequence,CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.regionMatches(CharSequence,boolean,int,CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(char)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#ContextedRuntimeException()": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()"],
    "org.apache.commons.lang3.text.StrLookup#StrLookup()": ["org.apache.commons.lang3.text.StrLookup.<init>()"],
    "org.apache.commons.lang3.time.FastDateFormat#format(Object,StringBuffer,FieldPosition)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Object)"],
    "org.apache.commons.lang3.SystemProperties.getJavaSpecificationMaintenanceVersion()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#appendToString(String)": ["org.apache.commons.lang3.builder.ToStringStyle#appendToString(StringBuffer,String)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.<staticinit>()": ["org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#TimeZoneNumberRule(boolean)"],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#isOpen()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)"],
    "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.<staticinit>()": ["org.apache.commons.lang3.CharUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String,int,int)": ["org.apache.commons.lang3.text.StrBuilder#append(String,int,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,boolean[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,boolean)"],
    "org.apache.commons.lang3.CharUtils.<staticinit>()": ["org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)"],
    "org.apache.commons.lang3.ArchUtils.<staticinit>()": ["org.apache.commons.lang3.ArchUtils.init()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isUseFieldNames()": ["org.apache.commons.lang3.builder.ToStringStyle#isUseFieldNames()"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(Object[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(Object[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.BitField#getValue(int)": ["org.apache.commons.lang3.BitField#getRawValue(int)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,byte,byte)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.function.Suppliers.nul()": ["org.apache.commons.lang3.function.Suppliers.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence)": ["org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getJdkModulePath()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#map(FailableFunction<O, R, ?>)": [
        "org.apache.commons.lang3.Streams.FailableStream#FailableStream(Stream<O>)",
        "org.apache.commons.lang3.Streams.FailableStream#assertNotTerminated()",
        "org.apache.commons.lang3.Functions.asFunction(FailableFunction<I, O, ?>)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey#TimeZoneDisplayKey(TimeZone,boolean,int,Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey.<init>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object)": [
        "org.apache.commons.lang3.AnnotationUtils$ToStringStyle$1#getShortClassName(Class<?>)",
        "org.apache.commons.lang3.builder.ToStringStyle#getShortClassName(Class<?>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,long[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#filter(FailablePredicate<O, ?>)": [
        "org.apache.commons.lang3.Functions.asPredicate(FailablePredicate<I, ?>)",
        "org.apache.commons.lang3.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,byte)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte)"],
    "org.apache.commons.lang3.StringUtils.center(String,int)": ["org.apache.commons.lang3.StringUtils.center(String,int,char)"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException()": ["org.apache.commons.lang3.NotImplementedException.<init>()"],
    "org.apache.commons.lang3.function.FailableDoubleFunction.nop()": ["org.apache.commons.lang3.function.FailableDoubleFunction.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.split(String,String)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.ThreadUtils.findThreadGroups(Predicate<ThreadGroup>)": [
        "org.apache.commons.lang3.ThreadUtils.getSystemThreadGroup()",
        "org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroup,boolean,Predicate<ThreadGroup>)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(short[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.IntegerRange.of(Integer,Integer)": ["org.apache.commons.lang3.IntegerRange#IntegerRange(Integer,Integer)"],
    "org.apache.commons.lang3.tuple.Pair#getKey()": [
        "org.apache.commons.lang3.tuple.MutablePair#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutablePair#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder.SDiff#getLeft()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StringBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder)"
    ],
    "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.StringUtils.replace(String,String,String)",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringEscapeUtils.CsvEscaper.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder#toString()"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class<T>,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class<T>,Object[],Class<?>[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)"
    ],
    "org.apache.commons.lang3.time.CalendarUtils.<staticinit>()": ["org.apache.commons.lang3.time.CalendarUtils.getInstance()"],
    "org.apache.commons.lang3.EnumUtils.getEnumSystemProperty(Class<E extends Enum>,String,E extends Enum)": ["org.apache.commons.lang3.EnumUtils.getEnum(Class<E extends Enum>,String,E extends Enum)"],
    "org.apache.commons.lang3.math.IEEE754rUtils#IEEE754rUtils()": ["org.apache.commons.lang3.math.IEEE754rUtils.<init>()"],
    "org.apache.commons.lang3.function.FailableLongConsumer.nop()": ["org.apache.commons.lang3.function.FailableLongConsumer.<staticinit>()"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class<?>,String,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.toVarArgs(Method,Object[])",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])"
    ],
    "org.apache.commons.lang3.StringUtils.splitByWholeSeparator(String,String,int)": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.time.DateUtils.setSeconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#toString()": [
        "org.apache.commons.lang3.builder.ToStringBuilder#getObject()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getNullText()",
        "org.apache.commons.lang3.builder.ToStringBuilder#getStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle#getNullText()",
        "org.apache.commons.lang3.builder.ToStringBuilder#getStringBuffer()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendEnd(StringBuffer,Object)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport#initializeTransientFields(Class<L>,ClassLoader)": [
        "org.apache.commons.lang3.event.EventListenerSupport#createProxy(Class<L>,ClassLoader)",
        "org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)"
    ],
    "org.apache.commons.lang3.StringUtils.substring(String,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.math.NumberUtils.isZero(String,String)": ["org.apache.commons.lang3.math.NumberUtils.isAllZeros(String)"],
    "org.apache.commons.lang3.function.BooleanConsumer.nop()": ["org.apache.commons.lang3.function.BooleanConsumer.<staticinit>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(int[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(int)"],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#acquirePermit()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getLimit()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.charSetMatcher(String)": [
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#CharMatcher(char)",
        "org.apache.commons.lang3.text.StrMatcher.<staticinit>()",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#CharSetMatcher(char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ClassLoaderUtils.toString(ClassLoader)": ["org.apache.commons.lang3.ClassLoaderUtils.toString(URLClassLoader)"],
    "org.apache.commons.lang3.concurrent.ConstantInitializer#ConstantInitializer(T)": ["org.apache.commons.lang3.concurrent.ConstantInitializer.<init>()"],
    "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException()": ["org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(WildcardType)": ["org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getLowerBounds()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,float)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float)"],
    "org.apache.commons.lang3.StringUtils.isNumericSpace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,Calendar)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(long)": [
        "org.apache.commons.lang3.time.FastDatePrinter#applyRulesToString(Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()"
    ],
    "org.apache.commons.lang3.StringUtils.strip(String,String)": [
        "org.apache.commons.lang3.StringUtils.stripEnd(String,String)",
        "org.apache.commons.lang3.StringUtils.stripStart(String,String)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(Object,String[]...)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(Object)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#setExcludeFieldNames(String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()"
    ],
    "org.apache.commons.lang3.CharSetUtils#CharSetUtils()": ["org.apache.commons.lang3.CharSetUtils.<init>()"],
    "org.apache.commons.lang3.NotImplementedException#NotImplementedException(Throwable)": ["org.apache.commons.lang3.NotImplementedException#NotImplementedException(Throwable,String)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#build()": [
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#appendFields(Class<?>)",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getRight()",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#getLeft()",
        "org.apache.commons.lang3.builder.DiffBuilder#build()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkSerialFilterFactory()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.RandomStringUtils.<staticinit>()": ["org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"],
    "org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(char[])": [
        "org.apache.commons.lang3.text.StrTokenizer#reset(char[])",
        "org.apache.commons.lang3.text.StrTokenizer.getCSVClone()"
    ],
    "org.apache.commons.lang3.concurrent.BasicThreadFactory#initializeThread(Thread)": [
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#getPriority()",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#getNamingPattern()",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#getUncaughtExceptionHandler()",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#getDaemonFlag()"
    ],
    "org.apache.commons.lang3.LocaleUtils.isISO639LanguageCode(String)": ["org.apache.commons.lang3.StringUtils.isAllLowerCase(CharSequence)"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#parseFormatDescription(String,ParsePosition)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#getQuotedString(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#seekNonWs(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#next(ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T,ToStringStyle,boolean,boolean,Class<? super T>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(T,ToStringStyle,StringBuffer,Class<? super T>,boolean,boolean)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getTimeInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.Validate.validIndex(T extends CharSequence,int)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkJndiRmiObjectFactoriesFilter()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrMatcher.tabMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.text.StrTokenizer.getTSVInstance()": ["org.apache.commons.lang3.text.StrTokenizer.getTSVClone()"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,short)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,short)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.StringUtils.getCommonPrefix(String[]...)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,String)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.function.Failable.get(FailableSupplier<T, E extends Throwable>)": [
        "org.apache.commons.lang3.concurrent.ConstantInitializer#get()",
        "org.apache.commons.lang3.function.Failable.rethrow(Throwable)",
        "org.apache.commons.lang3.concurrent.LazyInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#get()"
    ],
    "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#ComparableCheckBuilder(A extends Comparable)": ["org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder.<init>()"],
    "org.apache.commons.lang3.time.FastDatePrinter#init()": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.<staticinit>()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter#parsePattern()",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#estimateLength()"
    ],
    "org.apache.commons.lang3.Functions.apply(FailableFunction<I, O, T extends Throwable>,I)": ["org.apache.commons.lang3.Functions.get(FailableSupplier<O, T extends Throwable>)"],
    "org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.isBlank(CharSequence)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.StringUtils.substringBefore(String,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockApplyUnlock(Supplier<Lock>,FailableFunction<O, T, ?>)": [
        "org.apache.commons.lang3.function.Failable.rethrow(Throwable)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class<?>,String,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class<?>,String,Object,boolean)"],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(float,float)": ["org.apache.commons.lang3.builder.EqualsBuilder#append(boolean[],boolean[])"],
    "org.apache.commons.lang3.StringUtils.replace(String,String,String)": ["org.apache.commons.lang3.StringUtils.replace(String,String,String,int)"],
    "org.apache.commons.lang3.reflect.MethodUtils.distance(Class<?>[],Class<?>[])": [
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>,boolean)",
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[],boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#changeStateAndStartNewCheckInterval(State)": [
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nanoTime()",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#changeState(State)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.CheckIntervalData#CheckIntervalData(int,long)"
    ],
    "org.apache.commons.lang3.Validate.notNaN(double,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#setCloser(FailableConsumer<T, ? extends Exception>)": [
        "org.apache.commons.lang3.builder.AbstractSupplier#asThis()",
        "org.apache.commons.lang3.function.FailableConsumer.nop()"
    ],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Date,int,TimeUnit)"],
    "org.apache.commons.lang3.StringUtils.join(char[],char)": ["org.apache.commons.lang3.StringUtils.join(char[],char,int,int)"],
    "org.apache.commons.lang3.text.StrBuilder#toCharArray()": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlResetSymbolTable()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)": [
        "org.apache.commons.lang3.ArrayUtils.clone(float[])",
        "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.remove(T[],int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#EventCountCircuitBreaker(int,long,TimeUnit)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#EventCountCircuitBreaker(int,long,TimeUnit,int)"],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StringBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder,int,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.function.FailableDoublePredicate.falsePredicate()": ["org.apache.commons.lang3.function.FailableDoublePredicate.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#leftString(int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaNetPreferIpv4Stack()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(double)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)"
    ],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper#NumericEntityEscaper()": ["org.apache.commons.lang3.text.translate.NumericEntityEscaper#NumericEntityEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,short)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,short)"],
    "org.apache.commons.lang3.ArrayUtils.toObject(double[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(double[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(double[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.parameterize(Class<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Type[]...)",
        "org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[])"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(float[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.create(O,ReadWriteLock)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.ReadWriteLockVisitor#ReadWriteLockVisitor(O,ReadWriteLock)"],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#prepareAcquire()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#startTimer()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#isShutdown()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#minimizeCapacity()": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Supplier<T>)"
    ],
    "org.apache.commons.lang3.ClassUtils.getPublicMethod(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.ClassUtils.isPublic(Class<?>)",
        "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>)",
        "org.apache.commons.lang3.ArrayUtils.toString(Object)",
        "org.apache.commons.lang3.ClassUtils.getAllSuperclasses(Class<?>)"
    ],
    "org.apache.commons.lang3.SystemProperties.getBoolean(String,BooleanSupplier)": ["org.apache.commons.lang3.SystemProperties.getProperty(String)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"],
    "org.apache.commons.lang3.SystemProperties#SystemProperties()": ["org.apache.commons.lang3.SystemProperties.<init>()"],
    "org.apache.commons.lang3.StringUtils.isNumeric(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.builder.ToStringStyle#setSizeEndText(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int)": ["org.apache.commons.lang3.Conversion.intToHexDigit(int)"],
    "org.apache.commons.lang3.ArrayUtils.addAll(long[],long[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(long[])"],
    "org.apache.commons.lang3.builder.CompareToBuilder#CompareToBuilder()": ["org.apache.commons.lang3.builder.CompareToBuilder.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getUserHome()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#lastIndexOf(char)": ["org.apache.commons.lang3.text.StrBuilder#lastIndexOf(char,int)"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object,boolean)"],
    "org.apache.commons.lang3.SystemUtils.getUserHome()": ["org.apache.commons.lang3.SystemProperties.getUserHome()"],
    "org.apache.commons.lang3.BooleanUtils.toBoolean(String)": ["org.apache.commons.lang3.BooleanUtils.toBooleanObject(String)"],
    "org.apache.commons.lang3.SystemProperties.getJavaRmiServerCodebase()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,TypeVariable<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,TypeVariable<?>,Map<TypeVariable<?>, Type>)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#format(Calendar,StringBuffer)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Calendar,StringBuffer)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(Object,Object,Comparator<?>)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.builder.CompareToBuilder#appendArray(Object,Object,Comparator<?>)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringInclude(Object,Collection<String>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringInclude(Object,String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)"
    ],
    "org.apache.commons.lang3.text.WordUtils.capitalize(String,char[]...)": [
        "org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],char)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[])",
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterChar(char)"
    ],
    "org.apache.commons.lang3.SystemUtils.isJavaVersionAtMost(JavaVersion)": [
        "org.apache.commons.lang3.SystemUtils.<staticinit>()",
        "org.apache.commons.lang3.JavaVersion#atMost(JavaVersion)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,Object)": [
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.Diff#toString()",
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#toString()",
        "org.apache.commons.lang3.text.StrBuilder#insert(int,int)",
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#toString()",
        "org.apache.commons.lang3.text.StrBuilder#insert(int,String)",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#toString()",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#toString()"
    ],
    "org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Class<?>)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)": ["org.apache.commons.lang3.math.IEEE754rUtils.max(float[]...)"],
    "org.apache.commons.lang3.text.StrBuilder#contains(String)": ["org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)"],
    "org.apache.commons.lang3.ArrayUtils.add(float[],float)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)": ["org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getRawType()"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[])": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(long[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.clone(short[])",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,float,float)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.BooleanUtils.isNotFalse(Boolean)": ["org.apache.commons.lang3.BooleanUtils.isFalse(Boolean)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendValueAsString(StringBuffer,String)": ["org.apache.commons.lang3.StringEscapeUtils.escapeJson(String)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)"],
    "org.apache.commons.lang3.ArrayUtils.removeAll(boolean[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)": ["org.apache.commons.lang3.text.StrBuilder#substring(int,int)"],
    "org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,double[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.Functions.call(FailableCallable<O, T extends Throwable>)": ["org.apache.commons.lang3.Functions.get(FailableSupplier<O, T extends Throwable>)"],
    "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getCloser()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#AtomicInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)",
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder#getInitializer()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>)": ["org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)"],
    "org.apache.commons.lang3.Streams.FailableStream#makeTerminated()": ["org.apache.commons.lang3.Streams.FailableStream#assertNotTerminated()"],
    "org.apache.commons.lang3.math.Fraction#divideBy(Fraction)": [
        "org.apache.commons.lang3.math.Fraction#multiplyBy(Fraction)",
        "org.apache.commons.lang3.math.Fraction#invert()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#hashCode()": ["org.apache.commons.lang3.time.GmtTimeZone#hashCode()"],
    "org.apache.commons.lang3.builder.ToStringStyle#setFieldNameValueSeparator(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#getQuotedString(String,ParsePosition)": ["org.apache.commons.lang3.text.ExtendedMessageFormat#appendQuotedString(String,ParsePosition,StringBuilder)"],
    "org.apache.commons.lang3.text.StrBuilder#appendln(String,Object[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(String,Object[]...)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#TwoDigitYearField()": ["org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Short[],short)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(Class<?>,Class<?>)": [
        "org.apache.commons.lang3.reflect.MemberUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(Class<?>)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,ThreadPredicate)": ["org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,Predicate<Thread>)"],
    "org.apache.commons.lang3.SystemProperties.getOsArch()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)": ["org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence,int)"],
    "org.apache.commons.lang3.ArrayUtils.shift(byte[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)"],
    "org.apache.commons.lang3.stream.Streams.stream(Collection<E>)": ["org.apache.commons.lang3.stream.Streams.failableStream(Collection<T>)"],
    "org.apache.commons.lang3.RandomUtils.nextLong(long)": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.mutable.MutableLong#MutableLong(String)": ["org.apache.commons.lang3.mutable.MutableLong.<init>()"],
    "org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String,int)": ["org.apache.commons.lang3.StringUtils.replace(String,String,String,int,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean,int)"],
    "org.apache.commons.lang3.SystemProperties.getHttpsProxyPort()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(short[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.RegExUtils#RegExUtils()": ["org.apache.commons.lang3.RegExUtils.<init>()"],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#setExternalExecutor(ExecutorService)": ["org.apache.commons.lang3.concurrent.BackgroundInitializer#isStarted()"],
    "org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.AppendableJoiner.joinA(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[]...)": ["org.apache.commons.lang3.AppendableJoiner.joinArray(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[])"],
    "org.apache.commons.lang3.text.StrMatcher.doubleQuoteMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(String)": ["org.apache.commons.lang3.text.StrBuilder#appendSeparator(String,int)"],
    "org.apache.commons.lang3.time.DateUtils.iterator(Object,int)": [
        "org.apache.commons.lang3.time.DateUtils.iterator(Date,int)",
        "org.apache.commons.lang3.time.DateUtils.iterator(Calendar,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaSystemClassLoader()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#toString()": ["org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"],
    "org.apache.commons.lang3.EnumUtils.checkBitVectorable(Class<E extends Enum>)": [
        "org.apache.commons.lang3.EnumUtils.<staticinit>()",
        "org.apache.commons.lang3.EnumUtils.asEnum(Class<E extends Enum>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float)": [
        "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float,int,RoundingMode)",
        "org.apache.commons.lang3.math.NumberUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.mutable.MutableShort#toShort()": ["org.apache.commons.lang3.mutable.MutableShort#shortValue()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.forEach(Throwable,Consumer<Throwable>)": ["org.apache.commons.lang3.exception.ExceptionUtils.stream(Throwable)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#appendSuper(String)": ["org.apache.commons.lang3.builder.ToStringStyle#appendSuper(StringBuffer,String)"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#appendQuotedString(String,ParsePosition,StringBuilder)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#next(ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.CompositeFormat#parseObject(String,ParsePosition)": [
        "org.apache.commons.lang3.text.CompositeFormat#parseObject(String,ParsePosition)",
        "org.apache.commons.lang3.time.FastDateFormat#parseObject(String,ParsePosition)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle#DefaultToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle.<init>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilCurrencyData()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth#StrategyAndWidth(Strategy,int)": ["org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth.<init>()"],
    "org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal)": ["org.apache.commons.lang3.math.NumberUtils.toDouble(BigDecimal,double)"],
    "org.apache.commons.lang3.math.NumberUtils.toInt(String)": ["org.apache.commons.lang3.math.NumberUtils.toInt(String,int)"],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeCsv(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendCyclicObject(StringBuffer,String,Object)": ["org.apache.commons.lang3.ObjectUtils.identityToString(StringBuffer,Object)"],
    "org.apache.commons.lang3.text.StrTokenizer#getTokenList()": ["org.apache.commons.lang3.text.StrTokenizer#checkTokenized()"],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(StrBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#AtomicSafeInitializer(FailableSupplier<T, ConcurrentException>,FailableConsumer<T, ConcurrentException>)": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer(FailableSupplier<? extends T, ? extends Exception>,FailableConsumer<? super T, ? extends Exception>)",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.<init>()"
    ],
    "org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream#resolveClass(ObjectStreamClass)": ["org.apache.commons.lang3.ClassUtils.getPrimitiveClass(String)"],
    "org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,String)": ["org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,String)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(long[])"],
    "org.apache.commons.lang3.RandomUtils#RandomUtils()": ["org.apache.commons.lang3.RandomUtils.<init>()"],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double)": [
        "org.apache.commons.lang3.math.NumberUtils.<staticinit>()",
        "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double,int,RoundingMode)"
    ],
    "org.apache.commons.lang3.Streams.FailableStream#collect(Collector<? super O, A, R>)": [
        "org.apache.commons.lang3.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.Streams.FailableStream#stream()"
    ],
    "org.apache.commons.lang3.RuntimeEnvironment.inDocker()": ["org.apache.commons.lang3.RuntimeEnvironment.containsLine(String,String)"],
    "org.apache.commons.lang3.AppendableJoiner.joinSB(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[]...)": [
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)",
        "org.apache.commons.lang3.AppendableJoiner.joinArray(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,T[])"
    ],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#LockVisitor(O,L,Supplier<Lock>,Supplier<Lock>)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor.<init>()"],
    "org.apache.commons.lang3.BooleanUtils.and(Boolean[]...)": [
        "org.apache.commons.lang3.BooleanUtils.and(boolean[]...)",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])",
        "org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#EqualsBuilder()": ["org.apache.commons.lang3.builder.EqualsBuilder.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class<T>,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.getVarArgs(Object[],Class<?>[])",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])",
        "org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(Class<T>,Class<?>[]...)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrSubstitutor#replace(CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)"],
    "org.apache.commons.lang3.function.Failable#Failable()": ["org.apache.commons.lang3.function.Failable.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte[],byte)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.function.FailablePredicate.truePredicate()": ["org.apache.commons.lang3.function.FailablePredicate.<staticinit>()"],
    "org.apache.commons.lang3.Validate.exclusiveBetween(T,T,Comparable<T>,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(Object)": [
        "org.apache.commons.lang3.builder.IDKey#IDKey(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer.<init>()": [
        "org.apache.commons.lang3.text.StrMatcher.splitMatcher()",
        "org.apache.commons.lang3.text.StrMatcher.noneMatcher()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(char)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(char)"
    ],
    "org.apache.commons.lang3.tuple.ImmutableTriple.emptyArray()": ["org.apache.commons.lang3.tuple.ImmutableTriple.<staticinit>()"],
    "org.apache.commons.lang3.function.FailableLongPredicate.truePredicate()": ["org.apache.commons.lang3.function.FailableLongPredicate.<staticinit>()"],
    "org.apache.commons.lang3.builder.IDKey#IDKey(Object)": ["org.apache.commons.lang3.builder.IDKey.<init>()"],
    "org.apache.commons.lang3.text.StrSubstitutor#resolveVariable(String,StrBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrLookup.SystemPropertiesStrLookup#lookup(String)",
        "org.apache.commons.lang3.text.StrSubstitutor#getVariableResolver()",
        "org.apache.commons.lang3.text.StrLookup.MapStrLookup#lookup(String)"
    ],
    "org.apache.commons.lang3.function.Failable.asFunction(FailableFunction<T, R, ?>)": ["org.apache.commons.lang3.function.Failable.apply(FailableFunction<T, R, E extends Throwable>,T)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendEnd(StringBuffer,Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)",
        "org.apache.commons.lang3.builder.ToStringStyle#removeLastFieldSeparator(StringBuffer)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendContentEnd(StringBuffer)"
    ],
    "org.apache.commons.lang3.Functions.get(FailableSupplier<O, T extends Throwable>)": ["org.apache.commons.lang3.Functions.rethrow(Throwable)"],
    "org.apache.commons.lang3.text.StrBuilder#contains(StrMatcher)": ["org.apache.commons.lang3.text.StrBuilder#indexOf(StrMatcher,int)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,byte[],byte[])": [
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.ArrayUtils.toObject(byte[])"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,Calendar)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,double)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int,double)"],
    "org.apache.commons.lang3.StringUtils.normalizeSpace(String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.Executable.of(Method)": ["org.apache.commons.lang3.reflect.MemberUtils.Executable#Executable(Method)"],
    "org.apache.commons.lang3.ObjectUtils.Null#Null()": ["org.apache.commons.lang3.ObjectUtils.Null.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type)"
    ],
    "org.apache.commons.lang3.time.StopWatch#StopWatch(String)": ["org.apache.commons.lang3.time.StopWatch.<init>()"],
    "org.apache.commons.lang3.StringUtils.join(float[],char,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#ReflectionDiffBuilder(T,T,ToStringStyle)": [
        "org.apache.commons.lang3.builder.DiffBuilder.builder()",
        "org.apache.commons.lang3.builder.DiffBuilder.Builder#setLeft(T)",
        "org.apache.commons.lang3.builder.DiffBuilder.Builder#setRight(T)",
        "org.apache.commons.lang3.builder.ReflectionDiffBuilder#ReflectionDiffBuilder(DiffBuilder<T>,String[])",
        "org.apache.commons.lang3.builder.DiffBuilder.Builder#setStyle(ToStringStyle)",
        "org.apache.commons.lang3.builder.DiffBuilder.Builder#build()"
    ],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#ContextedRuntimeException(String,Throwable,ExceptionContext)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.compare(String,String)": ["org.apache.commons.lang3.StringUtils.compare(String,String,boolean)"],
    "org.apache.commons.lang3.time.StopWatch.createStarted()": [
        "org.apache.commons.lang3.time.StopWatch#start()",
        "org.apache.commons.lang3.time.StopWatch#StopWatch()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(long[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,long[],Boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])"
    ],
    "org.apache.commons.lang3.math.Fraction#reduce()": [
        "org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)",
        "org.apache.commons.lang3.math.Fraction.<staticinit>()",
        "org.apache.commons.lang3.math.Fraction.getFraction(int,int)",
        "org.apache.commons.lang3.math.Fraction#equals(Object)"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.format(long,String,Locale)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.StringEscapeUtils.unescapeEcmaScript(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.builder.ToStringStyle.unregister(Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.ToStringStyle.getRegistry()"
    ],
    "org.apache.commons.lang3.StringUtils.getFuzzyDistance(CharSequence,CharSequence,Locale)": ["org.apache.commons.lang3.text.StrBuilder#toString()"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])": ["org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[],boolean)"],
    "org.apache.commons.lang3.SystemProperties.getUserName(String)": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String,String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],char,char)": [
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteChar(char)",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[],char)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicInitializer#AtomicInitializer()": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.<init>()"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#cancel(boolean)": [
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#cancel(boolean)",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#cancel(boolean)"
    ],
    "org.apache.commons.lang3.StringUtils.substringBeforeLast(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,double[])",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,double[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,double[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils#MethodUtils()": ["org.apache.commons.lang3.reflect.MethodUtils.<init>()"],
    "org.apache.commons.lang3.BooleanUtils.and(boolean[]...)": ["org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#setContextValue(String,Object)": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#setContextValue(String,Object)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#setContextValue(String,Object)",
        "org.apache.commons.lang3.exception.ContextedException#setContextValue(String,Object)"
    ],
    "org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)": [
        "org.apache.commons.lang3.ClassUtils.useFull(int,int,int,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaProtocolHandlerPkgs()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.IntegerRange.of(int,int)": ["org.apache.commons.lang3.IntegerRange.of(Integer,Integer)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,short[],short[])": [
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)",
        "org.apache.commons.lang3.ArrayUtils.toObject(short[])"
    ],
    "org.apache.commons.lang3.Validate.finite(double,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.function.Suppliers#Suppliers()": ["org.apache.commons.lang3.function.Suppliers.<init>()"],
    "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Method)": [
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.ClassUtils.isPublic(Class<?>)",
        "org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)",
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>[]...)"
    ],
    "org.apache.commons.lang3.JavaVersion.get(String)": [
        "org.apache.commons.lang3.JavaVersion.<staticinit>()",
        "org.apache.commons.lang3.JavaVersion.toFloatVersion(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getAppleAwtEnableTemplateImages()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,double)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.StringUtils.trimToNull(String)": [
        "org.apache.commons.lang3.StringUtils.trim(String)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(int)": ["org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(BitSet)"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(int)": ["org.apache.commons.lang3.text.StrBuilder#append(char)"],
    "org.apache.commons.lang3.mutable.MutableShort#compareTo(MutableShort)": ["org.apache.commons.lang3.math.NumberUtils.compare(short,short)"],
    "org.apache.commons.lang3.time.DateUtils.round(Date,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)",
        "org.apache.commons.lang3.time.DateUtils.toCalendar(Date)"
    ],
    "org.apache.commons.lang3.event.EventUtils.bindEventsToMethod(Object,String,Object,Class<L>,String[]...)": [
        "org.apache.commons.lang3.event.EventUtils.addEventListener(Object,Class<L>,L)",
        "org.apache.commons.lang3.event.EventUtils.EventBindingInvocationHandler#EventBindingInvocationHandler(Object,String,String[])"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilLoggingConfigClass()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder.Builder#setToStringFormat(String)": ["org.apache.commons.lang3.builder.DiffBuilder.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#CopyQuotedStrategy(String)": [
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy.<init>()",
        "org.apache.commons.lang3.time.FastDateParser.Strategy.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(int[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.ThreadUtils.<staticinit>()": ["org.apache.commons.lang3.ThreadUtils.AlwaysTruePredicate#AlwaysTruePredicate()"],
    "org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(Class<T>,ParameterizedType,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getOwnerType()",
        "org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(Class<T>,ParameterizedType,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()"
    ],
    "org.apache.commons.lang3.SystemUtils.getJavaIoTmpDir()": ["org.apache.commons.lang3.SystemProperties.getJavaIoTmpdir()"],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper#NumericEntityEscaper(int,int,boolean)": [
        "org.apache.commons.lang3.text.translate.NumericEntityEscaper.<init>()",
        "org.apache.commons.lang3.text.translate.CodePointTranslator.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(int[],int)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.text.StrBuilder#appendFixedWidthPadRight(Object,int,char)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.toString(Object,String)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.RandomUtils.nextDouble()": ["org.apache.commons.lang3.RandomUtils.nextDouble(double,double)"],
    "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#getChars(int,int,char[],int)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.time.DateUtils.setYears(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Class<T>,Class<?>[]...)": ["org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Constructor<T>)"],
    "org.apache.commons.lang3.Functions.asPredicate(FailablePredicate<I, ?>)": ["org.apache.commons.lang3.Functions.test(FailablePredicate<O, T extends Throwable>,O)"],
    "org.apache.commons.lang3.BitField#setByteBoolean(byte,boolean)": [
        "org.apache.commons.lang3.BitField#setByte(byte)",
        "org.apache.commons.lang3.BitField#clearByte(byte)"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String)": ["org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)"],
    "org.apache.commons.lang3.math.NumberUtils.toDouble(String)": ["org.apache.commons.lang3.math.NumberUtils.toDouble(String,double)"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaIoTmpdir()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.appendRecursiveTypes(StringBuilder,int[],Type[])": [
        "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(T[],int[]...)",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,Iterable<T>)",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,T[]...)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isDefaultFullDetail()": ["org.apache.commons.lang3.builder.ToStringStyle#isDefaultFullDetail()"],
    "org.apache.commons.lang3.exception.ContextedException#addContextValue(String,Object)": [
        "org.apache.commons.lang3.exception.ContextedException#addContextValue(String,Object)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#addContextValue(String,Object)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#addContextValue(String,Object)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,byte[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,byte[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte[],Boolean)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(T[],int,T)": [
        "org.apache.commons.lang3.ObjectUtils.getClass(T)",
        "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])",
        "org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"
    ],
    "org.apache.commons.lang3.Validate.isInstanceOf(Class<?>,Object,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[])": ["org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)"],
    "org.apache.commons.lang3.ObjectUtils.toString(Supplier<Object>,Supplier<String>)": [
        "org.apache.commons.lang3.ObjectUtils.toString(Supplier<Object>,Supplier<String>)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#betweenOrderedExclusive(A extends Comparable,A extends Comparable)": [
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#greaterThan(A extends Comparable)",
        "org.apache.commons.lang3.compare.ComparableUtils.ComparableCheckBuilder#lessThan(A extends Comparable)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#getTimeZone()": ["org.apache.commons.lang3.time.FastDatePrinter#getTimeZone()"],
    "org.apache.commons.lang3.CharUtils.unicodeEscaped(Character)": ["org.apache.commons.lang3.CharUtils.unicodeEscaped(char)"],
    "org.apache.commons.lang3.SystemProperties.getHttpKeepAliveTimeServer()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.arch.Processor#isPPC()": ["org.apache.commons.lang3.arch.Processor.Type.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.add(float[],int,float)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.builder.DiffResult.<staticinit>()": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_UNESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#setArrayEnd(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(char,int)": ["org.apache.commons.lang3.text.StrBuilder#append(char)"],
    "org.apache.commons.lang3.Validate.notNull(T,String,Object[]...)": ["org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"],
    "org.apache.commons.lang3.CharRange.isNotIn(char,char)": ["org.apache.commons.lang3.CharRange#CharRange(char,char,boolean)"],
    "org.apache.commons.lang3.StringUtils.difference(String,String)": [
        "org.apache.commons.lang3.StringUtils.indexOfDifference(CharSequence,CharSequence)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaAwtPrinterjob()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean)"],
    "org.apache.commons.lang3.function.MethodInvokers#MethodInvokers()": ["org.apache.commons.lang3.function.MethodInvokers.<init>()"],
    "org.apache.commons.lang3.Validate.notEmpty(T extends Collection)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toFloat(String)": ["org.apache.commons.lang3.math.NumberUtils.toFloat(String,float)"],
    "org.apache.commons.lang3.RandomStringUtils.randomGraph(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)"],
    "org.apache.commons.lang3.time.StopWatch#StopWatch()": ["org.apache.commons.lang3.time.StopWatch#StopWatch(String)"],
    "org.apache.commons.lang3.ThreadUtils.AlwaysTruePredicate#AlwaysTruePredicate()": ["org.apache.commons.lang3.ThreadUtils.AlwaysTruePredicate.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArchUtils.init()": [
        "org.apache.commons.lang3.ArchUtils.init_RISCV_32Bit()",
        "org.apache.commons.lang3.ArchUtils.init_PPC_32Bit()",
        "org.apache.commons.lang3.ArchUtils.init_Aarch_64Bit()",
        "org.apache.commons.lang3.ArchUtils.init_IA64_32Bit()",
        "org.apache.commons.lang3.ArchUtils.init_PPC_64Bit()",
        "org.apache.commons.lang3.ArchUtils.init_X86_32Bit()",
        "org.apache.commons.lang3.ArchUtils.init_IA64_64Bit()",
        "org.apache.commons.lang3.ArchUtils.init_RISCV_64Bit()",
        "org.apache.commons.lang3.ArchUtils.init_X86_64Bit()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(double[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,double[],Boolean)"
    ],
    "org.apache.commons.lang3.StringUtils.joinWith(String,Object[]...)": ["org.apache.commons.lang3.StringUtils.join(Object[],String)"],
    "org.apache.commons.lang3.StringUtils.getLevenshteinDistance(CharSequence,CharSequence,int)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()"
    ],
    "org.apache.commons.lang3.Functions.test(FailablePredicate<O, T extends Throwable>,O)": ["org.apache.commons.lang3.Functions.getAsBoolean(FailableBooleanSupplier<T extends Throwable>)"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextValues(String)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextValues(String)",
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextValues(String)",
        "org.apache.commons.lang3.exception.ContextedException#getContextValues(String)"
    ],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder#readField(Field,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,short[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.AppendableJoiner.joinIterable(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,Iterable<T>)": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#next()",
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#next()",
        "org.apache.commons.lang3.builder.DiffResult#iterator()",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#next()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkJndiObjectFactoriesFilter()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.tuple.ImmutableTriple#ImmutableTriple(L,M,R)": [
        "org.apache.commons.lang3.tuple.ImmutableTriple.<init>()",
        "org.apache.commons.lang3.tuple.Triple.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.overlay(String,String,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[]...)": [
        "org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],Random)",
        "org.apache.commons.lang3.RandomStringUtils.random()"
    ],
    "org.apache.commons.lang3.math.Fraction.<staticinit>()": ["org.apache.commons.lang3.math.Fraction#Fraction(int,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object,Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object,Boolean)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilPrefsPreferencesFactory()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#indexOf(char)": ["org.apache.commons.lang3.text.StrBuilder#indexOf(char,int)"],
    "org.apache.commons.lang3.StringUtils.replacePattern(String,String,String)": ["org.apache.commons.lang3.RegExUtils.replacePattern(String,String,String)"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(float[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,Map<?, ?>)": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#getContentStart()",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#getContentStart()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getContentEnd()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendInternal(StringBuffer,String,Object,boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#getContentEnd()",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.function.FailableIntPredicate.truePredicate()": ["org.apache.commons.lang3.function.FailableIntPredicate.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Double[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)": ["org.apache.commons.lang3.mutable.MutableInt.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.reverse(Object[])": ["org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int)"],
    "org.apache.commons.lang3.SystemProperties.getStdOutEncoding()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#walkInterfaces(Set<Class<?>>,Class<?>)": ["org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#walkInterfaces(Set<Class<?>>,Class<?>)"],
    "org.apache.commons.lang3.text.StrBuilder#setLength(int)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker#checkState()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker#isOpen()"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(Object,ToStringStyle)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object,ToStringStyle)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.<init>()"
    ],
    "org.apache.commons.lang3.mutable.MutableShort#MutableShort()": ["org.apache.commons.lang3.mutable.MutableShort.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#setNullText(String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)": ["org.apache.commons.lang3.text.translate.NumericEntityEscaper#NumericEntityEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(boolean[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,boolean[],Boolean)"
    ],
    "org.apache.commons.lang3.mutable.MutableByte#MutableByte(Number)": ["org.apache.commons.lang3.mutable.MutableByte.<init>()"],
    "org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence)": ["org.apache.commons.lang3.StringUtils.isBlank(CharSequence)"],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerMaxReqTime()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class<?>,String)": ["org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Class<?>,String,boolean)"],
    "org.apache.commons.lang3.BooleanUtils.toStringTrueFalse(boolean)": [
        "org.apache.commons.lang3.BooleanUtils.toString(boolean,String,String)",
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<T>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.TypeUtils.toString(Type)",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,T[]...)",
        "org.apache.commons.lang3.reflect.TypeUtils.isCyclical(Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.classToString(Class<T>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.Range#isStartedBy(T)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.StringUtils.replaceEach(String,String[],String[])": ["org.apache.commons.lang3.StringUtils.replaceEach(String,String[],String[],boolean,int)"],
    "org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)"],
    "org.apache.commons.lang3.stream.Streams.FailableStream#filter(FailablePredicate<T, ?>)": [
        "org.apache.commons.lang3.function.Failable.asPredicate(FailablePredicate<T, ?>)",
        "org.apache.commons.lang3.stream.Streams.FailableStream#assertNotTerminated()"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,Class<? super T>,String[]...)": [
        "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(Object,Class<?>,HashCodeBuilder,boolean,String[])",
        "org.apache.commons.lang3.builder.HashCodeBuilder#HashCodeBuilder(int,int)",
        "org.apache.commons.lang3.builder.HashCodeBuilder#toHashCode()"
    ],
    "org.apache.commons.lang3.CharUtils.toString(char)": ["org.apache.commons.lang3.CharUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.StopWatch#getTime()": [
        "org.apache.commons.lang3.time.StopWatch#getNanoTime()",
        "org.apache.commons.lang3.time.StopWatch#nanosToMillis(long)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#createPattern(StringBuilder)": ["org.apache.commons.lang3.time.FastDateParser.PatternStrategy#createPattern(String)"],
    "org.apache.commons.lang3.tuple.MutablePair#setValue(R)": [
        "org.apache.commons.lang3.tuple.MutablePair#setRight(R)",
        "org.apache.commons.lang3.tuple.MutablePair#getRight()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpAuthProxyingDisabledSchemes()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#isException(String)": ["org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#checkName(String)"],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(CharSequence,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(CharSequence,int,int)",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkTlsServerSignatureSchemes()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.CharSet#getCharRanges()": ["org.apache.commons.lang3.CharRange.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.add(int[],int,int)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.Functions.asBiConsumer(FailableBiConsumer<O1, O2, ?>)": ["org.apache.commons.lang3.Functions.accept(FailableBiConsumer<O1, O2, T extends Throwable>,O1,O2)"],
    "org.apache.commons.lang3.builder.RecursiveToStringStyle#RecursiveToStringStyle()": [
        "org.apache.commons.lang3.builder.ToStringStyle#ToStringStyle()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.text.FormattableUtils#FormattableUtils()": ["org.apache.commons.lang3.text.FormattableUtils.<init>()"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object[],Class<?>[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)"
    ],
    "org.apache.commons.lang3.StringUtils.firstNonEmpty(T extends CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence)"],
    "org.apache.commons.lang3.text.StrSubstitutor#replaceIn(StrBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.event.EventListenerSupport.create(Class<T>)": ["org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport(Class<L>)"],
    "org.apache.commons.lang3.SystemProperties.getJavaNioChannelsDefaultThreadPoolThreadFactory()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(Object)": [
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder#appendArray(Object)"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[])": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.CircuitBreakingException#CircuitBreakingException(String,Throwable)": ["org.apache.commons.lang3.concurrent.CircuitBreakingException.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type)": [
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getRawType()",
        "org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getOwnerType()",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()"
    ],
    "org.apache.commons.lang3.time.CalendarUtils#CalendarUtils(Calendar,Locale)": ["org.apache.commons.lang3.time.CalendarUtils.<init>()"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,short[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerNoDelay()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.RandomStringUtils.randomNumeric(int,int)": [
        "org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)",
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)"
    ],
    "org.apache.commons.lang3.util.FluentBitSet#FluentBitSet()": ["org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(BitSet)"],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#applyWriteLocked(FailableFunction<O, T, ?>)": ["org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockApplyUnlock(Supplier<Lock>,FailableFunction<O, T, ?>)"],
    "org.apache.commons.lang3.function.Failable.tryWithResources(FailableRunnable<? extends Throwable>,FailableRunnable<? extends Throwable>[]...)": ["org.apache.commons.lang3.function.Failable.tryWithResources(FailableRunnable<? extends Throwable>,FailableConsumer<Throwable, ? extends Throwable>,FailableRunnable<? extends Throwable>[]...)"],
    "org.apache.commons.lang3.AppendableJoiner#joinA(A extends Appendable,Iterable<T>)": ["org.apache.commons.lang3.AppendableJoiner.joinIterable(A extends Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,Iterable<T>)"],
    "org.apache.commons.lang3.time.DateUtils.getFragmentInHours(Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.getFragment(Calendar,int,TimeUnit)"],
    "org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Type[]...)",
        "org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[])"
    ],
    "org.apache.commons.lang3.builder.DiffResult#DiffResult(T,T,List<Diff<?>>,ToStringStyle,String)": [
        "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffResult.<init>()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintStream)"],
    "org.apache.commons.lang3.SystemProperties.getJavaxSmartCardIoTerminalFactoryDefaultType()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.getMessage(Throwable)": [
        "org.apache.commons.lang3.StringUtils.defaultString(String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getShortClassName(Object,String)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendDetail(StringBuffer,String,char)": ["org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendValueAsString(StringBuffer,String)"],
    "org.apache.commons.lang3.CharRange.is(char)": ["org.apache.commons.lang3.CharRange#CharRange(char,char,boolean)"],
    "org.apache.commons.lang3.text.StrBuilder#deleteFirst(String)": [
        "org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)",
        "org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.upperCase(String,Locale)": ["org.apache.commons.lang3.LocaleUtils.toLocale(Locale)"],
    "org.apache.commons.lang3.text.StrBuilder#appendPadding(int,char)": ["org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"],
    "org.apache.commons.lang3.tuple.Pair#accept(FailableBiConsumer<L, R, E extends Throwable>)": [
        "org.apache.commons.lang3.tuple.Pair#getKey()",
        "org.apache.commons.lang3.tuple.Pair#getValue()"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed.<init>()": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategy.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)": [
        "org.apache.commons.lang3.text.StrBuilder.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder.<init>()"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer#BackgroundInitializer(ExecutorService)": [
        "org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer#AbstractConcurrentInitializer()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#setExternalExecutor(ExecutorService)",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.<init>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(short[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(StringBuffer)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(String)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer)",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(String,Throwable)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)",
        "org.apache.commons.lang3.concurrent.ConcurrentException.<init>()"
    ],
    "org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredStaticField(Class<?>,String,Object,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)"
    ],
    "org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(String,String,int)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.concurrent.LazyInitializer#isInitialized()": ["org.apache.commons.lang3.concurrent.LazyInitializer.<staticinit>()"],
    "org.apache.commons.lang3.Streams.FailableStream#FailableStream(Stream<O>)": ["org.apache.commons.lang3.Streams.FailableStream.<init>()"],
    "org.apache.commons.lang3.StringUtils.substringBetween(String,String,String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getFieldSeparator()": ["org.apache.commons.lang3.builder.ToStringStyle#getFieldSeparator()"],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,int)": ["org.apache.commons.lang3.text.StrBuilder#insert(int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,short[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder.<init>()": ["org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder.<init>()"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#MultiBackgroundInitializerResults(Map<String, BackgroundInitializer<?>>,Map<String, Object>,Map<String, ConcurrentException>)": ["org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults.<init>()"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(int[],int[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(int,int)"],
    "org.apache.commons.lang3.ArrayUtils.isSorted(float[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.time.DateUtils.ceiling(Date,int)": [
        "org.apache.commons.lang3.time.DateUtils.ModifyType.<staticinit>()",
        "org.apache.commons.lang3.time.DateUtils.modify(Calendar,int,ModifyType)",
        "org.apache.commons.lang3.time.DateUtils.toCalendar(Date)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder.Builder#build()": ["org.apache.commons.lang3.builder.DiffBuilder#DiffBuilder(T,T,ToStringStyle,boolean,String)"],
    "org.apache.commons.lang3.StringUtils.matches(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.ArrayFill.fill(int[],int)"
    ],
    "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder.<init>()": ["org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.AbstractBuilder.<init>()"],
    "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#appendTo(Appendable,Calendar)": ["org.apache.commons.lang3.time.FastDatePrinter.appendDigits(Appendable,int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientKeepAliveTimeout()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shift(char[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)"
    ],
    "org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)",
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)"
    ],
    "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,Iterable<T>)": ["org.apache.commons.lang3.AppendableJoiner.joinI(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>,Iterable<T>)"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#equals(Object)": ["org.apache.commons.lang3.ObjectUtils.notEqual(Object,Object)"],
    "org.apache.commons.lang3.compare.ComparableUtils.max(A extends Comparable,A extends Comparable)": ["org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable,boolean)"],
    "org.apache.commons.lang3.SystemProperties.getHttpAuthDigestValidateProxy()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVmInfo()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.util.FluentBitSet#get(int,int)": ["org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(BitSet)"],
    "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.StringUtils.replace(String,String,String)",
        "org.apache.commons.lang3.StringEscapeUtils.CsvUnescaper.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence)",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)"
    ],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#ready()": ["org.apache.commons.lang3.text.StrBuilder#size()"],
    "org.apache.commons.lang3.text.WordUtils.capitalizeFully(String,char[]...)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.LocaleUtils.availableLocaleSet()": ["org.apache.commons.lang3.LocaleUtils.SyncAvoid.<staticinit>()"],
    "org.apache.commons.lang3.RegExUtils.replacePattern(String,String,String)": ["org.apache.commons.lang3.RegExUtils.dotAllMatcher(String,String)"],
    "org.apache.commons.lang3.concurrent.ConstantInitializer#get()": ["org.apache.commons.lang3.concurrent.ConstantInitializer#getObject()"],
    "org.apache.commons.lang3.compare.ComparableUtils.min(A extends Comparable,A extends Comparable)": ["org.apache.commons.lang3.ObjectUtils.compare(T extends Comparable,T extends Comparable,boolean)"],
    "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)": ["org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.addAll(char[],char[]...)": ["org.apache.commons.lang3.ArrayUtils.clone(char[])"],
    "org.apache.commons.lang3.function.FailableLongUnaryOperator.nop()": ["org.apache.commons.lang3.function.FailableLongUnaryOperator.<staticinit>()"],
    "org.apache.commons.lang3.LocaleUtils.countriesByLanguage(String)": [
        "org.apache.commons.lang3.LocaleUtils.availableLocaleList(Predicate<Locale>)",
        "org.apache.commons.lang3.LocaleUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.insert(int,short[],short[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(short[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(StringBuffer)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayEnd()": ["org.apache.commons.lang3.builder.ToStringStyle#getArrayEnd()"],
    "org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,float[],float[])": [
        "org.apache.commons.lang3.ArrayUtils.toObject(float[])",
        "org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#toInteger()": ["org.apache.commons.lang3.mutable.MutableInt#intValue()"],
    "org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition,Calendar)": [
        "org.apache.commons.lang3.time.FastDateParser.CopyQuotedStrategy#parse(FastDateParser,Calendar,String,ParsePosition,int)",
        "org.apache.commons.lang3.time.FastDateParser.StrategyAndWidth#getMaxWidth(ListIterator<StrategyAndWidth>)",
        "org.apache.commons.lang3.time.FastDateParser.NumberStrategy#parse(FastDateParser,Calendar,String,ParsePosition,int)",
        "org.apache.commons.lang3.text.StrTokenizer#hasNext()",
        "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#parse(FastDateParser,Calendar,String,ParsePosition,int)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Date,B extends Appendable)": [
        "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)",
        "org.apache.commons.lang3.time.FastDatePrinter#newCalendar()"
    ],
    "org.apache.commons.lang3.StringUtils.remove(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.replace(String,String,String,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.Validate.validState(boolean)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefix(String)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefixMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.stringMatcher(String)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getAnnotation(Method,Class<A extends Annotation>,boolean,boolean)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)",
        "org.apache.commons.lang3.reflect.MethodUtils.getAllSuperclassesAndInterfaces(Class<?>)"
    ],
    "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State$State$1#oppositeState()": ["org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextLabels()": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#getContextLabels()",
        "org.apache.commons.lang3.exception.ContextedException#getContextLabels()",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#getContextLabels()"
    ],
    "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)": ["org.apache.commons.lang3.arch.Processor.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.isInstance(Object,Type)": ["org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#incrementAndCheckState(Integer)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#performStateCheck(int)"],
    "org.apache.commons.lang3.SystemProperties.getFileEncoding()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.split(String,String,int)": ["org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#shutdown()": ["org.apache.commons.lang3.concurrent.TimedSemaphore#getExecutorService()"],
    "org.apache.commons.lang3.EnumUtils.getEnumMap(Class<E extends Enum>)": ["org.apache.commons.lang3.EnumUtils.getEnumMap(Class<E extends Enum>,Function<E extends Enum, K>)"],
    "org.apache.commons.lang3.Validate.isTrue(boolean,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.time.FastDateParser.appendDisplayNames(Calendar,Locale,int,StringBuilder)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDateParser.simpleQuote(StringBuilder,String)",
        "org.apache.commons.lang3.time.FastDateParser.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaNetSocksUserName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseMessage(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.getMessage(Throwable)",
        "org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(Throwable)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getContentEnd()": ["org.apache.commons.lang3.builder.ToStringStyle#getContentEnd()"],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerMaxRspTime()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.clone(T[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.function.MethodInvokers.asBiConsumer(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.text.StrBuilder#append(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#spacer(int)": ["org.apache.commons.lang3.StringUtils.repeat(char,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,Object[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffix(char)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffixMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneDisplayKey#equals(Object)": ["org.apache.commons.lang3.time.GmtTimeZone#equals(Object)"],
    "org.apache.commons.lang3.tuple.Pair.of(L,R)": ["org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)"],
    "org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int)": ["org.apache.commons.lang3.Conversion.intToHexDigit(int)"],
    "org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(Calendar,Calendar,int)": ["org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)"],
    "org.apache.commons.lang3.ArrayUtils.add(double[],int,double)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.ArrayUtils.isSorted(long[])": [
        "org.apache.commons.lang3.math.NumberUtils.compare(long,long)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.concurrent.LazyInitializer#getTypedException(Exception)": ["org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(Throwable)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,int,Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendInternal(StringBuffer,String,Object,boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(CharSequence,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder,int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientKeepAliveTimeoutH2()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#getStrategy(char,int,Calendar)": [
        "org.apache.commons.lang3.time.FastDateParser#getLocaleSpecificStrategy(int,Calendar)",
        "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.<staticinit>()",
        "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.getStrategy(int)",
        "org.apache.commons.lang3.time.FastDateParser.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.Fraction.getFraction(int,int)": ["org.apache.commons.lang3.math.Fraction#Fraction(int,int)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.mutable.MutableDouble#toDouble()": ["org.apache.commons.lang3.mutable.MutableDouble#doubleValue()"],
    "org.apache.commons.lang3.SystemProperties.getJdbcDrivers()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaNetSocksPassword()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastTimeZone.getTimeZone(String)": ["org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String)"],
    "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,int[])": [
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#resetIndent()",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.RecursiveToStringStyle#appendDetail(StringBuffer,String,Object)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean)": ["org.apache.commons.lang3.text.WordUtils.wrap(String,int,String,boolean,String)"],
    "org.apache.commons.lang3.builder.ToStringStyle#setSummaryObjectStartText(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.text.StrSubstitutor#checkCyclicSubstitution(String,List<String>)": [
        "org.apache.commons.lang3.text.StrBuilder#appendWithSeparators(Iterable<?>,String)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.StringUtils.substringAfterLast(String,String)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ClassUtils.getShortClassName(Object,String)": ["org.apache.commons.lang3.ClassUtils.getShortClassName(String)"],
    "org.apache.commons.lang3.exception.UncheckedInterruptedException#UncheckedInterruptedException(Throwable)": [
        "org.apache.commons.lang3.exception.UncheckedInterruptedException.<init>()",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.min(short[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilPropertyResourceBundleEncoding()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.shuffle(int[],Random)": ["org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,float[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,float[],Boolean)"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.min(float[]...)": ["org.apache.commons.lang3.math.IEEE754rUtils.min(float[]...)"],
    "org.apache.commons.lang3.SystemProperties.getLineSeparator(Supplier<String>)": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier<String>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.remove(int[],int)",
        "org.apache.commons.lang3.ArrayUtils.clone(int[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.time.FastDatePrinter#applyRules(Calendar,B extends Appendable)": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,Calendar)",
        "org.apache.commons.lang3.exception.ExceptionUtils.asRuntimeException(Throwable)",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#appendTo(Appendable,Calendar)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(Class<?>,Class<?>)": [
        "org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(Class<?>,Class<?>)",
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.function.Failable.call(FailableCallable<V, E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.get(FailableSupplier<T, E extends Throwable>)"],
    "org.apache.commons.lang3.SystemProperties.getOsName()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendln(char[],int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNewLine()",
        "org.apache.commons.lang3.text.StrBuilder#append(char[],int,int)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroup,boolean,ThreadGroupPredicate)": ["org.apache.commons.lang3.ThreadUtils.findThreadGroups(ThreadGroup,boolean,Predicate<ThreadGroup>)"],
    "org.apache.commons.lang3.reflect.FieldUtils.readDeclaredStaticField(Class<?>,String,boolean)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class<?>,String,boolean)",
        "org.apache.commons.lang3.reflect.FieldUtils.readStaticField(Field,boolean)"
    ],
    "org.apache.commons.lang3.EnumUtils.generateBitVector(Class<E extends Enum>,Iterable<? extends E extends Enum>)": [
        "org.apache.commons.lang3.EnumUtils.<staticinit>()",
        "org.apache.commons.lang3.EnumUtils.checkBitVectorable(Class<E extends Enum>)"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.Interfaces.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)"
    ],
    "org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,CharSequence[]...)": ["org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,boolean,CharSequence[]...)"],
    "org.apache.commons.lang3.StringUtils.substring(String,int,int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.EnumUtils.generateBitVector(Class<E extends Enum>,E extends Enum[]...)": [
        "org.apache.commons.lang3.EnumUtils.generateBitVector(Class<E extends Enum>,Iterable<? extends E extends Enum>)",
        "org.apache.commons.lang3.Validate.noNullElements(T[])"
    ],
    "org.apache.commons.lang3.SystemProperties.getFileSeparator()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object,Object,Class<?>)",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(Object,Object)"
    ],
    "org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,String)": [
        "org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.findRecursiveTypes(ParameterizedType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()",
        "org.apache.commons.lang3.ArrayUtils.add(int[],int)",
        "org.apache.commons.lang3.reflect.TypeUtils.containsVariableTypeSameParametrizedTypeBound(TypeVariable<?>,ParameterizedType)"
    ],
    "org.apache.commons.lang3.RandomStringUtils#RandomStringUtils()": ["org.apache.commons.lang3.RandomStringUtils.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder#build()": [
        "org.apache.commons.lang3.concurrent.BasicThreadFactory#BasicThreadFactory(Builder)",
        "org.apache.commons.lang3.concurrent.BasicThreadFactory.Builder#reset()"
    ],
    "org.apache.commons.lang3.tuple.Triple#hashCode()": [
        "org.apache.commons.lang3.tuple.ImmutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.MutableTriple#getMiddle()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getRight()",
        "org.apache.commons.lang3.tuple.MutableTriple#getLeft()",
        "org.apache.commons.lang3.tuple.ImmutableTriple#getMiddle()"
    ],
    "org.apache.commons.lang3.StringUtils.getDigits(String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.time.DurationUtils.of(FailableConsumer<Instant, E extends Throwable>)": [
        "org.apache.commons.lang3.time.DurationUtils.since(Temporal)",
        "org.apache.commons.lang3.time.DurationUtils.now(FailableConsumer<Instant, E extends Throwable>)"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class<?>,String[]...)": [
        "org.apache.commons.lang3.builder.CompareToBuilder#toComparison()",
        "org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class<?>,CompareToBuilder,boolean,String[])",
        "org.apache.commons.lang3.builder.CompareToBuilder#CompareToBuilder()"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeUnescaper#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)"
    ],
    "org.apache.commons.lang3.BitField#setBoolean(int,boolean)": [
        "org.apache.commons.lang3.BitField#clear(int)",
        "org.apache.commons.lang3.BitField#set(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,boolean[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean[],Boolean)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadById(long)": ["org.apache.commons.lang3.ThreadUtils.findThreads(Predicate<Thread>)"],
    "org.apache.commons.lang3.Functions.asCallable(FailableCallable<O, ?>)": ["org.apache.commons.lang3.Functions.call(FailableCallable<O, T extends Throwable>)"],
    "org.apache.commons.lang3.Streams.ArrayCollector#characteristics()": ["org.apache.commons.lang3.Streams.ArrayCollector.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.removeStart(String,char)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.function.MethodInvokers.asFunction(Method)": ["org.apache.commons.lang3.function.MethodInvokers.asInterfaceInstance(Class<T>,Method)"],
    "org.apache.commons.lang3.time.DateFormatUtils#DateFormatUtils()": ["org.apache.commons.lang3.time.DateFormatUtils.<init>()"],
    "org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[])": ["org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)"],
    "org.apache.commons.lang3.builder.DiffBuilder.Builder.<init>()": ["org.apache.commons.lang3.builder.DiffBuilder.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlElementAttributeLimit()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.StringUtils.join(long[],char)": ["org.apache.commons.lang3.StringUtils.join(long[],char,int,int)"],
    "org.apache.commons.lang3.SystemProperties.getSocksProxyPort()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String)": [
        "org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)",
        "org.apache.commons.lang3.math.NumberUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.math.NumberUtils.max(byte[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,long[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,long)"],
    "org.apache.commons.lang3.stream.Streams.FailableStream#reduce(T,BinaryOperator<T>)": [
        "org.apache.commons.lang3.stream.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()"
    ],
    "org.apache.commons.lang3.ObjectUtils.anyNotNull(Object[]...)": ["org.apache.commons.lang3.ObjectUtils.firstNonNull(T[]...)"],
    "org.apache.commons.lang3.ThreadUtils.predicateThread(String)": ["org.apache.commons.lang3.ThreadUtils.namePredicate(String,Function<T, String>)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,double,double)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy.<staticinit>()": ["org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy#ISO8601TimeZoneStrategy(String)"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#ContextedRuntimeException(String)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#appendSeparator(String,int)": ["org.apache.commons.lang3.text.StrBuilder#append(String)"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.time.DurationUtils.getNanosOfMiili(Duration)": ["org.apache.commons.lang3.time.DurationUtils.getNanosOfMilli(Duration)"],
    "org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.ArrayUtils.clone(float[])",
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen#fetchCheckInterval(EventCountCircuitBreaker)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#getClosingInterval()"],
    "org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)"],
    "org.apache.commons.lang3.mutable.MutableBoolean#MutableBoolean()": ["org.apache.commons.lang3.mutable.MutableBoolean.<init>()"],
    "org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(String,String,int)": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)"],
    "org.apache.commons.lang3.CharSet#add(String)": [
        "org.apache.commons.lang3.CharRange.isIn(char,char)",
        "org.apache.commons.lang3.CharRange.isNotIn(char,char)",
        "org.apache.commons.lang3.CharRange.isNot(char)",
        "org.apache.commons.lang3.CharRange.is(char)"
    ],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#startTimer()": [
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getUnit()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getExecutorService()",
        "org.apache.commons.lang3.concurrent.TimedSemaphore#getPeriod()"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.<staticinit>()": [
        "org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone()",
        "org.apache.commons.lang3.time.FastDateFormat.getInstance(String)",
        "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,Locale)"
    ],
    "org.apache.commons.lang3.ClassUtils#ClassUtils()": ["org.apache.commons.lang3.ClassUtils.<init>()"],
    "org.apache.commons.lang3.arch.Processor#isIA64()": ["org.apache.commons.lang3.arch.Processor.Type.<staticinit>()"],
    "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#getNoInit()": ["org.apache.commons.lang3.concurrent.AtomicSafeInitializer.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDateFormat#format(Date,B extends Appendable)": ["org.apache.commons.lang3.time.FastDatePrinter#format(Date,B extends Appendable)"],
    "org.apache.commons.lang3.ObjectUtils.identityToString(StrBuilder,Object)": [
        "org.apache.commons.lang3.ObjectUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#append(char)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)"
    ],
    "org.apache.commons.lang3.ClassUtils.getPackageName(Object,String)": ["org.apache.commons.lang3.ClassUtils.getPackageName(String)"],
    "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefix(char)": [
        "org.apache.commons.lang3.text.StrMatcher.charMatcher(char)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefixMatcher(StrMatcher)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException(Throwable)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.checkedException(Throwable)",
        "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.StringUtils.containsAny(CharSequence,char[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.Validate.finite(double)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(long[])",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.Range#fit(T)": [
        "org.apache.commons.lang3.Range#isBefore(T)",
        "org.apache.commons.lang3.Range#isAfter(T)"
    ],
    "org.apache.commons.lang3.ObjectUtils.toString(T,Supplier<String>)": ["org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"],
    "org.apache.commons.lang3.StringEscapeUtils.escapeHtml3(String)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator#translate(CharSequence)",
        "org.apache.commons.lang3.StringEscapeUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.concurrent.locks.LockingVisitors.LockVisitor#lockAcceptUnlock(Supplier<Lock>,FailableConsumer<O, ?>)": [
        "org.apache.commons.lang3.function.Failable.rethrow(Throwable)",
        "org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)": [
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVmSpecificationVendor()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.Functions.test(FailableBiPredicate<O1, O2, T extends Throwable>,O1,O2)": ["org.apache.commons.lang3.Functions.getAsBoolean(FailableBooleanSupplier<T extends Throwable>)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.Token.containsTokenWithValue(Token[],Object)": ["org.apache.commons.lang3.time.DurationFormatUtils.Token#getValue()"],
    "org.apache.commons.lang3.mutable.MutableBoolean#compareTo(MutableBoolean)": ["org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)"],
    "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int,int)": [
        "org.apache.commons.lang3.RandomUtils.nextInt(int,int)",
        "org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#isJsonArray(String)": [
        "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayEnd()",
        "org.apache.commons.lang3.builder.ToStringStyle#getArrayStart()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getArrayStart()",
        "org.apache.commons.lang3.builder.ToStringStyle#getArrayEnd()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Long[],long)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlXsltcIsStandalone()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(long[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(long)"],
    "org.apache.commons.lang3.text.StrBuilder#toCharArray(int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#validateRange(int,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.tuple.ImmutablePair.left(L)": ["org.apache.commons.lang3.tuple.ImmutablePair.of(L,R)"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper#translate(int,Writer)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(String)",
        "org.apache.commons.lang3.text.translate.UnicodeEscaper#toUtf16Escape(int)",
        "org.apache.commons.lang3.text.translate.JavaUnicodeEscaper#toUtf16Escape(int)"
    ],
    "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()": ["org.apache.commons.lang3.mutable.MutableObject#getValue()"],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.function.Failable.accept(FailableConsumer<T, E extends Throwable>,T)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isUseClassName()": ["org.apache.commons.lang3.builder.ToStringStyle#isUseClassName()"],
    "org.apache.commons.lang3.ThreadUtils.findThreadsByName(String,String)": [
        "org.apache.commons.lang3.ThreadUtils.predicateThread(String)",
        "org.apache.commons.lang3.ThreadUtils.predicateThreadGroup(String)",
        "org.apache.commons.lang3.ThreadUtils.findThreadGroups(Predicate<ThreadGroup>)",
        "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,Predicate<Thread>)"
    ],
    "org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(Class<?>)": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.shuffle(short[])": [
        "org.apache.commons.lang3.ArrayUtils.shuffle(Object[],Random)",
        "org.apache.commons.lang3.ArrayUtils.random()"
    ],
    "org.apache.commons.lang3.exception.UncheckedReflectiveOperationException#UncheckedReflectiveOperationException(Throwable)": [
        "org.apache.commons.lang3.exception.UncheckedReflectiveOperationException.<init>()",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(short[],short[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(short,short)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.createStrategyMap()": [
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State.<staticinit>()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed.<init>()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen.<init>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.quoteMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition)": ["org.apache.commons.lang3.time.FastDateParser#parse(String,ParsePosition,Calendar)"],
    "org.apache.commons.lang3.exception.ContextedException#getMessage()": ["org.apache.commons.lang3.exception.ContextedException#getFormattedExceptionMessage(String)"],
    "org.apache.commons.lang3.text.StrBuilder#replaceAll(StrMatcher,String)": ["org.apache.commons.lang3.text.StrBuilder#replace(StrMatcher,String,int,int,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder.getDefaultStyle()": ["org.apache.commons.lang3.builder.ToStringBuilder.<staticinit>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)": ["org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)"],
    "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#StrBuilderWriter()": ["org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter.<init>()"],
    "org.apache.commons.lang3.builder.ToStringStyle#setNullText(String)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.exception.ContextedException#ContextedException()": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedException.<init>()"
    ],
    "org.apache.commons.lang3.time.AbstractFormatCache#getTimeInstance(int,TimeZone,Locale)": ["org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(int,int,TimeZone,Locale)"],
    "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#getFormat(String)": ["org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#replace(int,int,String)": [
        "org.apache.commons.lang3.text.StrBuilder#replaceImpl(int,int,int,String,int)",
        "org.apache.commons.lang3.text.StrBuilder#validateRange(int,int)",
        "org.apache.commons.lang3.StringUtils.length(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setUseFieldNames(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setUseFieldNames(boolean)"],
    "org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field)": ["org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field,boolean)"],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>)": [
        "org.apache.commons.lang3.text.StrLookup.mapLookup(Map<String, V>)",
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,StrMatcher,StrMatcher,char)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()"
    ],
    "org.apache.commons.lang3.exception.UncheckedIllegalAccessException#UncheckedIllegalAccessException(Throwable)": [
        "org.apache.commons.lang3.exception.UncheckedIllegalAccessException.<init>()",
        "org.apache.commons.lang3.exception.UncheckedReflectiveOperationException#UncheckedReflectiveOperationException(Throwable)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,Calendar)": [
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#appendTo(Appendable,int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#appendTo(Appendable,int)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#FastDateParser(String,TimeZone,Locale)": ["org.apache.commons.lang3.time.FastDateParser#FastDateParser(String,TimeZone,Locale,Date)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getSizeStartText()": ["org.apache.commons.lang3.builder.ToStringStyle#getSizeStartText()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class<? extends Throwable>,int,boolean)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(int[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,int[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#build()": ["org.apache.commons.lang3.builder.DiffResult#DiffResult(T,T,List<Diff<?>>,ToStringStyle,String)"],
    "org.apache.commons.lang3.arch.Processor#isRISCV()": ["org.apache.commons.lang3.arch.Processor.Type.<staticinit>()"],
    "org.apache.commons.lang3.time.DateUtils.addSeconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,char)": [
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String)",
        "org.apache.commons.lang3.text.StrTokenizer#setDelimiterChar(char)"
    ],
    "org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDatePrinter#format(Object)": [
        "org.apache.commons.lang3.time.FastDatePrinter#format(Calendar)",
        "org.apache.commons.lang3.time.FastDatePrinter#format(Date)",
        "org.apache.commons.lang3.ClassUtils.getName(Object,String)",
        "org.apache.commons.lang3.time.FastDatePrinter#format(long)"
    ],
    "org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#StringLiteral(String)": ["org.apache.commons.lang3.time.FastDatePrinter.StringLiteral.<init>()"],
    "org.apache.commons.lang3.Functions.getAsBoolean(FailableBooleanSupplier<T extends Throwable>)": ["org.apache.commons.lang3.Functions.rethrow(Throwable)"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,Object[],Object[])": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone)": ["org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,TimeZone,Locale)"],
    "org.apache.commons.lang3.time.StopWatch#start()": ["org.apache.commons.lang3.time.StopWatch.State.<staticinit>()"],
    "org.apache.commons.lang3.exception.CloneFailedException#CloneFailedException(Throwable)": ["org.apache.commons.lang3.exception.CloneFailedException.<init>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.getAllFields(Class<?>)": [
        "org.apache.commons.lang3.reflect.FieldUtils.getAllFieldsList(Class<?>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[]...)": [
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#CharMatcher(char)",
        "org.apache.commons.lang3.text.StrMatcher.<staticinit>()",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#CharSetMatcher(char[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.get(T[],int,T)": ["org.apache.commons.lang3.ArrayUtils.isArrayIndexValid(T[],int)"],
    "org.apache.commons.lang3.EnumUtils.getEnum(Class<E extends Enum>,String)": ["org.apache.commons.lang3.EnumUtils.getEnum(Class<E extends Enum>,String,E extends Enum)"],
    "org.apache.commons.lang3.text.WordUtils.initials(String)": ["org.apache.commons.lang3.text.WordUtils.initials(String,char[]...)"],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpClientEnableAllMethodRetry()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.add(T[],T)": ["org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(Object,Class<?>)"],
    "org.apache.commons.lang3.StringUtils.removeStart(String,String)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(Object[],Object[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.concurrent.TimedSemaphore#TimedSemaphore(long,TimeUnit,int)": ["org.apache.commons.lang3.concurrent.TimedSemaphore#TimedSemaphore(ScheduledExecutorService,long,TimeUnit,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,byte[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>)": ["org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>,Class<?>,boolean)"],
    "org.apache.commons.lang3.compare.ObjectToStringComparator.<staticinit>()": ["org.apache.commons.lang3.compare.ObjectToStringComparator.<init>()"],
    "org.apache.commons.lang3.function.MethodInvokers.unreflectUnchecked(Method)": [
        "org.apache.commons.lang3.exception.UncheckedIllegalAccessException#UncheckedIllegalAccessException(Throwable)",
        "org.apache.commons.lang3.function.MethodInvokers.unreflect(Method)"
    ],
    "org.apache.commons.lang3.Streams.ArrayCollector#ArrayCollector(Class<O>)": ["org.apache.commons.lang3.Streams.ArrayCollector.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.truncate(Object,int)": [
        "org.apache.commons.lang3.time.DateUtils.truncate(Date,int)",
        "org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.SerializationUtils.roundtrip(T extends Serializable)": [
        "org.apache.commons.lang3.SerializationUtils.deserialize(byte[])",
        "org.apache.commons.lang3.SerializationUtils.serialize(Serializable)"
    ],
    "org.apache.commons.lang3.Range.of(T extends Comparable,T extends Comparable)": ["org.apache.commons.lang3.Range.of(T,T,Comparator<T>)"],
    "org.apache.commons.lang3.ArrayUtils.insert(int,byte[],byte[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(byte[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder#append(short[],short[])": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(short,short)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.time.DateUtils.addMinutes(Date,int)": ["org.apache.commons.lang3.time.DateUtils.add(Date,int,int)"],
    "org.apache.commons.lang3.builder.DiffResult#toString()": [
        "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffResult.<staticinit>()",
        "org.apache.commons.lang3.builder.DiffResult#toString(ToStringStyle)"
    ],
    "org.apache.commons.lang3.Validate.validIndex(T extends Collection,int)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.exception.ContextedRuntimeException#ContextedRuntimeException(Throwable)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext.<init>()",
        "org.apache.commons.lang3.exception.ContextedRuntimeException.<init>()"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#EventCountCircuitBreaker(int,long,TimeUnit,int)": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#EventCountCircuitBreaker(int,long,TimeUnit,int,long,TimeUnit)"],
    "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String)": [
        "org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)",
        "org.apache.commons.lang3.reflect.FieldUtils.getField(Class<?>,String,boolean)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,boolean)": [
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)",
        "org.apache.commons.lang3.text.StrBuilder#validateIndex(int)"
    ],
    "org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member)": ["org.apache.commons.lang3.reflect.MemberUtils.isPublic(Member)"],
    "org.apache.commons.lang3.ObjectUtils.getIfNull(T,Supplier<T>)": ["org.apache.commons.lang3.function.Suppliers.get(Supplier<T>)"],
    "org.apache.commons.lang3.SystemProperties.getJavaClassPath()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.join(T[]...)": ["org.apache.commons.lang3.StringUtils.join(Object[],char)"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ExecutionException)": [
        "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException(String,Throwable)",
        "org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T)"
    ],
    "org.apache.commons.lang3.ArrayUtils.insert(int,T[],T[]...)": [
        "org.apache.commons.lang3.ArrayUtils.newInstance(Class<T>,int)",
        "org.apache.commons.lang3.ArrayUtils.clone(T[])",
        "org.apache.commons.lang3.ArrayUtils.getComponentType(T[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.SystemProperties.getSocksProxyHost()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.stream.Streams.failableStream(Collection<T>)": [
        "org.apache.commons.lang3.stream.Streams.failableStream(Stream<T>)",
        "org.apache.commons.lang3.stream.Streams.of(Collection<E>)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,int[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,int[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(CharBuffer)": [
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#append(double)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,long[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,long[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,long[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,boolean[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#build()": [
        "org.apache.commons.lang3.builder.ToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String)": [
        "org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object[],Class<?>[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.notNull(T)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(byte)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte)"],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.function.Failable.asBiConsumer(FailableBiConsumer<T, U, ?>)": ["org.apache.commons.lang3.function.Failable.accept(FailableBiConsumer<T, U, E extends Throwable>,T,U)"],
    "org.apache.commons.lang3.text.StrBuilder#deleteCharAt(int)": ["org.apache.commons.lang3.text.StrBuilder#deleteImpl(int,int,int)"],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder.Builder#setExcludeFieldNames(String[]...)": ["org.apache.commons.lang3.builder.ReflectionDiffBuilder.toExcludeFieldNames(String[])"],
    "org.apache.commons.lang3.RandomUtils.nextFloat()": ["org.apache.commons.lang3.RandomUtils.nextFloat(float,float)"],
    "org.apache.commons.lang3.mutable.MutableByte#MutableByte(byte)": ["org.apache.commons.lang3.mutable.MutableByte.<init>()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.rethrow(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.eraseType(Throwable)"],
    "org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Object,String)": ["org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Class<?>)"],
    "org.apache.commons.lang3.time.FastDatePrinter#equals(Object)": ["org.apache.commons.lang3.time.GmtTimeZone#equals(Object)"],
    "org.apache.commons.lang3.text.StrBuilder#indexOf(StrMatcher,int)": [
        "org.apache.commons.lang3.text.StrMatcher.StringMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.NoMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharSetMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.TrimMatcher#isMatch(char[],int,int,int)",
        "org.apache.commons.lang3.text.StrMatcher.CharMatcher#isMatch(char[],int,int,int)"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#MutableInt(Number)": ["org.apache.commons.lang3.mutable.MutableInt.<init>()"],
    "org.apache.commons.lang3.StringUtils.endsWithIgnoreCase(CharSequence,CharSequence)": ["org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence,boolean)"],
    "org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport(Class<L>)": ["org.apache.commons.lang3.event.EventListenerSupport#EventListenerSupport(Class<L>,ClassLoader)"],
    "org.apache.commons.lang3.SystemProperties.getOrgOpenJdkJavaUtilStreamTripwire()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.clone(boolean[])"
    ],
    "org.apache.commons.lang3.text.StrMatcher.splitMatcher()": ["org.apache.commons.lang3.text.StrMatcher.<staticinit>()"],
    "org.apache.commons.lang3.ObjectUtils.median(T extends Comparable[]...)": [
        "org.apache.commons.lang3.Validate.noNullElements(T[])",
        "org.apache.commons.lang3.Validate.notEmpty(T[])"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,char)": [
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)",
        "org.apache.commons.lang3.text.StrBuilder#validateIndex(int)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle#readResolve()": ["org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#TwentyFourHourField(NumberRule)": ["org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField.<init>()"],
    "org.apache.commons.lang3.Validate.notEmpty(T extends Collection,String,Object[]...)": [
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(Class<?>)": ["org.apache.commons.lang3.ClassUtils.isPublic(Class<?>)"],
    "org.apache.commons.lang3.function.FailableToDoubleBiFunction.nop()": ["org.apache.commons.lang3.function.FailableToDoubleBiFunction.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.add(byte[],int,byte)": ["org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class<?>)"],
    "org.apache.commons.lang3.time.FastDatePrinter#FastDatePrinter(String,TimeZone,Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDatePrinter#init()",
        "org.apache.commons.lang3.time.FastDatePrinter.<init>()"
    ],
    "org.apache.commons.lang3.time.DateUtils.iterator(Calendar,int)": [
        "org.apache.commons.lang3.time.DateUtils.DateIterator#DateIterator(Calendar,Calendar)",
        "org.apache.commons.lang3.time.DateUtils.truncate(Calendar,int)",
        "org.apache.commons.lang3.time.DateUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Short[])": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object)": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object,Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object,Boolean)"
    ],
    "org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.matches(CharSequence,CharSequence)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(ConcurrentMap<K, V>,K,ConcurrentInitializer<V>)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(ConcurrentMap<K, V>,K,V)",
        "org.apache.commons.lang3.concurrent.ConstantInitializer#get()",
        "org.apache.commons.lang3.concurrent.LazyInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.BackgroundInitializer#get()",
        "org.apache.commons.lang3.concurrent.LazyInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer#get()",
        "org.apache.commons.lang3.concurrent.AtomicSafeInitializer.Builder#get()",
        "org.apache.commons.lang3.concurrent.AtomicInitializer#get()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(boolean)": ["org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"],
    "org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces)": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#next()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#next()",
        "org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)",
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#next()",
        "org.apache.commons.lang3.builder.DiffResult#iterator()",
        "org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map<TypeVariable<?>, Type>,Type)",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>)",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.tuple.ImmutableTriple.ofNonNull(L,M,R)": ["org.apache.commons.lang3.tuple.ImmutableTriple.of(L,M,R)"],
    "org.apache.commons.lang3.Range#isAfter(T)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)"
    ],
    "org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.StringUtils.isAlpha(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ArrayUtils.reverse(int[])": ["org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)"],
    "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,float[])": ["org.apache.commons.lang3.builder.ToStringStyle#appendSummarySize(StringBuffer,String,int)"],
    "org.apache.commons.lang3.AnnotationUtils.hashCode(Annotation)": [
        "org.apache.commons.lang3.AnnotationUtils.hashMember(String,Object)",
        "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkIncludeInExceptions()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getNetworkAddressCacheStaleTtl()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#performStateCheck(int)": [
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isOpen(State)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyClosed#isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#changeStateAndStartNewCheckInterval(State)",
        "org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.State$State$1#oppositeState()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nanoTime()",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#nextCheckIntervalData(int,CheckIntervalData,State,long)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.stateStrategy(State)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.StateStrategyOpen#isStateTransition(EventCountCircuitBreaker,CheckIntervalData,CheckIntervalData)",
        "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#updateCheckIntervalData(CheckIntervalData,CheckIntervalData)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(int[])",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(char[])": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#append(char[])"
    ],
    "org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class<T>,Object[],Class<?>[])": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Class<T>,Class<?>[]...)",
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Class<?>[])"
    ],
    "org.apache.commons.lang3.StringUtils.uncapitalize(String)": ["org.apache.commons.lang3.StringUtils.length(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.concurrent.ConstantInitializer#equals(Object)": ["org.apache.commons.lang3.concurrent.ConstantInitializer#getObject()"],
    "org.apache.commons.lang3.exception.UncheckedException#UncheckedException(Throwable)": ["org.apache.commons.lang3.exception.UncheckedException.<init>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaNetPreferIpv6Addresses()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle#getShortClassName(Class<?>)": ["org.apache.commons.lang3.ClassUtils.getShortClassName(Class<?>)"],
    "org.apache.commons.lang3.CharRange#CharRange(char,char,boolean)": ["org.apache.commons.lang3.CharRange.<init>()"],
    "org.apache.commons.lang3.Validate.validIndex(T extends CharSequence,int,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.text.translate.CodePointTranslator.<init>()": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()"],
    "org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#getInitializer(String)": ["org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.MultiBackgroundInitializerResults#checkName(String)"],
    "org.apache.commons.lang3.BitField#setByte(byte)": ["org.apache.commons.lang3.BitField#set(int)"],
    "org.apache.commons.lang3.ClassUtils.getCanonicalName(Class<?>)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getCanonicalName(Class<?>,String)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,String,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream#ClassLoaderAwareObjectInputStream(InputStream,ClassLoader)": ["org.apache.commons.lang3.SerializationUtils.ClassLoaderAwareObjectInputStream.<init>()"],
    "org.apache.commons.lang3.SystemUtils.isOsMatch(String,String,String,String)": [
        "org.apache.commons.lang3.SystemUtils.isOsNameMatch(String,String)",
        "org.apache.commons.lang3.SystemUtils.isOsVersionMatch(String,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.arraycopy(T,int,int,int,Function<Integer, T>)"
    ],
    "org.apache.commons.lang3.util.FluentBitSet#FluentBitSet(BitSet)": ["org.apache.commons.lang3.util.FluentBitSet.<init>()"],
    "org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object)": ["org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[]...)": [
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.clone(long[])",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(long[])"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,Class<T extends Throwable>)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class<T extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.tuple.Triple.emptyArray()": ["org.apache.commons.lang3.tuple.Triple.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])": ["org.apache.commons.lang3.ArrayUtils.getLength(Object)"],
    "org.apache.commons.lang3.Range#containsRange(Range<T>)": ["org.apache.commons.lang3.Range#contains(T)"],
    "org.apache.commons.lang3.CharRange.isIn(char,char)": ["org.apache.commons.lang3.CharRange#CharRange(char,char,boolean)"],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Calendar,String,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.getInstance(String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.FastDateFormat#format(Calendar)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#append(CharBuffer)",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder)",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer)",
        "org.apache.commons.lang3.text.StrBuilder#append(double)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(String,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrBuilder#append(String,int,int)",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.concurrent.BasicThreadFactory#BasicThreadFactory(Builder)": ["org.apache.commons.lang3.concurrent.BasicThreadFactory.<init>()"],
    "org.apache.commons.lang3.text.StrBuilder#readFrom(Readable)": [
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderReader#read(char[],int,int)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>[]...)": [
        "org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class<?>,String,Class<?>[]...)",
        "org.apache.commons.lang3.ClassUtils.isPublic(Class<?>)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,char[],boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,char[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char[],Boolean)"
    ],
    "org.apache.commons.lang3.function.FailableBiPredicate.truePredicate()": ["org.apache.commons.lang3.function.FailableBiPredicate.<staticinit>()"],
    "org.apache.commons.lang3.RandomUtils.nextBytes(int)": ["org.apache.commons.lang3.RandomStringUtils.random()"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.time.DateUtils.setMilliseconds(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.StringUtils.splitWorker(String,char,boolean)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.StrBuilder#indexOf(String)": ["org.apache.commons.lang3.text.StrBuilder#indexOf(String,int)"],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(boolean[],boolean)": [
        "org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean)",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#selectNumberRule(int,int)": [
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#UnpaddedNumberField(int)",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#TwoDigitNumberField(int)",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#PaddedNumberField(int,int)"
    ],
    "org.apache.commons.lang3.SerializationUtils.serialize(Serializable,OutputStream)": ["org.apache.commons.lang3.SerializationException#SerializationException(Throwable)"],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(short)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,short)"],
    "org.apache.commons.lang3.SystemProperties.getHttpAgent()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)"
    ],
    "org.apache.commons.lang3.StringUtils.replaceFirst(String,String,String)": ["org.apache.commons.lang3.RegExUtils.replaceFirst(String,String,String)"],
    "org.apache.commons.lang3.LocaleUtils.languagesByCountry(String)": [
        "org.apache.commons.lang3.LocaleUtils.availableLocaleList(Predicate<Locale>)",
        "org.apache.commons.lang3.LocaleUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.isMixedCase(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrLookup.SystemPropertiesStrLookup#lookup(String)": ["org.apache.commons.lang3.SystemProperties.getProperty(String)"],
    "org.apache.commons.lang3.time.FastDateFormat#getLocale()": ["org.apache.commons.lang3.time.FastDatePrinter#getLocale()"],
    "org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#invoke(Object,Method,Object[])": ["org.apache.commons.lang3.event.EventListenerSupport.ProxyInvocationHandler#handle(Throwable)"],
    "org.apache.commons.lang3.ClassLoaderUtils.getURLs(ClassLoader)": ["org.apache.commons.lang3.ClassLoaderUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int)": ["org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)"],
    "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,boolean[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#appendFieldStart(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendSummary(StringBuffer,String,boolean[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendFieldEnd(StringBuffer,String)",
        "org.apache.commons.lang3.builder.ToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle#appendDetail(StringBuffer,String,Object[])",
        "org.apache.commons.lang3.builder.ToStringStyle#appendNullText(StringBuffer,String)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,short[])": [
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,Object[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,Object[],Boolean)"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,Locale)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.ArrayUtils.isSorted(short[])": [
        "org.apache.commons.lang3.math.NumberUtils.compare(short,short)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)"
    ],
    "org.apache.commons.lang3.SystemProperties.getUserRegion()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.CharUtils.toIntValue(char,int)": ["org.apache.commons.lang3.CharUtils.isAsciiNumeric(char)"],
    "org.apache.commons.lang3.stream.Streams#Streams()": ["org.apache.commons.lang3.stream.Streams.<init>()"],
    "org.apache.commons.lang3.function.Failable.asBiPredicate(FailableBiPredicate<T, U, ?>)": ["org.apache.commons.lang3.function.Failable.test(FailableBiPredicate<T, U, E extends Throwable>,T,U)"],
    "org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.StringUtils.join(Iterable<?>,char)": [
        "org.apache.commons.lang3.StringUtils.join(boolean[],char)",
        "org.apache.commons.lang3.CharRange#iterator()",
        "org.apache.commons.lang3.builder.DiffResult#iterator()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#rightString(int)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.substringsBetween(String,String,String)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.tuple.MutablePair.of(L,R)": ["org.apache.commons.lang3.tuple.MutablePair#MutablePair(L,R)"],
    "org.apache.commons.lang3.text.WordUtils.uncapitalize(String,char[]...)": [
        "org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.CharSetUtils.count(String,String[]...)": [
        "org.apache.commons.lang3.CharSet#contains(char)",
        "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])",
        "org.apache.commons.lang3.CharSet.getInstance(String[]...)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.CharUtils.toIntValue(Character)": [
        "org.apache.commons.lang3.CharUtils.toIntValue(char)",
        "org.apache.commons.lang3.CharUtils.toChar(Character)"
    ],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.time.CalendarUtils#CalendarUtils(Calendar)": ["org.apache.commons.lang3.time.CalendarUtils#CalendarUtils(Calendar,Locale)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(byte[],byte[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(byte,byte)"],
    "org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#checkState()": ["org.apache.commons.lang3.concurrent.EventCountCircuitBreaker#performStateCheck(int)"],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilConcurrentForkJoinPoolCommonThreadFactory()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.Range#Range(T,T,Comparator<T>)": [
        "org.apache.commons.lang3.Range.ComparableComparator#compare(Object,Object)",
        "org.apache.commons.lang3.Range.<init>()",
        "org.apache.commons.lang3.compare.ObjectToStringComparator#compare(Object,Object)",
        "org.apache.commons.lang3.Range.ComparableComparator.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJdkHttpsNegotiateCbt()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.AppendableJoiner.Builder#get()": ["org.apache.commons.lang3.AppendableJoiner#AppendableJoiner(CharSequence,CharSequence,CharSequence,FailableBiConsumer<Appendable, T, IOException>)"],
    "org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(Class<E extends Enum>,String)": ["org.apache.commons.lang3.EnumUtils.getEnumIgnoreCase(Class<E extends Enum>,String,E extends Enum)"],
    "org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)",
        "org.apache.commons.lang3.ArrayUtils.max0(int)"
    ],
    "org.apache.commons.lang3.text.WordUtils.initials(String,char[]...)": [
        "org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.stream.Streams.FailableStream#forEach(FailableConsumer<T, ?>)": [
        "org.apache.commons.lang3.function.Failable.asConsumer(FailableConsumer<T, ?>)",
        "org.apache.commons.lang3.stream.Streams.FailableStream#makeTerminated()",
        "org.apache.commons.lang3.stream.Streams.FailableStream#stream()"
    ],
    "org.apache.commons.lang3.SystemProperties.getSunNetHttpServerIdleInterval()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class<?>,String[]...)": ["org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class<?>,boolean,String[]...)"],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Boolean[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.time.StopWatch.State$State$1.<init>()": ["org.apache.commons.lang3.time.StopWatch.State.<init>()"],
    "org.apache.commons.lang3.reflect.MethodUtils.getAllSuperclassesAndInterfaces(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.getAllSuperclasses(Class<?>)",
        "org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class<?>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.addFirst(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.add(double[],double)",
        "org.apache.commons.lang3.ArrayUtils.insert(int,double[],double[]...)"
    ],
    "org.apache.commons.lang3.Validate.noNullElements(T[],String,Object[]...)": [
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(T[],T)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setFieldSeparatorAtEnd(boolean)": ["org.apache.commons.lang3.builder.ToStringStyle#setFieldSeparatorAtEnd(boolean)"],
    "org.apache.commons.lang3.StringUtils.repeat(char,int)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayFill.fill(char[],char)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder.setDefaultStyle(ToStringStyle)": ["org.apache.commons.lang3.builder.ToStringBuilder.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaContentHandlerPkgs()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.stripAll(String[],String)": [
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)",
        "org.apache.commons.lang3.StringUtils.strip(String,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.ClassUtils.isPrimitiveOrWrapper(Class<?>)": ["org.apache.commons.lang3.ClassUtils.isPrimitiveWrapper(Class<?>)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder.unregister(Object)": [
        "org.apache.commons.lang3.builder.HashCodeBuilder.<staticinit>()",
        "org.apache.commons.lang3.builder.IDKey#IDKey(Object)",
        "org.apache.commons.lang3.builder.HashCodeBuilder.getRegistry()"
    ],
    "org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[]...)": ["org.apache.commons.lang3.ClassUtils.isAssignable(Class<?>[],Class<?>[],boolean)"],
    "org.apache.commons.lang3.concurrent.UncheckedFuture.on(Collection<Future<T>>)": ["org.apache.commons.lang3.concurrent.UncheckedFuture.map(Collection<Future<T>>)"],
    "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"
    ],
    "org.apache.commons.lang3.SerializationUtils.deserialize(InputStream)": ["org.apache.commons.lang3.SerializationException#SerializationException(Throwable)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,int,int)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)": ["org.apache.commons.lang3.text.StrBuilder#length()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setSizeStartText(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setSizeStartText(String)"],
    "org.apache.commons.lang3.ArrayUtils.insert(int,long[],long[]...)": [
        "org.apache.commons.lang3.ArrayUtils.isEmpty(long[])",
        "org.apache.commons.lang3.ArrayUtils.clone(long[])"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper(int,int,boolean)": [
        "org.apache.commons.lang3.text.translate.CodePointTranslator.<init>()",
        "org.apache.commons.lang3.text.translate.UnicodeEscaper.<init>()"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwableOfThrowable(Throwable,Class<T extends Throwable>,int)": ["org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class<T extends Throwable>,int,boolean)"],
    "org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getDateInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(byte[])",
        "org.apache.commons.lang3.mutable.MutableInt#decrementAndGet()",
        "org.apache.commons.lang3.mutable.MutableInt#MutableInt(int)",
        "org.apache.commons.lang3.mutable.MutableInt#increment()",
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])"
    ],
    "org.apache.commons.lang3.ObjectUtils.identityToString(Appendable,Object)": [
        "org.apache.commons.lang3.ObjectUtils.<staticinit>()",
        "org.apache.commons.lang3.ObjectUtils.identityHashCodeHex(Object)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(Map<String, V>,String,String,char)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,String,String,char)",
        "org.apache.commons.lang3.text.StrLookup.mapLookup(Map<String, V>)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#toString()": ["org.apache.commons.lang3.time.GmtTimeZone#getID()"],
    "org.apache.commons.lang3.text.StrBuilder#append(StringBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.time.FastDateParser.PatternStrategy#parse(FastDateParser,Calendar,String,ParsePosition,int)": [
        "org.apache.commons.lang3.time.FastDateParser.TimeZoneStrategy#setCalendar(FastDateParser,Calendar,String)",
        "org.apache.commons.lang3.time.FastDateParser.ISO8601TimeZoneStrategy#setCalendar(FastDateParser,Calendar,String)",
        "org.apache.commons.lang3.time.FastDateParser.CaseInsensitiveTextStrategy#setCalendar(FastDateParser,Calendar,String)"
    ],
    "org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.tuple.ImmutablePair.<staticinit>()": ["org.apache.commons.lang3.tuple.ImmutablePair#ImmutablePair(L,R)"],
    "org.apache.commons.lang3.time.AbstractFormatCache#getDateTimeInstance(Integer,Integer,TimeZone,Locale)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.AbstractFormatCache#getInstance(String,TimeZone,Locale)",
        "org.apache.commons.lang3.time.AbstractFormatCache.getPatternForStyle(Integer,Integer,Locale)"
    ],
    "org.apache.commons.lang3.ArrayUtils.reverse(short[])": ["org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int)"],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.constantFuture(T)": ["org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#ConstantFuture(T)"],
    "org.apache.commons.lang3.SystemProperties.getUserLanguage()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.startsWithIgnoreCase(CharSequence,CharSequence)": ["org.apache.commons.lang3.StringUtils.startsWith(CharSequence,CharSequence,boolean)"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#ReflectionToStringBuilder(Object)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#ToStringBuilder(Object)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.<init>()"
    ],
    "org.apache.commons.lang3.mutable.MutableInt#equals(Object)": ["org.apache.commons.lang3.mutable.MutableInt#intValue()"],
    "org.apache.commons.lang3.BitField#clearShort(short)": ["org.apache.commons.lang3.BitField#clear(int)"],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(boolean[],boolean[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(boolean,boolean)"],
    "org.apache.commons.lang3.StringUtils.isAllLowerCase(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(StringBuffer,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StringBuffer,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsentUnchecked(ConcurrentMap<K, V>,K,ConcurrentInitializer<V>)": [
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(ConcurrentMap<K, V>,K,ConcurrentInitializer<V>)",
        "org.apache.commons.lang3.concurrent.ConcurrentRuntimeException#ConcurrentRuntimeException(Throwable)"
    ],
    "org.apache.commons.lang3.AppendableJoiner.nonNull(CharSequence)": ["org.apache.commons.lang3.StringUtils.<staticinit>()"],
    "org.apache.commons.lang3.CharSet.<staticinit>()": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.CharSet#CharSet(String[]...)"
    ],
    "org.apache.commons.lang3.ObjectUtils.<staticinit>()": ["org.apache.commons.lang3.ObjectUtils.Null#Null()"],
    "org.apache.commons.lang3.SystemProperties.getJavaSpecificationVendor()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.matchesPattern(CharSequence,String,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.reflect.MethodUtils.toVarArgs(Method,Object[])": ["org.apache.commons.lang3.reflect.MethodUtils.getVarArgs(Object[],Class<?>[])"],
    "org.apache.commons.lang3.function.FailableIntPredicate.falsePredicate()": ["org.apache.commons.lang3.function.FailableIntPredicate.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)": [
        "org.apache.commons.lang3.ArrayUtils.max0(int)",
        "org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.AnnotationUtils.hashMember(String,Object)": [
        "org.apache.commons.lang3.ObjectUtils.isArray(Object)",
        "org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(Class<?>,Object)",
        "org.apache.commons.lang3.AnnotationUtils.hashCode(Annotation)"
    ],
    "org.apache.commons.lang3.ArrayUtils.contains(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)"
    ],
    "org.apache.commons.lang3.exception.DefaultExceptionContext#setContextValue(String,Object)": [
        "org.apache.commons.lang3.exception.DefaultExceptionContext#addContextValue(String,Object)",
        "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.time.TimeZones.toTimeZone(TimeZone)": ["org.apache.commons.lang3.ObjectUtils.getIfNull(T,Supplier<T>)"],
    "org.apache.commons.lang3.time.CalendarUtils#getStandaloneShortMonthNames()": ["org.apache.commons.lang3.time.CalendarUtils#getMonthDisplayNames(int)"],
    "org.apache.commons.lang3.SystemProperties.getJdkXmlEnableExtensionFunctions()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.translate.AggregateTranslator#AggregateTranslator(CharSequenceTranslator[]...)": [
        "org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()",
        "org.apache.commons.lang3.text.translate.AggregateTranslator.<init>()",
        "org.apache.commons.lang3.ArrayUtils.clone(T[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.addFirst(long[],long)": [
        "org.apache.commons.lang3.ArrayUtils.insert(int,long[],long[]...)",
        "org.apache.commons.lang3.ArrayUtils.add(long[],long)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaRmiServerHostName()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#deleteFirst(StrMatcher)": ["org.apache.commons.lang3.text.StrBuilder#replace(StrMatcher,String,int,int,int)"],
    "org.apache.commons.lang3.function.Failable.getAsBoolean(FailableBooleanSupplier<E extends Throwable>)": ["org.apache.commons.lang3.function.Failable.rethrow(Throwable)"],
    "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#equals(Object)"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#replace(StrBuilder,int,int)": [
        "org.apache.commons.lang3.text.StrBuilder#append(StrBuilder,int,int)",
        "org.apache.commons.lang3.text.StrBuilder#StrBuilder(int)",
        "org.apache.commons.lang3.text.StrBuilder#toString()",
        "org.apache.commons.lang3.text.StrSubstitutor#substitute(StrBuilder,int,int)"
    ],
    "org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(Object,String[]...)": ["org.apache.commons.lang3.builder.HashCodeBuilder.<staticinit>()"],
    "org.apache.commons.lang3.time.DateUtils.setDays(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#HashCodeBuilder(int,int)": ["org.apache.commons.lang3.builder.HashCodeBuilder.<init>()"],
    "org.apache.commons.lang3.function.Failable.stream(Stream<T>)": ["org.apache.commons.lang3.stream.Streams.FailableStream#FailableStream(Stream<T>)"],
    "org.apache.commons.lang3.Functions.apply(FailableBiFunction<O1, O2, O, T extends Throwable>,O1,O2)": ["org.apache.commons.lang3.Functions.get(FailableSupplier<O, T extends Throwable>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getOwnerType()",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#getActualTypeArguments()",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class<?>,Class<?>)"
    ],
    "org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String)": ["org.apache.commons.lang3.StringUtils.replaceIgnoreCase(String,String,String,int)"],
    "org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(Object,ToStringStyle)": ["org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(Object,ToStringStyle)"],
    "org.apache.commons.lang3.text.WordUtils.capitalize(String)": ["org.apache.commons.lang3.text.WordUtils.capitalize(String,char[]...)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(Object[])"
    ],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class<?>,String,Object[]...)": [
        "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])",
        "org.apache.commons.lang3.ClassUtils.toClass(Object[]...)",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class<?>,String,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int)"],
    "org.apache.commons.lang3.concurrent.ConcurrentException#ConcurrentException()": ["org.apache.commons.lang3.concurrent.ConcurrentException.<init>()"],
    "org.apache.commons.lang3.StringUtils.isAllUpperCase(CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.DateFormatUtils.format(long,String)": ["org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"],
    "org.apache.commons.lang3.StringUtils.center(String,int,char)": [
        "org.apache.commons.lang3.StringUtils.rightPad(String,int,char)",
        "org.apache.commons.lang3.StringUtils.leftPad(String,int,char)"
    ],
    "org.apache.commons.lang3.RandomUtils.nextLong(long,long)": ["org.apache.commons.lang3.RandomUtils.nextLong(long)"],
    "org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[])": ["org.apache.commons.lang3.ArrayUtils.isEmpty(float[])"],
    "org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintWriter)": ["org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTraceList(Throwable)"],
    "org.apache.commons.lang3.time.FastDateParser.StrategyParser#getNextStrategy()": [
        "org.apache.commons.lang3.time.FastDateParser.StrategyParser#letterPattern(char)",
        "org.apache.commons.lang3.time.FastDateParser.StrategyParser#literal()",
        "org.apache.commons.lang3.time.FastDateParser.isFormatLetter(char)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#toString()": ["org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"],
    "org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float)": ["org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float,int)"],
    "org.apache.commons.lang3.exception.ContextedException#setContextValue(String,Object)": [
        "org.apache.commons.lang3.exception.ContextedRuntimeException#setContextValue(String,Object)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#setContextValue(String,Object)",
        "org.apache.commons.lang3.exception.ContextedException#setContextValue(String,Object)"
    ],
    "org.apache.commons.lang3.ThreadUtils.findThreadsByName(String,ThreadGroup)": [
        "org.apache.commons.lang3.ThreadUtils.predicateThread(String)",
        "org.apache.commons.lang3.ThreadUtils.findThreads(ThreadGroup,boolean,Predicate<Thread>)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(T[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,long)": ["org.apache.commons.lang3.text.StrBuilder#insert(int,int)"],
    "org.apache.commons.lang3.SystemProperties.getLineSeparator()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.tuple.ImmutableTriple.nullTriple()": ["org.apache.commons.lang3.tuple.ImmutableTriple.<staticinit>()"],
    "org.apache.commons.lang3.ClassUtils.getName(Object)": [
        "org.apache.commons.lang3.ClassUtils.getName(Object,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.mutable.MutableDouble#MutableDouble(double)": ["org.apache.commons.lang3.mutable.MutableDouble.<init>()"],
    "org.apache.commons.lang3.ArrayUtils.insert(int,boolean[],boolean[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(boolean[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])"
    ],
    "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()": [
        "org.apache.commons.lang3.concurrent.UncheckedFutureImpl#get()",
        "org.apache.commons.lang3.concurrent.UncheckedFuture#get()",
        "org.apache.commons.lang3.concurrent.AbstractFutureProxy#get()",
        "org.apache.commons.lang3.concurrent.ConcurrentUtils.ConstantFuture#get()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaNioChannelsDefaultThreadPoolInitialSize()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.CharSetUtils.delete(String,String[]...)": [
        "org.apache.commons.lang3.CharSetUtils.deepEmpty(String[])",
        "org.apache.commons.lang3.CharSetUtils.modify(String,String[],boolean)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,String[]...)": ["org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class<?>,String[]...)"],
    "org.apache.commons.lang3.time.StopWatch#getSplitNanoTime()": ["org.apache.commons.lang3.time.StopWatch.SplitState.<staticinit>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class<?>,Type[]...)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#ParameterizedTypeImpl(Class<?>,Type,Type[])"
    ],
    "org.apache.commons.lang3.text.CompositeFormat#format(Object,StringBuffer,FieldPosition)": [
        "org.apache.commons.lang3.text.CompositeFormat#format(Object,StringBuffer,FieldPosition)",
        "org.apache.commons.lang3.time.FastDateFormat#format(Object,StringBuffer,FieldPosition)"
    ],
    "org.apache.commons.lang3.mutable.MutableFloat#MutableFloat(Number)": ["org.apache.commons.lang3.mutable.MutableFloat.<init>()"],
    "org.apache.commons.lang3.StringUtils.chomp(String)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)": [
        "org.apache.commons.lang3.ArraySorter.sort(int[])",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)",
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[])",
        "org.apache.commons.lang3.ArrayUtils.clone(int[])"
    ],
    "org.apache.commons.lang3.Validate.validIndex(T extends Collection,int,String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.ArrayUtils.contains(double[],double)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)"
    ],
    "org.apache.commons.lang3.Validate.toSupplier(String,Object[]...)": ["org.apache.commons.lang3.Validate.getMessage(String,Object[]...)"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#toString()": [
        "org.apache.commons.lang3.builder.ToStringBuilder#getObject()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#appendFieldsIn(Class<?>)",
        "org.apache.commons.lang3.builder.ToStringBuilder#getStyle()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#getUpToClass()",
        "org.apache.commons.lang3.builder.ToStringStyle#getNullText()",
        "org.apache.commons.lang3.builder.ToStringBuilder#toString()",
        "org.apache.commons.lang3.builder.StandardToStringStyle#getNullText()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#validate()"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Object[])": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])"
    ],
    "org.apache.commons.lang3.BitField#getShortValue(short)": ["org.apache.commons.lang3.BitField#getValue(int)"],
    "org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.appendIfMissing(String,CharSequence,boolean,CharSequence[]...)": [
        "org.apache.commons.lang3.StringUtils.endsWith(CharSequence,CharSequence,boolean)",
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#format(long,B extends Appendable)": ["org.apache.commons.lang3.time.FastDatePrinter#format(long,B extends Appendable)"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.toObject(int[])": [
        "org.apache.commons.lang3.ArrayUtils.setAll(T[],IntFunction<? extends T>)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.Validate.noNullElements(T extends Iterable,String,Object[]...)": [
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$1#hasNext()",
        "org.apache.commons.lang3.time.DateUtils.DateIterator#hasNext()",
        "org.apache.commons.lang3.ClassUtils.hierarchy(Class<?>,Interfaces)$Iterator$2#hasNext()",
        "org.apache.commons.lang3.Validate.getMessage(String,Object[]...)",
        "org.apache.commons.lang3.CharRange.CharacterIterator#hasNext()"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,ParameterizedType,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.unrollVariableAssignments(TypeVariable<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getRawType(ParameterizedType)",
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.ParameterizedTypeImpl#equals(Object)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#isFieldSeparatorAtStart()": ["org.apache.commons.lang3.builder.ToStringStyle#isFieldSeparatorAtStart()"],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(Object,Collection<String>)": [
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toStringExclude(Object,String[]...)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection<String>)"
    ],
    "org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class<?>,boolean,String[]...)": [
        "org.apache.commons.lang3.builder.EqualsBuilder#EqualsBuilder()",
        "org.apache.commons.lang3.builder.EqualsBuilder#setTestRecursive(boolean)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setReflectUpToClass(Class<?>)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setExcludeFields(String[]...)",
        "org.apache.commons.lang3.builder.EqualsBuilder#reflectionAppend(Object,Object)",
        "org.apache.commons.lang3.builder.EqualsBuilder#setTestTransients(boolean)",
        "org.apache.commons.lang3.builder.EqualsBuilder#isEquals()"
    ],
    "org.apache.commons.lang3.time.FastDateFormat#parse(String)": ["org.apache.commons.lang3.time.FastDateParser#parse(String)"],
    "org.apache.commons.lang3.builder.DiffBuilder#append(String,char,char)": ["org.apache.commons.lang3.builder.DiffBuilder#add(String,Supplier<F>,Supplier<F>,Class<F>)"],
    "org.apache.commons.lang3.AppendableJoiner.builder()": ["org.apache.commons.lang3.AppendableJoiner.Builder#Builder()"],
    "org.apache.commons.lang3.mutable.MutableInt#compareTo(MutableInt)": ["org.apache.commons.lang3.math.NumberUtils.compare(int,int)"],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(char[])": [
        "org.apache.commons.lang3.ArrayUtils.clone(char[])",
        "org.apache.commons.lang3.text.StrTokenizer.<init>()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#insert(int,char[])": [
        "org.apache.commons.lang3.text.StrBuilder#insert(int,String)",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)",
        "org.apache.commons.lang3.text.StrBuilder#validateIndex(int)"
    ],
    "org.apache.commons.lang3.EnumUtils.processBitVectors(Class<E extends Enum>,long[]...)": [
        "org.apache.commons.lang3.ArrayUtils.reverse(long[])",
        "org.apache.commons.lang3.ArrayUtils.clone(long[])",
        "org.apache.commons.lang3.EnumUtils.asEnum(Class<E extends Enum>)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#equals(Object)": ["org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#TimeZoneNameRule(TimeZone,Locale,int)": [
        "org.apache.commons.lang3.LocaleUtils.toLocale(Locale)",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule.<init>()",
        "org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(TimeZone,boolean,int,Locale)"
    ],
    "org.apache.commons.lang3.ClassUtils.getShortClassName(Class<?>)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.ClassUtils.getShortClassName(String)"
    ],
    "org.apache.commons.lang3.mutable.MutableShort#equals(Object)": ["org.apache.commons.lang3.mutable.MutableShort#shortValue()"],
    "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])": ["org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object)"],
    "org.apache.commons.lang3.time.DateFormatUtils.formatUTC(Date,String)": [
        "org.apache.commons.lang3.time.DateFormatUtils.<staticinit>()",
        "org.apache.commons.lang3.time.DateFormatUtils.format(Date,String,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.reflect.InheritanceUtils#InheritanceUtils()": ["org.apache.commons.lang3.reflect.InheritanceUtils.<init>()"],
    "org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType)": [
        "org.apache.commons.lang3.reflect.TypeUtils.<staticinit>()",
        "org.apache.commons.lang3.AppendableJoiner#join(StringBuilder,Iterable<T>)",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getUpperBounds()",
        "org.apache.commons.lang3.reflect.TypeUtils.WildcardTypeImpl#getLowerBounds()"
    ],
    "org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCauseUnchecked(ExecutionException)": ["org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ExecutionException)"],
    "org.apache.commons.lang3.ClassUtils.comparator()": ["org.apache.commons.lang3.ClassUtils.<staticinit>()"],
    "org.apache.commons.lang3.text.translate.NumericEntityUnescaper#translate(CharSequence,int,Writer)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper.OPTION.<staticinit>()",
        "org.apache.commons.lang3.text.StrBuilder#subSequence(int,int)",
        "org.apache.commons.lang3.text.translate.NumericEntityUnescaper#isSet(OPTION)",
        "org.apache.commons.lang3.text.StrBuilder.StrBuilderWriter#write(int)"
    ],
    "org.apache.commons.lang3.ArrayUtils.insert(int,double[],double[]...)": [
        "org.apache.commons.lang3.ArrayUtils.clone(double[])",
        "org.apache.commons.lang3.ArrayUtils.isEmpty(double[])"
    ],
    "org.apache.commons.lang3.builder.ReflectionDiffBuilder.Builder.<init>()": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(T extends AccessibleObject)": [
        "org.apache.commons.lang3.reflect.MemberUtils.isPublic(Member)",
        "org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)"
    ],
    "org.apache.commons.lang3.BooleanUtils.or(boolean[]...)": ["org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"],
    "org.apache.commons.lang3.SystemProperties.getJavaXmlConfigFile()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)": ["org.apache.commons.lang3.text.translate.UnicodeEscaper#UnicodeEscaper(int,int,boolean)"],
    "org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)": ["org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)"],
    "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()": [
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TextField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedNumberField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.Iso8601_Rule#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.DayInWeekField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.StringLiteral#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.WeekYear#estimateLength()",
        "org.apache.commons.lang3.time.FastDatePrinter.TwoDigitNumberField#estimateLength()"
    ],
    "org.apache.commons.lang3.ArrayUtils.addFirst(char[],char)": [
        "org.apache.commons.lang3.ArrayUtils.add(char[],char)",
        "org.apache.commons.lang3.ArrayUtils.insert(int,char[],char[]...)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.anyToString(T)": ["org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"],
    "org.apache.commons.lang3.time.StopWatch#split()": [
        "org.apache.commons.lang3.time.StopWatch.State.<staticinit>()",
        "org.apache.commons.lang3.time.StopWatch.SplitState.<staticinit>()"
    ],
    "org.apache.commons.lang3.time.FastDatePrinter#toString()": ["org.apache.commons.lang3.time.GmtTimeZone#getID()"],
    "org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.getStackTrace(Throwable)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(String)"
    ],
    "org.apache.commons.lang3.BooleanUtils.toStringOnOff(boolean)": [
        "org.apache.commons.lang3.BooleanUtils.toString(boolean,String,String)",
        "org.apache.commons.lang3.BooleanUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#accept(Field)": [
        "org.apache.commons.lang3.ClassUtils.<staticinit>()",
        "org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#isAppendStatics()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#isAppendTransients()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaSecurityAuthLoginConfig()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaVmVendor()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)": [
        "org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class<?>)",
        "org.apache.commons.lang3.reflect.TypeUtils.GenericArrayTypeImpl#getGenericComponentType()",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Class<?>,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>,Map<TypeVariable<?>, Type>)",
        "org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable<?>)"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(Throwable)": ["org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(Throwable)"],
    "org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,TimeZone,Locale)": [
        "org.apache.commons.lang3.time.FastDateFormat.<staticinit>()",
        "org.apache.commons.lang3.time.AbstractFormatCache#getTimeInstance(int,TimeZone,Locale)"
    ],
    "org.apache.commons.lang3.RegExUtils.removePattern(String,String)": [
        "org.apache.commons.lang3.RegExUtils.replacePattern(String,String,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,StrMatcher,StrMatcher)": [
        "org.apache.commons.lang3.text.StrTokenizer#setQuoteMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrTokenizer#StrTokenizer(String,StrMatcher)"
    ],
    "org.apache.commons.lang3.builder.Diff#Diff(String)": [
        "org.apache.commons.lang3.builder.Diff.<init>()",
        "org.apache.commons.lang3.tuple.Pair.<init>()",
        "org.apache.commons.lang3.ObjectUtils.defaultIfNull(T,T)",
        "org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class<?>)"
    ],
    "org.apache.commons.lang3.time.StopWatch#formatTime()": [
        "org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)",
        "org.apache.commons.lang3.time.StopWatch#getTime()"
    ],
    "org.apache.commons.lang3.time.FastTimeZone.<staticinit>()": ["org.apache.commons.lang3.time.GmtTimeZone#GmtTimeZone(boolean,int,int)"],
    "org.apache.commons.lang3.math.NumberUtils.toByte(String)": ["org.apache.commons.lang3.math.NumberUtils.toByte(String,byte)"],
    "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)": [
        "org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.nullToEmpty(Long[])": [
        "org.apache.commons.lang3.ArrayUtils.nullTo(T[],T[])",
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.indexOfDifference(CharSequence[]...)": [
        "org.apache.commons.lang3.text.StrBuilder#charAt(int)",
        "org.apache.commons.lang3.ArrayUtils.getLength(Object)",
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.StringUtils.contains(CharSequence,int)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,int,int)",
        "org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"
    ],
    "org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAll(char[],int[]...)": ["org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[]...)"],
    "org.apache.commons.lang3.function.Failable.accept(FailableLongConsumer<E extends Throwable>,long)": ["org.apache.commons.lang3.function.Failable.run(FailableRunnable<E extends Throwable>)"],
    "org.apache.commons.lang3.ArrayUtils.shift(long[],int)": ["org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)"],
    "org.apache.commons.lang3.ArchUtils.init_X86_32Bit()": [
        "org.apache.commons.lang3.arch.Processor#Processor(Arch,Type)",
        "org.apache.commons.lang3.arch.Processor.Arch.<staticinit>()",
        "org.apache.commons.lang3.arch.Processor.Type.<staticinit>()",
        "org.apache.commons.lang3.ArchUtils.addProcessors(Processor,String[]...)"
    ],
    "org.apache.commons.lang3.time.DurationUtils.<staticinit>()": [
        "org.apache.commons.lang3.math.NumberUtils.<staticinit>()",
        "org.apache.commons.lang3.LongRange.of(Long,Long)"
    ],
    "org.apache.commons.lang3.builder.ReflectionToStringBuilder#appendFieldsIn(Class<?>)": [
        "org.apache.commons.lang3.builder.ToStringBuilder#getObject()",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#accept(Field)",
        "org.apache.commons.lang3.ArraySorter.sort(T[],Comparator<? super T>)",
        "org.apache.commons.lang3.builder.ToStringBuilder#append(String,Object,boolean)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#reflectionAppendArray(Object)",
        "org.apache.commons.lang3.builder.ReflectionToStringBuilder#getValue(Field)"
    ],
    "org.apache.commons.lang3.math.Fraction#hashCode()": [
        "org.apache.commons.lang3.math.Fraction#getNumerator()",
        "org.apache.commons.lang3.math.Fraction#getDenominator()"
    ],
    "org.apache.commons.lang3.math.IEEE754rUtils.min(double[]...)": ["org.apache.commons.lang3.math.IEEE754rUtils.min(double[]...)"],
    "org.apache.commons.lang3.text.StrBuilder#appendWithSeparators(Object[],String)": [
        "org.apache.commons.lang3.text.StrBuilder#append(Object)",
        "org.apache.commons.lang3.text.StrBuilder#append(String)"
    ],
    "org.apache.commons.lang3.Validate.exclusiveBetween(T,T,Comparable<T>)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getNullText()": ["org.apache.commons.lang3.builder.ToStringStyle#getNullText()"],
    "org.apache.commons.lang3.CharUtils.toChar(String,char)": ["org.apache.commons.lang3.StringUtils.isEmpty(CharSequence)"],
    "org.apache.commons.lang3.ArrayUtils.toPrimitive(Float[],float)": ["org.apache.commons.lang3.ArrayUtils.<staticinit>()"],
    "org.apache.commons.lang3.ArrayUtils.reverse(byte[])": ["org.apache.commons.lang3.ArrayUtils.reverse(Object[],int,int)"],
    "org.apache.commons.lang3.SystemUtils.getUserName(String)": ["org.apache.commons.lang3.SystemProperties.getUserName(String)"],
    "org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String)": ["org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,String,boolean,TimeZone)"],
    "org.apache.commons.lang3.function.FailableObjIntConsumer.nop()": ["org.apache.commons.lang3.function.FailableObjIntConsumer.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getHttpKeepAliveTimeProxy()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>,String,String,char)": [
        "org.apache.commons.lang3.text.StrSubstitutor#setValueDelimiterMatcher(StrMatcher)",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableSuffix(String)",
        "org.apache.commons.lang3.text.StrSubstitutor.<staticinit>()",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariablePrefix(String)",
        "org.apache.commons.lang3.text.StrSubstitutor.<init>()",
        "org.apache.commons.lang3.text.StrSubstitutor#setVariableResolver(StrLookup<?>)",
        "org.apache.commons.lang3.text.StrSubstitutor#setEscapeChar(char)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setArraySeparator(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setArraySeparator(String)"],
    "org.apache.commons.lang3.LocaleUtils.isLanguageUndetermined(Locale)": ["org.apache.commons.lang3.LocaleUtils.<staticinit>()"],
    "org.apache.commons.lang3.mutable.MutableLong#MutableLong(Number)": ["org.apache.commons.lang3.mutable.MutableLong.<init>()"],
    "org.apache.commons.lang3.ThreadUtils.getAllThreads()": [
        "org.apache.commons.lang3.ThreadUtils.findThreads(Predicate<Thread>)",
        "org.apache.commons.lang3.ThreadUtils.alwaysTruePredicate()"
    ],
    "org.apache.commons.lang3.SystemProperties.getJavaUtilConcurrentForkJoinPoolCommonMaximumSpares()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.tuple.MutablePair.ofNonNull(L,R)": ["org.apache.commons.lang3.tuple.MutablePair.of(L,R)"],
    "org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Object,String)": ["org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Class<?>)"],
    "org.apache.commons.lang3.exception.CloneFailedException#CloneFailedException(String)": ["org.apache.commons.lang3.exception.CloneFailedException.<init>()"],
    "org.apache.commons.lang3.time.DateUtils.setMonths(Date,int)": ["org.apache.commons.lang3.time.DateUtils.set(Date,int,int)"],
    "org.apache.commons.lang3.StringUtils.removeAll(String,String)": ["org.apache.commons.lang3.RegExUtils.removeAll(String,String)"],
    "org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField#PaddedNumberField(int,int)": ["org.apache.commons.lang3.time.FastDatePrinter.PaddedNumberField.<init>()"],
    "org.apache.commons.lang3.builder.EqualsBuilder#appendArray(Object,Object)": [
        "org.apache.commons.lang3.builder.EqualsBuilder#append(double[],double[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(Object[],Object[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(long[],long[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(char[],char[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(boolean[],boolean[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#append(byte[],byte[])",
        "org.apache.commons.lang3.builder.EqualsBuilder#setEquals(boolean)"
    ],
    "org.apache.commons.lang3.text.translate.EntityArrays.HTML40_EXTENDED_ESCAPE()": ["org.apache.commons.lang3.text.translate.EntityArrays.<staticinit>()"],
    "org.apache.commons.lang3.builder.HashCodeBuilder#append(boolean[])": ["org.apache.commons.lang3.builder.HashCodeBuilder#append(boolean)"],
    "org.apache.commons.lang3.text.StrSubstitutor.replaceSystemProperties(Object)": [
        "org.apache.commons.lang3.text.StrSubstitutor#StrSubstitutor(StrLookup<?>)",
        "org.apache.commons.lang3.text.StrLookup.systemPropertiesLookup()",
        "org.apache.commons.lang3.text.StrSubstitutor#replace(Object)"
    ],
    "org.apache.commons.lang3.StringUtils.toEncodedString(byte[],Charset)": ["org.apache.commons.lang3.Charsets.toCharset(Charset)"],
    "org.apache.commons.lang3.mutable.MutableByte#compareTo(MutableByte)": ["org.apache.commons.lang3.math.NumberUtils.compare(byte,byte)"],
    "org.apache.commons.lang3.LocaleUtils.isISO3166CountryCode(String)": ["org.apache.commons.lang3.StringUtils.isAllUpperCase(CharSequence)"],
    "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String)": [
        "org.apache.commons.lang3.ArrayUtils.<staticinit>()",
        "org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[],Class<?>[])"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,byte[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,byte[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder.reflectionToString(T,ToStringStyle,boolean,Class<? super T>)": ["org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(T,ToStringStyle,boolean,boolean,Class<? super T>)"],
    "org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map<TypeVariable<?>, Type>,TypeVariable<?>[])": ["org.apache.commons.lang3.reflect.TypeUtils.toString(Type)"],
    "org.apache.commons.lang3.AnnotationUtils.memberEquals(Class<?>,Object,Object)": [
        "org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(Class<?>,Object,Object)",
        "org.apache.commons.lang3.AnnotationUtils.equals(Annotation,Annotation)"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(int)": ["org.apache.commons.lang3.text.StrBuilder#append(double)"],
    "org.apache.commons.lang3.SystemProperties.getJavaTimeZoneDefaultZoneRulesProvider()": [
        "org.apache.commons.lang3.SystemProperties.getProperty(String)",
        "org.apache.commons.lang3.SystemProperties.<staticinit>()"
    ],
    "org.apache.commons.lang3.ClassUtils.getSimpleName(Class<?>)": [
        "org.apache.commons.lang3.ClassUtils.getSimpleName(Class<?>,String)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.SystemProperties.getComSunJndiLdapObjectTrustSerialData()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.mutable.MutableDouble#MutableDouble(String)": ["org.apache.commons.lang3.mutable.MutableDouble.<init>()"],
    "org.apache.commons.lang3.math.NumberUtils.min(long[]...)": ["org.apache.commons.lang3.math.NumberUtils.validateArray(Object)"],
    "org.apache.commons.lang3.StringUtils.join(Object[],String)": [
        "org.apache.commons.lang3.StringUtils.toStringOrEmpty(Object)",
        "org.apache.commons.lang3.StringUtils.join(Object[],String,int,int)"
    ],
    "org.apache.commons.lang3.SystemProperties.getHttpAuthDigestValidateServer()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.math.Fraction#toProperString()": [
        "org.apache.commons.lang3.math.Fraction#getProperWhole()",
        "org.apache.commons.lang3.math.Fraction#getProperNumerator()",
        "org.apache.commons.lang3.math.Fraction#getNumerator()",
        "org.apache.commons.lang3.math.Fraction#getDenominator()"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(char[])": [
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,char[],Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,char[],Boolean)"
    ],
    "org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(T extends Throwable)": [
        "org.apache.commons.lang3.exception.ExceptionUtils.isUnchecked(Throwable)",
        "org.apache.commons.lang3.exception.ExceptionUtils.asRuntimeException(Throwable)"
    ],
    "org.apache.commons.lang3.builder.ToStringBuilder#append(String,double)": ["org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,double)"],
    "org.apache.commons.lang3.function.FailableToLongFunction.nop()": ["org.apache.commons.lang3.function.FailableToLongFunction.<staticinit>()"],
    "org.apache.commons.lang3.StringUtils.indexOf(CharSequence,CharSequence)": [
        "org.apache.commons.lang3.CharSequenceUtils.indexOf(CharSequence,CharSequence,int)",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)": [
        "org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",
        "org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short)"
    ],
    "org.apache.commons.lang3.stream.Streams.nonNull(E)": [
        "org.apache.commons.lang3.stream.Streams.nonNull(Stream<E>)",
        "org.apache.commons.lang3.stream.Streams.streamOf(T)"
    ],
    "org.apache.commons.lang3.time.FastDateParser#parseObject(String)": ["org.apache.commons.lang3.time.FastDateParser#parse(String)"],
    "org.apache.commons.lang3.text.translate.UnicodeUnescaper.<init>()": ["org.apache.commons.lang3.text.translate.CharSequenceTranslator.<init>()"],
    "org.apache.commons.lang3.Validate.notEmpty(T extends Map)": ["org.apache.commons.lang3.Validate.<staticinit>()"],
    "org.apache.commons.lang3.SystemProperties.getJavaNioFileSpiDefaultFileSystemProvider()": [
        "org.apache.commons.lang3.SystemProperties.<staticinit>()",
        "org.apache.commons.lang3.SystemProperties.getProperty(String)"
    ],
    "org.apache.commons.lang3.builder.StandardToStringStyle#setContentStart(String)": ["org.apache.commons.lang3.builder.ToStringStyle#setContentStart(String)"],
    "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#append(StringBuffer,String,float[],Boolean)": [
        "org.apache.commons.lang3.builder.ToStringStyle#isFullDetail(Boolean)",
        "org.apache.commons.lang3.builder.ToStringStyle#append(StringBuffer,String,float[],Boolean)"
    ],
    "org.apache.commons.lang3.builder.ToStringStyle.<staticinit>()": [
        "org.apache.commons.lang3.builder.ToStringStyle.DefaultToStringStyle#DefaultToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.SimpleToStringStyle#SimpleToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.NoFieldNameToStringStyle#NoFieldNameToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.JsonToStringStyle#JsonToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.MultiLineToStringStyle#MultiLineToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.NoClassNameToStringStyle#NoClassNameToStringStyle()",
        "org.apache.commons.lang3.builder.ToStringStyle.ShortPrefixToStringStyle#ShortPrefixToStringStyle()"
    ],
    "org.apache.commons.lang3.text.StrBuilder#append(char[])": [
        "org.apache.commons.lang3.text.StrBuilder#length()",
        "org.apache.commons.lang3.text.StrBuilder#appendNull()",
        "org.apache.commons.lang3.text.StrBuilder#ensureCapacity(int)"
    ],
    "org.apache.commons.lang3.BooleanUtils.or(Boolean[]...)": [
        "org.apache.commons.lang3.BooleanUtils.or(boolean[]...)",
        "org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[])",
        "org.apache.commons.lang3.ObjectUtils.requireNonEmpty(T,String)"
    ],
    "org.apache.commons.lang3.text.StrTokenizer.getCSVClone()": [
        "org.apache.commons.lang3.text.StrTokenizer.<staticinit>()",
        "org.apache.commons.lang3.text.StrTokenizer#clone()"
    ],
    "org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[])": ["org.apache.commons.lang3.builder.CompareToBuilder#append(Object[],Object[],Comparator<?>)"],
    "org.apache.commons.lang3.RegExUtils.removeFirst(String,Pattern)": [
        "org.apache.commons.lang3.StringUtils.<staticinit>()",
        "org.apache.commons.lang3.RegExUtils.replaceFirst(String,Pattern,String)"
    ],
    "org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Computable<I, O>)": ["org.apache.commons.lang3.concurrent.Memoizer#Memoizer(Computable<I, O>,boolean)"],
    "org.apache.commons.lang3.builder.StandardToStringStyle#getFieldNameValueSeparator()": ["org.apache.commons.lang3.builder.ToStringStyle#getFieldNameValueSeparator()"],
    "org.apache.commons.lang3.StringUtils.chop(String)": [
        "org.apache.commons.lang3.CharUtils.<staticinit>()",
        "org.apache.commons.lang3.StringUtils.<staticinit>()"
    ],
    "org.apache.commons.lang3.exception.DefaultExceptionContext#getFirstContextValue(String)": [
        "org.apache.commons.lang3.StringUtils.equals(CharSequence,CharSequence)",
        "org.apache.commons.lang3.exception.DefaultExceptionContext#stream()",
        "org.apache.commons.lang3.tuple.Pair#getKey()"
    ],
    "org.apache.commons.lang3.text.StrTokenizer.getCSVInstance(String)": [
        "org.apache.commons.lang3.text.StrTokenizer#reset(String)",
        "org.apache.commons.lang3.text.StrTokenizer.getCSVClone()"
    ],
    "org.apache.commons.lang3.text.ExtendedMessageFormat#insertFormats(String,ArrayList<String>)": [
        "org.apache.commons.lang3.text.ExtendedMessageFormat#appendQuotedString(String,ParsePosition,StringBuilder)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#containsElements(Collection<?>)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#readArgumentIndex(String,ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat#next(ParsePosition)",
        "org.apache.commons.lang3.text.ExtendedMessageFormat.<staticinit>()"
    ]
}