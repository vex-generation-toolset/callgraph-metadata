# SPDX-License-Identifier: Apache-2.0
name: Generate Call Graph
on:
  workflow_dispatch:
    inputs:
      input-repo:
        required: true
        type: string
        description: Repository to analyze in the format owner/repo (e.g., apache/logging-log4j2)
      input-tag:
        required: true
        type: string
        description: Tag or branch to analyze (e.g., rel/2.25.2)
      artifact:
        required: true
        type: string
        description: GAV coordinate of the project to analyze in the format group-id:artifact-id:version (e.g., org.apache.logging.log4j:log4j-core:2.25.2)

run-name: Generate Call Graph for ${{ inputs.artifact }}

# Empty permissions at the workflow level; specific jobs will set their own permissions
permissions: { }

jobs:
  generate-call-graph:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
      - name: Checkout Source Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
        with:
          repository: ${{ inputs.input-repo }}
          ref: ${{ inputs.input-tag }}
          path: source

      - name: Checkout Metadata Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # 5.0.0
        with:
          repository: ${{ github.repository }}
          path: metadata

      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # 3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Call Graph Generation
        shell: bash
        env:
          ARTIFACT: ${{ inputs.artifact }}
        run: |
          # Directory for call graph output
          mkdir -p result
          dest_dir="metadata/metadata/${ARTIFACT//:/\/}"
          mkdir -p "$dest_dir"
          
          # Pull and run the call graph generator
          IMAGE="ghcr.io/vex-generation-toolset/java-callgraph:latest"
          docker pull $IMAGE
          docker run --rm \
            -v "${GITHUB_WORKSPACE}/source:/workspace/source" \
            -v "${GITHUB_WORKSPACE}/result:/workspace/result" \
            $IMAGE
          
          # Move generated call graph to metadata repository
          mv result/*.json "$dest_dir/callgraph.json"

      - name: Commit and Push Call Graph
        shell: bash
        env:
          ARTIFACT: ${{ inputs.artifact }}
        run: |
          cd metadata
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add call graph for ${ARTIFACT}" || echo "No changes to commit"
          git push origin HEAD:main